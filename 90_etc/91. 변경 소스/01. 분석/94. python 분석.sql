
 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+----------------------------------------------// 94. python 분석 //-------------------------------------/ 24.10.17(목) /---+ 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■


- 94. python 분석 @@@
A. gitHub에서 소스 가져오기 @@@
$ git checkout dev		# dev Branch로 전환 ♣
-- $ git branch  		# 리모트 저장소의 branch 정보 확인 ==> 원격(리모트) 저장소 <==> 로컬 저장소 ■
$ git fetch -a		 # 원격 저장소에서 내용 가져오기(merge 안함) ♣
$ git pull origin dev		 # dev Branch에서 내용 가져오기(merge) ♣
==============================================================================================================

B. gitHub에 소스 올리기 @@@
$ git checkout dev		# dev Branch로 전환 ♣
$ git add -a;   	# 3. Git 스테이지 영역에 추가 ♣
$ git commit -m "▶[24.11.06 09:50] 02. 소스 올리기(by 진태만[PC 명: TAMA-HAART-404"  		# 4. Git 로컬 저장소 영역에 커밋 처리 ♣
(PC 명: TAMA-HAART-404, TAMA-WORK-NB-MSI)  --> ▶[24.11.06 09:50] 02. 소스 올리기(by 진태만[PC 명: TAMA-MSI-A10SD-I7-21Y])
$ git push origin main   	# 5. gitHub에 소스 올리기 ♣
$ git log --pretty=format:"%h - %an, %ar : %s"	--since=8.hours   	# 커밋 기록 확인 ♣ ==> q: git log 빠져 나가기
--------------------------------------------------------------------------------------------------------

$ git log -5  	# HEAD 기준 최근 2개만 보여줌 ♣ 
$ git log -p  	# HEAD 기준  마지막 커밋 로그 보여주는데 diff 내용도 보여줌 ♣
$ git log --pretty=oneline --graph --all		# 커밋 기록 확인 ♣
$ git log -5 --oneline  --graph 		# 커밋 기록 확인(최근 5개) ♣
$ git log --oneline --all --graph --decorate  -5		# 커밋 기록 확인(최근 5개) ♣
$ git log --oneline --all --graph --decorate --since=3.hours		# 커밋 기록 확인(최근 3시간 내) ♣
==============================================================================================================
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■


- [GIT] gitignore 작성 정리 (자동 생성 + 작성 규칙)
출처: https://inpa.tistory.com/entry/GIT-??-gitignore-자동-생성 [Inpa Dev 티스토리]

$ git status --ignored  		# ignore 처리된 파일 확인 ♣

$ git rm -r --cached /app/client/text/post_text.sh	# Git 캐시(Cache) 삭제(이미 추적되고 있는 파일을 GIt의 인덱스에서 제거) ♣
$ git add .;
git commit -m "Remove .post_text.sh from index and update .gitignore"		# 커밋 ♣
$ git push origin main 		# gitHub에 소스 올리기 ♣
--------------------------------------------------------------------------------------------------------

$ git log --pretty=format:"%h - %an, %ar : %s"	--since=8.hours   	# 커밋 기록 확인 ♣ ==> q: git log 빠져 나가기
==============================================================================================================
 
$ git reset --merge ORIG_HEAD   # 바로 직전 병합을 취소 ♣
==============================================================================================================
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+--------------------------------------------------------// End //--------------------------------------------------+ 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 





