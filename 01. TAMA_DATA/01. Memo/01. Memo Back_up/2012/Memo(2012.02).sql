

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+---------------------------------------------// Memo(2012.02) //----------------------------------------------------------+
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■


■■■■■■■■■■■■■■■■■■ 2012.02.01(수) 작업 ■■■■■■■■■■■■■■■
---> 09:30 ~ 18:30 --> 첫출근(눈), 석식(윤주영 과장) 

- 통합OSP(/oauth2) Prj
- 통합OSP Proj 첫출근 
1. 프로젝트명: 통합OSP(Open Service Platform) Proj 
2. 기간: 2012.02.01(수) ~ 05.31(목) 
3. 보안 서약서 작성 
3. 노트북 셋팅 
1) 노트북 사양(모델): MSI GT638DX-i7, S/N(제조번호): GT683DX-685XKRK1111000258, PCID: E276CC26D2F59E4D0AFE386A23AC 
2) OS 설치: window7 Professional K 32Bit 
3) MSI LOCK SW(1년 무료): 제품코드: 3363 3E56 A1D4 5EE0 
4. 삼성 무선 마우스 사용: AASM3PWPB 
5. 장소: 서울 강남구 역삼1동 역삼 823빌딩 7층 (주)삼성전자 통합OSP/Proile 프로젝트팀 
6. PM: 나대균 책임, PM보조: 조윤호 사원 
==============================================================================================================

- IP 주소(통합OSP Proj) 
IP 주소: 70.4.78.153, GW: 70.4.78.1 
SM: 255.255.255.0, DNS: 203.241.135.135, 203.241.135.85 
==============================================================================================================

- 파일 서버 
1. \\33.36.11.65\osp123 osp123/qwer1234 
2. V3 S/W 설치: \\33.36.11.65\osp123\00.Common_Project_Software\V3 8.0 
3. OPENPMS(http://122.1.20.204:8080/OPENPMS) ==> tamar/ssj**8** 
- 프린터 서버(Samsung SCX-7635) --> IP 주소: 70.4.78.163 
==============================================================================================================

- Single Sign On: taemanJin.id/ssjtm339(my Single) ==> CMS서비스그룹 
- NASCA: taemanJin.id/ssjtm881 
==============================================================================================================

- 윈도우7 32비트 램 8G 이상 사용(16G 사용) 
http://www.irezia.com/354 
- 윈도우7 정품인증 패치 다운 and 사용법 
http://utilguider.tistory.com/228 
==============================================================================================================

- OSP(Open S Platorm) 프로젝트 설명(전상원 차장) 
1. 토큰 인증(PL: 구영회 차장): 이선미 과장, 윤주영 과장 
2. 통합OSP(PL: 전상원 차장 ==> 추상훈 과장 
3. Profie(PL: 한재준 과장): 조윤호 사원 
4. IDM, 멤버쉽(PL: 조민규 차장): 박성필 과장 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.02(목) 작업 ■■■■■■■■■■■■■■■
---> 08:30 ~ 18:30 --> 집에서 모니터(WIDVIEW MT-202MWT 20.1in) 들고 옴, 헬스장 구경(윤주영 과장: LIG 에이팀) 

- 통합OSP(/oauth2) Prj
- 분석 산출물 분석 
1. key_define_in_SF.pptx. SF_Overall_Design.pptx 
2. OAuth(Open Authorization): 3rd party가 사용자의 ID, 패스워드 대신 Access Token이라는 것을 얻어서 인증이 
필요한 데이터에 접근 할 수 있다는 것입니다. 서비스 제공자는 소비자들에게 요청토큰을 발급해 주어야 하고 소비자들은 
이 요청토큰을 이용하여 사용자정보에 접근하게 된다. 
3. 트위터 twitter API - liboauth를 이용한 OAuth인증 및 API사용 예(http://smok95.tistory.com/214) 
==============================================================================================================

- MSI 노트븍 해상도 설정 
1. VG 카드 드라이버 설치 ==> NVIDIA GTX 570M 
==> NVIDIA 드라이버 다운로드(http://www.nvidia.co.kr/Download/Scan.aspx?lang=kr)에서 자동으로 검색 후 다운로드 받음 
2. 화면 해상도 설정(제어판\모양 및 개인 설정\디스플레이\화면 해상도) 
 1) 디스플레이(S): 1. 모바일 PC 디스플레이(노트북), 2. VGA의 디스플레이 장치(모니터) 
 2) 해상도(R): 192*1080(권장) 
 3) 방향(O): 가로 
 41) 다중 디스플레이(M): 디스플레이 확장 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.03(금) 작업 ■■■■■■■■■■■■■■■
---> 08:30 ~ 18:30 --> SDS 보안 점검(NASCA, ESCORT, ScuPrint 확인) 

- 통합OSP(/oauth2) Prj
- 분석 산출물 분석 
1. 블로그API(OAuth 기반) 튜토리얼 동영상(http://daumdna.tistory.com/664) 
==============================================================================================================

- 통합OSP교육(구영회 차장, 이선미 과장) 
1. OAF(Open API Framework), SF(Security Framework) 
2. S/F & Auth Component 
1) SSO 
2) Access Control 
3) IDM(Identify Data Mgt) ==> LDAP을 Coherence(메모리 캐쉬: 토큰 저장)로 변경 
==============================================================================================================

- 익스체인지 설정 메일(Outlook) 설정 
1. https://ospmail.ospproject.ad/owa/Taemanjin/ssj**8** 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.04(토) 작업 ■■■■■■■■■■■■■■■
---> 08:30 ~ 18:00 --> 휴식 

- 통합OSP(/oauth2) Prj
- 삼성노트북 판매(주남이형에게) 
1. 노트북 세팅 완료 확인 
2. 디카로 노트북 촬영 
3. 주남이형(*@*.*)에게 확인 메일 보내기(판매대금: 20만원, 택배비: 4천 6백원(내가 부담), GS25 편의점 택배) 
==============================================================================================================

- 스탠드 주문 
1. ADJ 2010 스탠드, 가격: 3만원: http://stnote.com/member/orderList.php 
2. 스탠드: http://blog.danawa.com/prod/?blogSection=1&cate_c1=860&cate_c2=13735&cate_c3=14885&cate_c4=14913&depth=4&prod_c=977267 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.05(일) 작업 ■■■■■■■■■■■■■■■
---> 07:00 ~ 18:00 

▦조기축구 
07:50 기상 
08:50 신구초등학교 
09:00 조기축구(5:2 패) ==> 3게임 뜀 
11:10 종료 
11:20 중식(문경세재: 갈비탕(오세림 고문님이 쏨)) 
12:30 종료 
13:30 안(휴: TV시청) 
18:20 이솔(2S): 배려, 정성 
19:50 종료(20 분 초과) 
20:00 석식(백반) 
20:20 종료 
21:00 귀가 
24:00 취침 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.06(월) 작업 ■■■■■■■■■■■■■■■
---> 08:30 ~ 18:30 --> 중식(통합OSP Proj팀 ==> (주)아이엘포유 김성채 팀장님이 쏨) 

- 통합OSP(/oauth2) Prj
- 분석 산출물 분석 
1. P4 설치 및 설정, Eclipse 설정 
2. authentication(인증, 진짜), authorization(허가, 인가) 
==============================================================================================================

- P4 계정 
1. ID/WP ==> il4u_TaemanJin/ss**8** 
==============================================================================================================

- ESCORT 에러 
1. 에러 내용: IE8007 
2. 조치: ESCORT_v5.16(32bit) 설치 
==============================================================================================================

- 통합OSP Proj 계약(아이엘포유) 
1. 기간: 2012.02.01 ~ 05.31 
2. 내용: 정규직(1,050,000원), 프리랜서(*,563,000원) 2가지 계약 체결(총: *,700,000원), 
4대보험, 퇴직금(1개월 일해도 수급 가능) 
3, 계약 대행: (주)아엘포유 SI 사업부 김성채 팀장(H: 010-2352-0): http://www.il4u.co.kr 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.07(화) 작업 ■■■■■■■■■■■■■■■
---> 08:10 ~ 18:30 --> 중식(뼈해장국: 김미영 과장, 내가 쏨, 커피(김과장이 쏨)) 

- 통합OSP(/oauth2) Prj
- 개발 환경 설정 
1. P4 설치 및 설정, Eclipse 설정 
2. authentication(인증, 진짜), authorization(허가, 인가) 
==============================================================================================================

- eclipse 시작 에러 
1. 내용: java was started bu returned exit code=1 
-vm 
2. 해결책: C:\OSP2.5\tools\eclipse\eclipse.ini 파일에 아래 내용 편집 
-vm 
C:\OSP2.5\tools\jdk1.6.0_30\jre\bin\server 
==============================================================================================================

- eclipst 설정 에러 
1. Maven 설정을 변경 ==> C:\OSP2.5\lib_repository/settings.xml 파일 복사해서 붙여넣기 
1. pom.xml 받기(Get latetes Version) 
==> C:\OSP2.5\workspace\IOSP\Source\1. Architect\Sample\trunk\sample-lib\pom.xml 
3. Maven Clean ==> Maven Install 
4. Project Cean 시도 
5. Tomcat v6.0 Server at localhost ==> Open launch configration ==> Argumnets(VM argumnets): 
-Dosp.server.type="local"(추가) 
==============================================================================================================

- 분석 설계＆모델링 전문가 과정(KPC) 
http://www.kpc.or.kr/education/education_table01.asp?Cate_Code=33&cMenu=menu18&cate_NM=SW품질/프로세스/SW아키텍처 
1. 제2차: 2012-06-11(월)~2012-06-15(금), 09:30~17:30 
2. 교육비용: 80만원 
3. 지원금액(고용보험환급): 우선(198,443(예정)), 대규모(161,754(예정)) 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.08(수) 작업 ■■■■■■■■■■■■■■■
---> 08:10 ~ 18:30 --> 모니터 스탠드 설치, 개발 일일 업무 내역 작성(오늘부터, 17시에 작성할 것) 

- 통합OSP(/oauth2) Prj
- oauth2 분석 
1. 개발 환경 세팅(TestCient 설치) 
2. Auth2.0 프로세스 분석(이선미 과장 설명) 
==============================================================================================================

- oauth2 프로세스 FLOW 
1. 시작: http://174.129.22.119/auth/oauth2/authenticate 
2. /profile-ear/profile-web/WebContent/WEB-INF/web.xml 파일에서 
<servlet-mapping> 
	<servlet-name>Oauth2Servlet</servlet-name> 
	<url-pattern>/oauth2/*</url-pattern> 
</servlet-mapping> 

2. /profile-ear/profile-web/src/java/com/samsungosp/profile/oauth2/servlet/Oauth2Servlet.java 파일에서 
public class Oauth2Servlet extends HttpServlet { 
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) hrows ServletException, IOException { 
		if (pathInfo != null &&( pathInfo.startsWith("authenticate")  pathInfo.startsWith("/authenticate"))) { 
			//-------------------------------------------------------------------------- 
			// 2. Spring authenticate.do 
			//-------------------------------------------------------------------------- 
			RequestDispatcher view = req.getRequestDispatcher("/authservice/authenticate.do"); 
			view.forward(req, resp); 
		} 
	} 
} 

3. /profile-ear/profile-web/WebContent/WEB-INF/spring/applicationContextProfile.xml 파일에서 
<bean id="oauth2ControllerResolver" class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver"> 
	<property name="mappings"> 
	<props> 
	<!-- prop의 값은 호출되는 컨트롤러의 메소드명 --> 
	<prop key="/authservice/authenticate.do">authenticate</prop> 
	<prop key="/authservice/deauthenticate.do">deauthenticate</prop> 
	<prop key="/authservice/revoke.do">revoke</prop> 
	<prop key="/authservice/authorize.do">authorize</prop> 
	<prop key="/authservice/token.do">token</prop> 
	</props> 
	</property> 
</bean> 

<bean id="oauth2Controller" class="com.samsungosp.profile.oauth2.action.Oauth2Controller" p:methodNameResolver-ref="oauth2ControllerResolver"> 
	<property name="oauth2Biz" ref="oauth2Biz"/> 
	<property name="oauth2ErrorUtil" ref="oauth2ErrorUtil"/> 
</bean> 

4. /profile-ear/profile-web/src/java/com/samsungosp/profile/oauth2/action/Oauth2Controller.java 파일에서 
public void authenticate(HttpServletRequest request, HttpServletResponse response) throws Exception { 
try { 
// 1. request 저장 userauth_token 발행 
// ---------------------------------------------------------------------------------- 
// 1.2 return JSONObject 
// ---------------------------------------------------------------------------------- 
jsonObject = oauth2Biz.postUserToken(requestUserauthTokenVO); 

// ---------------------------------------------------------------------------------- 
// 1.3 response 객체 작성 
// ---------------------------------------------------------------------------------- 
log.info(jsonObject); 
} 
} 

5. /profile-ear/profile-lib/src/java/com/samsungosp/profile/oauth2/biz/Oauth2Biz.java 파일에서 
public interface Oauth2Biz{  
public JSONObject postUserToken(RequestTokenVO passwordVO) throws Oauth2Exception; 
} 

6. /profile-ear/profile-lib/src/java/com/samsungosp/profile/oauth2/biz/Oauth2BizImpl.java 파일에서 
public class Oauth2BizImpl implements Oauth2Biz { 
//-------------------------------------------------------------------------- 
// Modified Resource Owner Password Credentials Flow (UserAuthToken) 
//-------------------------------------------------------------------------- 
public JSONObject postUserToken(RequestTokenVO passwordVO) throws Oauth2Exception { 
try { 
if (oauth2VerifyBiz.verifyPasswordVO(passwordVO)){ //요청 비밀번호가 UserBiz 비밀번호와 같으면(검증 함수() 호출) 
//약관 동의 추가 
if(validLogin(passwordVO)) { //약관 동의 함수() 호출 
// UserAuthToken 발급 biz flow 
userAuthToken = oauth2IssueBiz.issueUserAuthToken(passwordVO); //AuthToken 발행 함수() 호출 
userAuthTokenResultVO.setUserAuthToken(userAuthToken); 
userAuthTokenResultVO.setUserAuthTokenExpiresIn(userAuthTokenExpiresIn); 
jsonObjUserAuthToken = jsonObjUtil.getJSONObject(userAuthTokenResultVO); 
jsonObj = jsonObjUserAuthToken; 

// Code 발급 biz flow 
if(Oauth2LibConstants.SERVICE_GRANT_RESPONSE_TYPE_CODE.equals(passwordVO.getResponse_type())) { 
// Parameter Setting for Code flow 
RequestAuthorizeVO userRequestAuthorizeVO = new RequestAuthorizeVO(); 
userRequestAuthorizeVO.setResponse_type(passwordVO.getResponse_type()); 
userRequestAuthorizeVO.setClient_id(passwordVO.getClient_id()); 
userRequestAuthorizeVO.setScope(passwordVO.getScope()); 
userRequestAuthorizeVO.setUserauth_token(userAuthToken); 
userRequestAuthorizeVO.setPhysical_address_text(passwordVO.getPhysical_address_text()); 

if(passwordVO.getService_type() == null){ 
userRequestAuthorizeVO.setService_type("M"); 
} 
else { 
userRequestAuthorizeVO.setService_type(passwordVO.getService_type()); 
} 
log.info("userRequestAuthorizeVO of UserAuth+Code:"+userRequestAuthorizeVO.toString()); 

// Call Code biz flow 
jsonObjCode = this.getUserAuthorizationCode(userRequestAuthorizeVO); 
// Merge jsonOject (userAuthToken and Code) 
jsonObj = jsonObjUtil.getMergeJSONObject(jsonObjUserAuthToken, jsonObjCode); 
}  
}  
} 
}  
return jsonObj; 
} 
} 
} 

7. /profile-ear/profile-lib/src/java/com/samsungosp/profile/oauth2/biz/Oauth2VerifyBiz.java 파일에서 
public interface Oauth2VerifyBiz{ 
public boolean verifyPasswordVO(RequestTokenVO passwordVO) throws Oauth2Exception; 
} 

8. /profile-ear/profile-lib/src/java/com/samsungosp/profile/oauth2/biz/Oauth2VerifyBizImpl.java 파일에서 
public class Oauth2VerifyBizImpl implements Oauth2VerifyBiz { 
public boolean verifyPasswordVO(RequestTokenVO passwordVO) throws Oauth2Exception {  
//--------------------------------------------------------------------------------- 
// Resource Owner Password Credentials AccessToken 위한 검증 @ Cache Pool 
// (grant_type, username, password, client_id, client_secret, scope) 
//--------------------------------------------------------------------------------- 
boolean result = false; 
Oauth2IsVaildUserVO oauth2IsVaildUserVOResult; 
String resource = "verifyPasswordVO()"; 

//--------------------------------------------------------------------------------- 
// oracle DB를 openLDAP를 이용하여 사용자 유무 및 패스워드 일치 여부 조회 
// (username, password) 
//--------------------------------------------------------------------------------- 
try { 
oauth2IsVaildUserVOResult = isValidUser(passwordVO.getUsername(), passwordVO.getPassword()); //User 검증 함수() 호출 

if (oauth2IsVaildUserVOResult.isValue()){ 
passwordVO.setUserId(oauth2IsVaildUserVOResult.isUserID()); 
//--------------------------------------------------------------------------------- 
// Client_id 관련 parameter 검증 @ Cache Pool 
// (grant_type, client_id, client_secret, scope) 
//---------------------------------------------------------------------------------  
Oauth2ClientInfoVO oauth2ClientInfoVO = new Oauth2ClientInfoVO(); 
// client_id, client_secret 
oauth2ClientInfoVO.setClient_id(passwordVO.getClient_id()); 
oauth2ClientInfoVO.setClient_secret(passwordVO.getClient_secret()); 
//--------------------------------------------------------------------------------- 
// User Authorization Flow 검증 @ Cache Pool 
//---------------------------------------------------------------------------------  
result = verifyClientInfo(oauth2ClientInfoVO, Oauth2LibConstants.SERVICE_GRANT_TYPE); 
} 
} 

return result; 
} 

public Oauth2IsVaildUserVO isValidUser(String username, String password) throws Oauth2Exception {  
Oauth2IsVaildUserVO oauth2IsVaildUserVO = new Oauth2IsVaildUserVO(); 
String resource = "isValidUser()"; 
//--------------------------------------------------------------------------------- 
// Before UserBIz API 호출 (Parameter Setting) 
//--------------------------------------------------------------------------------- 
if(username == null  "".equals(username)){ 
throw new Oauth2Exception(oauth2ErrorUtil.setError(resource, Oauth2LibConstants.HTTPSTATUS_400, 
Oauth2LibConstants.AUT_1000_CODE , Oauth2LibConstants.AUT_1003_CODE)); 
} 
if(password == null  "".equals(password)){ 
throw new Oauth2Exception(oauth2ErrorUtil.setError(resource, Oauth2LibConstants.HTTPSTATUS_400, 
Oauth2LibConstants.AUT_1000_CODE , Oauth2LibConstants.AUT_1004_CODE)); 
} 

UserIdentificationVO userIdentificationVO = new UserIdentificationVO(); 
UserIdentificationVO userIdentificationVOResult = null; 
userIdentificationVO.setLoginID(username); 
userIdentificationVO.setLoginIDTypeCode(UserConstants.LOGINID_TYPE_CODE_EMAILID); 

try { 
//--------------------------------------------------------------------------------- 
// User 검증 위한 UserBIz API 호출(/UserBiz.java 호출) 
//--------------------------------------------------------------------------------- 
userIdentificationVOResult = userBiz.getUserIdentification(userIdentificationVO); 
//--------------------------------------------------------------------------------- 
// After UserBIz API 호출 
//--------------------------------------------------------------------------------- 
if (userIdentificationVOResult == null ) { 
//--------------------------------------------------------------------------------- 
// Error (invalid_grant, Incorrect Username) 
//--------------------------------------------------------------------------------- 
// (methodName, errorCode, statusCode, errorCodeDesc) 
throw new Oauth2Exception(oauth2ErrorUtil.setError(resource, Oauth2LibConstants.HTTPSTATUS_400, 
Oauth2LibConstants.AUT_1800_CODE , Oauth2LibConstants.AUT_1804_CODE)); 
} 
else { 
//--------------------------------------------------------------------------------- 
// password encoding 
//--------------------------------------------------------------------------------- 
String encodingPassword = null; 
encodingPassword = SecurityUtil.getEncPassword(password, this); 

if (userIdentificationVOResult.getUserPassword().equals(encodingPassword)){ 
oauth2IsVaildUserVO.setValue(true); 
oauth2IsVaildUserVO.setUserID(userIdentificationVOResult.getUserID()); //UserID 셋팅 
} 
} 

return oauth2IsVaildUserVO; 
} 
} 
} 
==============================================================================================================

- 로그 처리 
1. log.debug("[getGuide()] ==> [index] :"+ index ); 
2. log.debug("[joinTNCAcceptance()][isAcceptedRecentTNC] :"+ isAcceptedRecentTNC ); 
3. out.print(jsonObject); 
4. log.info("[joinTNCAcceptance()][isAcceptedRecentTNC] :"+ isAcceptedRecentTNC );  
==============================================================================================================

- 드라이버 구매(길거리에서 구매) 
1. 드라이버(huayi tools, 중국제): 2개(4천원) 
2. 오피스디포 코리아 강남대로점(02-2055-0706) ==> 안감 
==============================================================================================================

- GS&POINT 멤버쉽카드 등록 
1. GS리테일(https://www.gsretail.com): GS25편의점에서 사용 
2. 카드번호: 0190710480974094 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.09(목) 작업 ■■■■■■■■■■■■■■■
---> 08:10 ~ 18:30 --> 7층 출입증(번호: 0608) 나옴 

- 통합OSP(/oauth2) Prj
- oauth2 분석 
1. Auth2.0 프로세스 분석 
1) authorize: 프로세스 FLOW 중심 분석 
2. 개발 환경 설정 
1) oauth2 Eclipse Project 생성(oauth2-lib, oauth2-svc): com.samsungosp.oauth2 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.10(금) 작업 ■■■■■■■■■■■■■■■
---> 07:00 ~ 19:00 

- 통합OSP(/oauth2) Prj
- Auth2 createUserAuthToken API 개발 
1. Open API Annotation 분석 
==============================================================================================================

- Eclipse Project 생성 
Project name: oauth2-lib ===> Simple Spring Utility Project 
Location: C:\OSP2.5\workspace\IOSP\Source\2.Account\Auth\trunk\oauth2-lib 
package: com.samsungosp.auth.oauth2 

Project name: oauth2-svc ===> Spring MVC Project 
Location: C:\OSP2.5\workspace\IOSP\Source\2.Account\Auth\trunk\oauth2-svc 
package: com.samsungosp.auth.oauth2 
==============================================================================================================

- Advenced REST Client 설치 
http://localhost:8080/v2/sample/guides/1 
Accept: text/xml, Content-Type: text/xml 

http://localhost:8080/v2/auth/oauth2/authenticate 
http://localhost:8080/v2/profile/user/user/{userid} 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.11(토) 작업 ■■■■■■■■■■■■■■■
---> 08:30 ~ 18:00 --> 인터넷 안됨(SK 브로드밴드: 장애 신고함) 

- 당구, 국결모임
10:00 기상 
11:00 중식 
13:30 쉐르빌 당구클럽(서울 동작구 신대방동 395-66 삼성 쉐로빌 빌딩 B1), T)070-8872-7171 
	- 세븐 당구 동호회(http://cafe.daum.net/8440566/O6tt/1): 첫날 회비(만원) 
13:40 주인에게 기초 강습 받음 
14:30 게임(루루라라님: 2:0 패(수지 50)) 
17:20 종료 
18:10 종암역 2번 출구 
18:30 국결행사 2월 인천정모 참석(2월 11일(토) 19시) 
	- 동암막창숯불갈비(032-439-4319)(인천시 부평구 십정동 297-77번지) 
	- 가원커플 결혼정보(http://www.gawoncouple.com) 최은영 실장(H)017-321-6314) => 라오스, 베트남 추천, 3월 포항 방문 
23:00 종료 
24:10 신도림역(2호선 지하철 끊김) 
24:20 택시(10,500원) 
24:40 귀가 
01:20 취침 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.12(일) 작업 ■■■■■■■■■■■■■■■
---> 07:00 ~ 18:00 

▦조기축구
07:00 기상 
07:20 수도세 송금: 제일은행(179-20-160578 예금주: 정평순) ==> 2011년치 수도세 완납(월 5천 -> 6만원) 
08:40 신구초등학교 
09:00 조기축구(5:2 승) ==> 2게임 뜀 
11:10 종료 
11:20 중식(수정식당: 1만원냄) 
14:10 종료 
15:10 쉐르빌 당구클럽2 ==> 회비(만 천 원) 
16:00 게임(vvadak님: 2:1 승(수지 50)) 
19:20 종료 
20:00 귀가 
24:00 취침 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.13(월) 작업 ■■■■■■■■■■■■■■■
---> 07:15 ~ 19:30 --> 구차장 면담(서버 환경 세팅 문제 덜먹임, 자존심 상함, 철수 요청), 김팀장에 보고 

- 통합OSP(/oauth2) Prj
- Sample 소스 환경 설정 
1. /sample-lib 설정 
2. /sample-svc 설정 
1) GET 방식 
http://localhost:8080/v2/sample/guides/ 
가. Headers 
Accept: text/xml, Content-Type: text/xml 

2) POST 방식 
http://localhost:8080/v2/sample/guides/guide 
가. Headers 
Accept: text/xml, Content-Type: text/xml 
x-osp-version: 2.5, x-osp-localTxId: local001, x-osp-globalTxId: global002 
나. Body 
<guide> 
<id>0</id> 
<name>guide-1</name> 
<option>Y</option> 
<div>1</div> 
<content>guide sample data 0</content> 
</guide> 
==============================================================================================================

- Auth2 createUserAuthToken API 개발 
1. Open API Annotation 분석 
1) /sample-svc/pom.xml 파일 수정 
2) /oauth2-svc/src/main/java/com/samsungosp/auth/oauth2/service/AuthServiceResource.java 파일 생성 
3) /oauth2-svc/src/main/java/com/samsungosp/auth/oauth2/service/AuthServiceResourceImple.java 파일 생성 
4) REST Client 테스트 
http://localhost:8080/v2/sample/oauth2/authenticate 
http://localhost:8080/v2/auth/oauth2/authenticate 
Accept: text/xml, Content-Type: text/xml 
==============================================================================================================

- Maven 처리 
Maven --> Upate Dependencies --> Upate Maven Dependencies: 선택: OK(클릭) 
Delete ==> sample-svc: 삭제 --> Delete Resources: (파일 삭제 안함): OK(클릭) 
==============================================================================================================

- sample-svc 소스 위치 
1. \\OSP\IOSPS\Source/Source\Sample\trunk\sample-lib, sample-svc 
1) C:\OSP2.5\localhome\comp\sample\resources\logs\local\log4j.xml 

/sample-svc/src/main/java/com/samsungosp/sample/samples/service/GuideServiceResourceImpl.java 파일에서 
@Controller 
@RequestMapping("/guides") 
public class GuideServiceResourceImpl extends BaseServiceResource implements GuideServiceResource { 
@OSP( category="guide", function="G02") 
@RequestMapping(value="/{index}", method=RequestMethod.GET) 
public ModelAndView getGuide(@PathVariable int index) throws Exception {  
	createGuidesData(); 
	GuideVO guideVO = guideBiz.getGuide(index); 

	return success("sample", guideVO); 
	} 
} 
==============================================================================================================

- book store 테스트 
http://localhost:8080/booksearch/authors/1 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.14(화) 작업 ■■■■■■■■■■■■■■■
---> 07:50 ~ 18:50 --> 나대균 PM 면담(역할 최선), 회식(통합OSP/Profile팀, 옛날농장(21시 종료))

- 통합OSP(/oauth2) Prj
- oauth2 환경 설정 
1. /AuthServiceResourceImple.java 파일 생성 
com.samsungosp.profile.user; --> com.samsungosp.auth.user; 
==============================================================================================================

- license 등록(/oauth2-lib/pom.xml 파일에서) 
<!-- license Registration --> 
<dependency> 
	<groupId>com.samsungosp.license</groupId> 
	<artifactId>osp-cachemanager</artifactId> 
	<version>2.0</version> 
</dependency> 

<!-- OSPMemory CacheManager(사용 안함) --> 
<dependency> 
	<groupId>com.samsungosp.license</groupId> 
	<artifactId>coherencecluster-manager</artifactId> 
	<version>1.0.0</version> 
</dependency> 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.15(수) 작업 ■■■■■■■■■■■■■■■
---> 07:15 ~ 21:30 --> 인터넷 모뎀 새것 교채(T100, SK 브로드밴드, H)010-9090-4188), 김성태 팀장 방문(최선, 인정) 

- 통합OSP(/oauth2) Prj
- oauth2 환경 설정 
1. lib 파일 위치 
C:\OSP2.5\workspace\OSPS2.0\OSP2_PJT\Profile\trunk\profile-ear\EarContent\APP-INF\lib 
C:\OSP2.5\workspace\OSPS2.0\OSP2_PJT\Profile\trunk\profile-ear\lib 
http://localhost:8080/v2/auth/oauth2/authenticate ==> getGuide() 
http://localhost:8080/v2/sample/guides/guide 

http://localhost:8080/v2/auth/oauth2/1 ==> getGuide() 
http://localhost:8080/v2/sample/guides/guide ==> insertGuide() 
==============================================================================================================

- PROFILE SSO 회의(이주환 선임(설명), 이진욱 선임, 구형회 차장) 
1. http://www.java.net에서 파일 다운 받아서 .java 파일 수정 후 .war로 묶기 
2. LDAP(Open DS)를 Coherence 변경에 따른 문제 
1) 최대 세션 시간(240분), 최대 유효 시간(30분): 토근 pool 2개 생성 문제 
2) .java 파일에서 LDAP(Open DS)과이 연결 고리 찾기 
==============================================================================================================

- P4에러(폴더에 새로운 파일 만들지 말 것 -> 만들었다면 Submit 할 것) 
1. Can't clobber writable file C:\OSP2.5\workspace\IOSP\Co-work\1. IOSP 공식문서\1. Archtect\5.표준 Framework\OSP2.5.zip 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.16(목) 작업 ■■■■■■■■■■■■■■■
---> 07:20 ~ 22:00 

- 통합OSP(/oauth2) Prj
- oauth2 환경 설정 
1. /authenticate 수정 
==============================================================================================================

- Maven 신규 프로젝트 생성(/oauth2-lib/pom.xml 파일에서) 
1. Group Id: com.samsungosp 
2. Artifract Id: oauth2-lib 
3. Packing: jar 
4. Project Name Id: com.samsungosp.sample 
==============================================================================================================

- workspace Tree 생성 
1. workspace: ws_TaemanJin51_dev 
2. Root: D:\OSP2.5\workspace\DOC 
==============================================================================================================

- SSO 회의(이주환 선임(설명), 이진욱 선임, 구형회 차장)(13:00 ~14:00) 
1. OPEN SSO 모듈에서 LDAP 연결부분 분석(opensso project): datalayer.java 
1) 다음주에 화요일에 다시 회의 
2. Coh data repository를 바꾸는 것 관련된 정보 
1) http://www.badgers-in-foil.co.uk/notes/installing_a_custom_opensso_identity_repository/ 
==============================================================================================================

- Social DB 교육(16:00 ~ 17:40) 
1. 전상원 과장 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.17(금) 작업 ■■■■■■■■■■■■■■■
---> 07:10 ~ 22:00 

- 통합OSP(/oauth2) Prj
- 2.0 Auth component 2.5 upgrade 
1. createUserAuthToken API 수정 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() 
2. Annotation 구현(소스 구현 완료) 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.18(토) 작업 ■■■■■■■■■■■■■■■
---> 07:20 ~ 14:00 --> 중식(광양 불고기: 현용, 내가 쏨), 국화 당구장(종업원, 화가: 4:3 패(80), 회비, 만 원) 

- 통합OSP(/oauth2) Prj
- OPENSSO 분석 
1. java.net>projects>opensso>source code>Subversion --> com.iplanet.ums.datalayer.java 
http://java.net/projects/opensso/sources/svn/show/trunk/products/amserver/source/com/sun/identity/rest?rev=8653 
2. Open SSO에서Open DS(LDAP)을 Coherence로 변경하는데 문제점 
1) 사용하고 있는 Open DS(LDAP) 소스 분석 문제 
2) Coherence에 토근 로직 구현(Coherence 분석 필요) 
3) Coherence에 2개 이상의 토근을 설정할 수 있는 가?(최대 세션 시간(240분), 최대 유효 시간(30분) 
==============================================================================================================

- 휴대폰 
1. 옵티머스2X : 기본료+단말기: 26,483원(24개월), * ===> SKT 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&no=104663 
1. 갤럭시M: 기본료+단말기: 35,538원(24개월)(4월 이후 28,883원 변경 가능) 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&no=104693 
1. 갤럭시NEXUS: 기본료+단말기: 30,900원(36개월), 할부원금: 57만 6천원, 54요금제, T)032-501-0401, *@*.* 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&page=1&sn1=&divpage=21&category=3&sn=off&ss=off
&sc=off&keyword=%C0%DA%C0%AF&select_arrange=headnum&search_type=subject&desc=asc&no=100692 
2. 갤럭시M: 기본료+단말기: 16,400원(36개월), 할부원금: 44만원, 34요금제 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&page=1&sn1=&divpage=21&category=3&sn=off&ss=off
&sc=off&keyword=%C0%DA%C0%AF&select_arrange=headnum&search_type=subject&desc=asc&no=100692 
3. 갤럭시S2: 기본료+단말기: 23,100원(36개월), 할부원금: 61만 6천원, 44요금제 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&page=1&sn1=&divpage=21&category=3&sn=off&ss=off
&sc=off&keyword=%C0%DA%C0%AF&select_arrange=headnum&search_type=subject&desc=asc&no=100692 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&page=1&sn1=&divpage=21&category=3&sn=off&ss=off
&sc=off&keyword=%C0%DA%C0%AF&select_arrange=headnum&search_type=subject&desc=asc&no=98789 
1. 갤럭시GIO 
http://www.ppomppu.co.kr/zboard/view.php?id=pmarket2&page=1&sn1=&divpage=21&category=3&sn=off&ss=off
&sc=off&keyword=%C0%DA%C0%AF&select_arrange=headnum&search_type=subject&desc=asc&no=102846 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.19(일) 작업 ■■■■■■■■■■■■■■■
---> 07:00 ~ 18:00 

▦조기축구
07:30 기상 
08:30 신구초등학교 
09:00 조기축구(6:2 승) ==> 2게임 뜀 
11:00 종료 
11:20 중식(문경세재: 회원 결혼 딸 감사로 쏨) 
14:10 종료 
15:00 국화 당구장2(회비, 만 원) ==> 주소: 서울 관악구 봉천동 1567-7(국화당구카페: http://cafe.daum.net/4c3c?t__nil_cafemy=item) 
15:10 게임(종업원: 2:1 패(수지 80)) 
18:30 종료 
18:40 귀가 
20:30 석식(밥, 라면) 
23:00 취침 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.20(월) 작업 ■■■■■■■■■■■■■■■
---> 07:30 ~ 22:00 

- 통합OSP(/oauth2) Prj
- 2.0 Auth component 2.5 upgrade 구현 
1. java 파일 변경 
1) import osp.framework.OSPException; ==> import com.samsungosp.framework.exception.OSPException;  
2) import osp.framework.Property; ==> import com.samsungosp.framework.util.PropertyUtil;  
2. Maven 빌드 위치 
1) C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc 
\WEB-INF\classes\spring\applicationContext-datasource.xml 
==============================================================================================================

- 2.0 Auth component 2.5 upgrade  
1. createUserAuthToken API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() -> 01_Auth_authenticate 
2. createAuthorizationCode API 구현 
http://localhost:8080/v2/auth/oauth2/authorize ==> createAuthorizationCode() -> 02_Auth_authorize 
3. createAccessToken API 구현 
http://localhost:8080/v2/auth/oauth2/token ==> createAccessToken() -> 03_Auth_token 
4. deauthenticate API 구현 
http://localhost:8080/v2/auth/oauth2/deauthenticate ==> deauthenticate() -> 04_Auth_deauthenticate 
5. revoke API 구현 
http://localhost:8080/v2/auth/oauth2/revoke ==> revoke() -> 05_Auth_revoke 
6. isvalid API 구현 
http://localhost:8080/v2/auth/user/isvalid ==> isvalid() -> 06_User_isvalid 
/profile-ear/profile-web/src/java/com/samsungosp/profile/oauth2/servlet/UserServlet.java 
==============================================================================================================

- OPENSSO 분석 
1. 소스 분석 
==============================================================================================================

- 통합OSP 환경 설정 회의(17:00 ~ 19:00) 
1. sample-lib, sample-svc 설명 및 설정 ==> Infra를 담당 홍성준 차장 
==============================================================================================================

- 국결행사 
1. 최은영 실장(H)017-321-6314) *@*.*, 2월 25일(일) 11시 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.21(화) 작업 ■■■■■■■■■■■■■■■
---> 07:10 ~ 22:00 --> oauth2 환경 셋팅 성공, SSO 개발 보류 

- 통합OSP(/oauth2) Prj
- createAuthorizationCode API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createAuthorizationCode() 

1. 서버 Start 에러 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultSqlSessionFactory'  
defined in file [C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps 
\oauth2-svc\WEB-INF\classes\spring\applicationContext-datasource.xml]: Invocation of init method failed;  
nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 
'URL [jar:file:/C:/OSP2.5/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps 
/oauth2-svc/WEB-INF/lib/oauth2-lib-0.0.1-SNAPSHOT.jar!/com/samsungosp/sample/guide/dao/sql/SampleDAO.xml]';  
nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException:  
Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'sampleVO'.  
Cause: java.lang.ClassNotFoundException: Cannot find class: sampleVO 
===> SampleDAO.xml에 있는 sampleVO 파일을 해당 경로에 생성해 줌 
----------------------------------------------------------------------------------------------------------------------------- 

2. 서버 Start 에러2 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xstreamMarshaller'  
defined in ServletContext resource [/WEB-INF/spring/config/servlet-rest.xml]: Initialization of bean failed; nested  
exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type  
'java.util.ArrayList' to required type 'java.lang.Class[]' for property 'annotatedClasses'; nested exception is  
java.lang.IllegalArgumentException: Cannot find class [com.samsungosp.sample.samples.vo.SamplesVO] 
===> servlet-rest.xml 파일에서 SamplesVO 부분 제거 
==============================================================================================================

3. 서버 Start 에러3 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultSqlSessionFactory'  
defined in file [C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc 
\WEB-INF\classes\spring\applicationContext-datasource.xml]: Invocation of init method failed; nested exception is  
org.springframework.core.NestedIOException: Failed to parse mapping resource: 'URL [jar:file:/C:/OSP2.5/workspac 
e/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/oauth2-svc/WEB-INF/lib/oauth2-lib-0.0.1-SNAPSHOT.jar!/ 
com/samsungosp/auth/user/dao/sql/commonDAO.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML.  
Cause: java.lang.NullPointerExceptionat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory 
.initializeBean(AbstractAutowireCapableBeanFactory.java:1420) 
===> servlet-rest.xml 파일에서 스프링에서 관리하는 data sources 부분 주석처리 

<!--  
<bean id="defaultDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
<property name="driverClassName" value="${mysql.jdbc.driverClassName}" /> 
<property name="url" value="${mysql.jdbc.url}" /> 
<property name="username" value="${mysql.jdbc.username}" /> 
<property name="password" value="${mysql.jdbc.password}" /> 
<property name="initialSize" value="10"/> 
<property name="maxActive" value="30"/> 
<property name="maxIdle" value="15" /> 
<property name="minIdle" value="15" /> 
<property name="testOnBorrow" value="false" /> 
<property name="validationQuery" value="select 1" /> 
<property name="timeBetweenEvictionRunsMillis" value="10000" /> 
<property name="testWhileIdle" value="true" />  
<property name="numTestsPerEvictionRun" value="3" />  
<property name="minEvictableIdleTimeMillis" value="-1" /> 
</bean>  
--> 
==============================================================================================================

1. createUserAuthToken 에러1 
/****************** Request Information ***************************/ 
- req URL : /v2/auth/oauth2/authenticate 
- req URI func : /oauth2/authenticate 
- req method : POST 
- remoteAddr : 0:0:0:0:0:0:0:1 
- requestTime : 1329783216127 
- responseTime : 1329783216127 
- result code : 1003 
- exception : org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException:  
No matching handler method found for servlet request: path '/oauth2/authenticate', method 'POST',  
parameters map['username' -> array<String>['1semi.*@*.*'], 'client_secret' -> array<String> 
['5763D0052DC1462E13751F753384E9A9'], 'grant_type' -> array<String>['password'], 'client_id' -> array<String> 
['j5p7ll8g33'], 'password' -> array<String>['qwertqwert']] 
/*****************************************************************/ 
===> AuthServiceResourceImpl.java 파일에서(value="/guide" --> value="/authenticate"로 변경) 
@OSP( category="auth", function="G01") 
@RequestMapping(value="/authenticate", method=RequestMethod.POST) 
public ModelAndView createUserAuthToken(OSPHttpHeaderInfo headers, @RequestBody RequestTokenVO 
requestUserauthTokenVO) throws Exception;  
-------------------------------------------------------------------------------------------------------------------

2. createUserAuthToken 에러2 
1) Content type 에러('application/x-www-form-urlencoded': POST 방식으로 전송)  
/****************** Request Information ***************************/ 
- req URL : /v2/auth/oauth2/authenticate 
- req URI func : /oauth2/authenticate 
- req method : POST 
- remoteAddr : 0:0:0:0:0:0:0:1 
- requestTime : 1329787004349 
- responseTime : 1329787004349 
- result code : 1004 
- exception : org.springframework.web.HttpMediaTypeNotSupportedException: Content type
'application/x-www-form-urlencoded' not supported 
/*****************************************************************/  
===> AuthServiceResourceImpl.java 파일에서(headers={"content-type=text/xml","accept=text/xml"} 추가) 
@RequestMapping(value="/authenticate", method=RequestMethod.POST, headers={"content-type=text/xml","accept=text/xml"})  

===>  
/oauth2-svc/src/main/resources/spring/applicationContext-marshaller.xml 파일에서 사용할 VO 등록할 것 
<bean id="xstreamMarshaller" class="com.samsungosp.framework.oxm.xstream.XStreamMarshaller"> 
<property name="autodetectAnnotations" value="false"/> 
<property name="annotatedClasses"> 
<list> 
<value>java.util.List</value> 
<value>java.util.Map</value>  
<value>com.samsungosp.framework.model.ErrorVO</value>  
<!-- OSP 2.0 oauth2 VO --> 
<value>com.samsungosp.auth.oauth2.vo.RequestTokenVO</value>  
<!-- OSP 2.0 oauth2 VO -->  
</list> 
</property>  
<property name="supportedClasses">  
<list> 
<value>java.util.List</value> 
<value>java.util.Map</value>  
<value>com.samsungosp.framework.model.ErrorVO</value>  
<!-- OSP 2.0 oauth2 VO --> 
<value>com.samsungosp.auth.oauth2.vo.RequestTokenVO</value>  
<!-- OSP 2.0 oauth2 VO -->  
</list> 
</property>  
</bean>  
---------------------------------------------------------------------------------------------------------- 

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultSqlSessionFactory' defined in file  
C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc\WEB-INF\classes\spring 
\applicationContext-datasource.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 
'URL [jar:file:/C:/OSP2.5/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/oauth2-svc/WEB-INF/lib/oauth2-lib-0.0.1-SNAPSHOT.jar! 
/com/samsungosp/auth/user/dao/sql/commonDAO.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: java.lang.NullPointerException 
---------------------------------------------------------------------------------------------------------- 

- request Body(Content type: application/x-www-form-urlencodedl) 
grant_type=password&client_id=j5p7ll8g33&client_secret=5763D0052DC1462E13751F753384E9A9&username=1semi.*@*.*&password=qwertqwert 

- request Body(Content type: text/xml) 
<?xml version="1.0" encoding="utf-8"?> 
<requestTokenVO> 
<grant_type>password</grant_type>  
<client_id>j5p7ll8g33</client_id> 
<client_secret>5763D0052DC1462E13751F753384E9A9</client_secret> 
<username>1semi.*@*.*</username> 
<password>qwertqwert</password> 
</requestTokenVO>  
==============================================================================================================

- ibatis에서 mybatis로 수정(DB연결) 
1. commonDAO.xml 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.22(수) 작업 ■■■■■■■■■■■■■■■
---> 07:15 ~ 21:20  

- 통합OSP(/oauth2) Prj
- createAuthorizationCode API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createAuthorizationCode() 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageSource' defined in file [C:\OSP2.5\workspace\.metadata\. 
plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc\WEB-INF\classes\spring\applicationContext-resource.xml]: BeanPostProcessor before 
instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop. 
aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting  
constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)':  
Cannot create inner bean '(inner bean)' of type [org.springframework.aop.config.MethodLocatingFactoryBean] while setting constructor argument; nested exception 
is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Initialization of bean failed; nested exception is  
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.samsungosp.framework.aspect.OSPLoggingAspect] for bean with  
name 'loggingAspect' defined in file [C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc\WEB-INF\classes 
\spring\applicationContext-aop.xml]; nested exception is java.lang.ClassNotFoundException: com.samsungosp.framework.aspect.OSPLoggingAspect 

Related cause: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.samsungosp.framework.oxm.xstream.XStreamMarshaller] f 
or bean with name 'xstreamMarshaller' defined in file [C:\OSP2.5\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\oauth2-svc 
\WEB-INF\classes\spring\applicationContext-marshaller.xml]; nested exception is java.lang.ClassNotFoundException: com.samsungosp.framework.oxm.xstream.XStreamMarshaller 
===> 1. C:\OSP2.5\workspace\IOSP\Source\2.Account\Auth\trunk\oauth2-svc\target 폴더 삭제 후 Mavern 다시 실행할 것 
2. 서버 Start시 파일 확인할 것 
C:\OSP2.5\workspace\IOSP\Source\2.Account\Auth\trunk\oauth2-svc\target\osp-framework-0.0.1-20120215.114940-11.jar  
==============================================================================================================

- userTNCContentVO 에러 
1. 원인: typeAlias 설정 안함 
2. 조치: /oauth2-lib/src/main/resources/config/mybatisConfig.xml파일에서 typeAlias 설정 
<typeAliases> 
<typeAlias alias="userTNCContentVO" type="com.samsungosp.auth.user.vo.UserTNCContentVO"/> 
</typeAliases> 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.23(목) 작업 ■■■■■■■■■■■■■■■
---> 06:40 ~ 21:30 --> OSP2.0 SM 원종선 과장 철수 확정 

- 통합OSP(/oauth2) Prj
1. createUserAuthToken API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() -> 01_Auth_authenticate 
1) DB 연결 시도 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'Oauth2Biz': Injection of autowired dependencies failed; nested  
exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.samsungosp.auth.oauth2.biz.Oauth2VerifyBiz  
com.samsungosp.auth.oauth2.biz.Oauth2BizImpl.oauth2VerifyBiz; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating  
bean with name 'Oauth2VerifyBiz': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException:  
Could not autowire field: private com.samsungosp.auth.user.biz.UserBiz com.samsungosp.auth.oauth2.biz.Oauth2VerifyBizImpl.userBiz; nested exception is  
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'UserBiz': Injection of autowired dependencies failed; nested  
exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.samsungosp.auth.user.dao.UserDAO  
com.samsungosp.auth.user.biz.UserBizImpl.userDAO; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException:  
No matching bean of type [com.samsungosp.auth.user.dao.UserDAO] found for dependency: expected at least 1 bean which qualifies as autowire candidate for  
his dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} 
2./oauth2-lib/src/main/java/com/samsungosp/auth/user/dao/UserDAOImpl.java 파일에서 @Repository 추가 
@Repository("UserDAO") 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'Oauth2Biz': Injection of autowired dependencies failed; nested exception is  
org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.samsungosp.auth.oauth2.biz.Oauth2VerifyBiz com.samsungosp. 
auth.oauth2.biz.Oauth2BizImpl.oauth2VerifyBiz; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name  
'Oauth2VerifyBiz': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field:  
private com.samsungosp.auth.user.biz.UserBiz com.samsungosp.auth.oauth2.biz.Oauth2VerifyBizImpl.userBiz; nested exception is org.springframework.beans.factory. 
BeanCreationException: Error creating bean with name 'UserBiz': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory. 
BeanCreationException: Could not autowire field: private com.samsungosp.auth.user.dao.UserDAO com.samsungosp.auth.user.biz.UserBizImpl.userDAO; nested exception  
is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'UserDAO' defined in URL [jar:file:/C:/OSP2.5/workspace/.metadata/.plugins 
/org.eclipse.wst.server.core/tmp0/wtpwebapps/oauth2-svc/WEB-INF/lib/oauth2-lib-0.0.1-SNAPSHOT.jar!/com/samsungosp/auth/user/dao/UserDAOImpl.class]:  
Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [com.samsungosp.auth.user.dao.UserDAOImpl]:  
Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: com/ibatis/sqlmap/client/SqlMapExecutor 
2./oauth2-lib/src/main/java/com/samsungosp/auth/user/dao/UserDAOImpl.java 파일에서 mybatis 표준에 맞게 ibatis 소스 변경할 것 
public class UserDAOImpl extends SqlMapClientDaoSupport implements UserDAO { ===> 
@Repository("userDAO") 
public class UserDAOImpl extends BaseDAO implements UserDAO { 
==============================================================================================================

- Maven 에러 
/oauth2-svc/src/main/java/com/samsungosp/auth/oauth2/service/AuthServiceResource.java 파일에서 
import com.samsungosp.framework.aspect.annotation.OSP; --> 못 찾음 
1. 조치: C:\OSP2.5\workspace\IOSP\Source\2.Account\Auth\trunk\oauth2-svc\target 폴더 안에  
osp-framework-0.0.1-20120215.114940-11.jar 파일이 생성되었는 지 확인( ==> Project --> Celan) 
==============================================================================================================

- SQLGate 2010 forOracle 다운로드 
1. http://www.sqlgate.com/kr/download/ ===> *@*.*/ss***8*1 
2. SQLGate for Oracle v3.9 갬플에서 다운받음(앞으로 사용할 것) 
==============================================================================================================

- DB 연결 
1. 호스트(H): 50.16.234.94 ==> sprf/sprf 
2. 서비스 이름(A): DEVIOSP1 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.24(금) 작업 ■■■■■■■■■■■■■■■
---> 07:10 ~ 19:00  

- 통합OSP(/oauth2) Prj
1. createUserAuthToken API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() -> 01_Auth_authenticate 
1) DB 연결 시도 
==============================================================================================================

- Tomcat v6.0 Server at localhost 환경 설정 
1. Open launch coofigration 
-Dosp.server.type="local" -Dosp.home.dir="C:\OSP2.5\localhome" -Dcomponent.name="oauth2" 
-Dosp.server.type="local" -Dosp.home.dir="C:\OSP2.5\localhome" -Dcomponent.name="sample" 
2. Web Modules 
Document base: oauth2-svc, Path: / 
==============================================================================================================

- DB 연결(DEV DB) 
1. 호스트(H): 50.16.234.94, 1521 ==> sprf/sprf 
2. 서비스 이름(A): DEVIOSP1 

- DB 연결(OSP 2.0 Profile DEV DB) 
1. 호스트(H): 50.16.247.171, 1521 ==> WPRF/osp123 
2. 서비스 이름(A):  

- DB 연결(OSP 2.0 Profile STG DB) 
1. 호스트(H): 50.16.247.57, 1521 ==> WPRF/osp123 
2. 서비스 이름(A): DEVOSP 
-------------------------------------------------------------------------------------------------------------------------- 

- JDBC 설정 
1. /oauth2-lib/src/main/resources/config/local/applicationSystemConfig.xml 파일에서 
<!-- ======================================== --> 
<!-- ORACLE JDBC Configuration(DEV DB) --> 
<!-- ======================================== -->  
<!-- <entry key="oracle.jdbc.driverClassName">oracle.jdbc.driver.OracleDriver</entry> --> 
<!--entry key="oracle.jdbc.driverClassName">core.log.jdbc.driver.OracleDriver</entry--> 
<!-- <entry key="oracle.jdbc.url">jdbc:oracle:thin:@50.16.234.94:1521:DEVIOSP1</entry> 
<entry key="oracle.jdbc.username">SPRF</entry> 
<entry key="oracle.jdbc.password">SPRF</entry> --> 

<!-- ======================================== --> 
<!-- ORACLE JDBC Configuration(OSP 2.0 Profile DEV DB) --> 
<!-- ======================================== -->  
<entry key="oracle.jdbc.driverClassName">oracle.jdbc.driver.OracleDriver</entry> 
<!--entry key="oracle.jdbc.driverClassName">core.log.jdbc.driver.OracleDriver</entry--> 
<entry key="oracle.jdbc.url">jdbc:oracle:thin:@50.16.247.171:1521:DEVIOSP1</entry> 
<entry key="oracle.jdbc.username">WPRF</entry> 
<entry key="oracle.jdbc.password">osp123</entry> 
==============================================================================================================

- 통합OSP 개발 회의(13:00 ~ 16:00) 
1. 환경 설정 
2. TestCase 설정 
==============================================================================================================

- 당구
19:00 퇴근 
19:30 귀가 
19:40 석식(깁밥 2줄, 라면) 
20:30 국화 당구장(종업원과 게임 4:2 승(80), 회비: 만 원(3시간)) 
23:00 종료 
23:30 귀가 
01:00 취침 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.25(토) 작업 ■■■■■■■■■■■■■■■
---> 06:30 ~ 18:00 

- ▦조기축구, 나눔 모임
06:30 기상 
07:20 신구초등학교 
08:30 조기축구(1:1 무) 
08:10 종료 
08:30 조식(화정식당: 서일문형이 쏨) 
11:30 종료 
12:10 귀가 
13:30 강남터미널 
13:40 대구행 고속버스 
17:30 동대구 도착 
18:00 놀부보쌈과 돌솥밥 
18:10 현용, 태용, 호수 만남 
18:20 황금 네거리(택시로 이동): 현용이 쏨 
18:40 제일생막창(16만원 나옴: 053)764-9069, 대구시 수성구 황금동 841-2) ==> 일남, 광석, 상환 도착 
20:40 엑소더스 바(90,91 나눔 동기회 통합 합의) 
23:00 당구장(태용이와 80놓고 2:1 패) 
23:50 간바지 식당(창환이형 도착) 
24:30 당구장(일남, 광석 <==> 내, 현용(패)), 광석, 현용, 내(80) --> 광석 꼴찌 
02:30 술집(창환이형이 쏨) 
05:00 종료 
05:30 로미오 모텔(현용, 태용, 상환, 창환이형) 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.26(일) 작업 ■■■■■■■■■■■■■■■
---> 07:00 ~ 18:00 

- 포항집
06:00 샤워 
06:30 로미오 모텔 출발(대구시 수성구 두산동 95-1) 
07:25 동부정류장 
07:30 포항행 
08:30 포항 도착 
09:00 포항집 
11:10 구결행사 최은영 실장 방문 
11:15 상담 
12:20 종료 
18:00 오리집(큰누나, 매형이 쏨) 
23:30 집출발(김밥 6줄, 쑥떡 가지고 옴) 
24:15 포항 고속터미널 
01:00 포항 출발 
05:00 강남 터미널 도착 
05:30 버스 
06:00 귀가 
07:35 출근 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.27(월) 작업 ■■■■■■■■■■■■■■■
---> 07:25 ~ 22:00 --> 자리 옮김(창가 쪽), 당구(구차장, 윤과장: 패(만원 냄)) 

- 통합OSP(/oauth2) Prj
1. createUserAuthToken API 구현 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() -> 01_Auth_authenticate 
1) DB 연결 시도 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.samsungosp. 
auth.user.dao.UserDAOImpl; nested exception is java.io.FileNotFoundException: class path resource  
[org/mybatis/spring/support/SqlSessionDaoSupport.class] cannot be opened because it does not exist  
2. Project ==> Cean 후 /oauth2-lib/target/oauth2-lib.jar 파일에서 UserDAOImpl.class 파일이 존재하는 지 확인 
==============================================================================================================

1. 에러 
OSPAspect::exceptionHandlerBefore exception : org.springframework.web.servlet.mvc.multiaction.NoSuchReque 
stHandlingMethodException: No matching handler method found for servlet request: path '/oauth2/authenticate',  
method 'POST', parameters map[[empty]] 
2. /AuthServiceResourceImpl.java 파일에서 headers는 안 붙임(/AuthServiceResource.java파일에만 headers 붙임) 
@OSP( category="auth", function="G01") 
@RequestMapping(value="/authenticate", method=RequestMethod.POST) 
public ModelAndView createUserAuthToken(OSPHttpHeaderInfo headers, @RequestBody RequestTokenVO  
requestUserauthTokenVO) throws Exception { 
} 
==============================================================================================================

1. /AuthServiceResourceImpl.java 파일에서 에러 발생  
public ModelAndView createUserAuthToken(OSPHttpHeaderInfo headers, @RequestBody RequestTokenVO 
requestUserauthTokenVO) throws Exception { 
	jsonObject = oauth2Biz.postUserToken(requestUserauthTokenVO); //===> 실행안되고 에러 발생 
	return success("requesttoken", requestUserauthTokenVO); 
} 
2. /Oauth2BizImpl.java 파일 소스 문제로 추정됨 
==============================================================================================================

- DB 연결 에러 
1. DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f7ce53]  
was not registered for synchronization because synchronization is not active 
2. /UserDAOImpl.java 파일에서 getSqlSession().selectList() --> getSqlSession().selectOne()로 변경 
public UserIdentificationVO getUserIdentification(UserIdentificationVO userIdentificationVO) throws OSPException {  
	try { 
		result = (UserIdentificationVO)getSqlSession().selectOne( 
		"com.samsungosp.auth.user.dao.userDAO.getUserIdentification", userIdentificationVO);  
	}  
	return result; 
} 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.28(화) 작업 ■■■■■■■■■■■■■■■
---> 07:20 ~ 22:00 --> DB 연결 시도(성공) 

- 통합OSP(/oauth2) Prj
1. createUserAuthToken API 구현(종료) 
http://localhost:8080/v2/auth/oauth2/authenticate ==> createUserAuthToken() -> 01_Auth_authenticate 
1) request body 
grant_type=password&client_id=j5p7ll8g33&client_secret&username=@yopmail.com&password=qwertqwert 

<requestTokenVO> 
<grant_type>password</grant_type> 
<client_id>j5p7ll8g33</client_id> 
<client_secret>=5763D0052DC1462E13751F753384E9A9</client_secret> 
<username>@yopmail.com</username> 
<password>qwertqwert</password>  
<physical_address_text>2012001</physical_address_text>  
</requestTokenVO> 

2) response body 
200 OK 
<?xml version="1.0" encoding="UTF-8"?> 
<net.sf.json.JSONObject> 
<nullObject>false</nullObject> 
<properties class="org.apache.commons.collections.map.ListOrderedMap" serialization="custom"> 
<unserializable-parents/> 
<org.apache.commons.collections.map.ListOrderedMap> 
<default><insertOrder><string>userauth_token</string></insertOrder></default> 
<map> 
<entry key="userauth_token">&amp;lt;![CDATA[xHPfh3mJYw]]&amp;gt;</entry> 
</map> 
</org.apache.commons.collections.map.ListOrderedMap>  
</properties>  
</net.sf.json.JSONObject>  
==============================================================================================================

- 개발계 LDAP 정보(Host/port) 
1. HOST = 210.118.57.208 
2. PORT = 1689 
==============================================================================================================

- Coherence 로컬 서버 실행 환경 구성  
1. 파일 서버 아래 :\01.OSP 2.5 통합\OSP 2.5 Profile 통합\공유\ 아래 coherence-java-3.7.0.zip 
2. D drive 에 압축을 푸신 후에 도스창을 열어서 cd Coherence-java-3.7.0\coherence\bin 한 후 Cache-server  
실행 ==> Started DefaultCacheServer... 
==============================================================================================================

- P4  
1. 파일 삭제 
1) eclipse ==> Team --> Mark for Delete > Submit 
1. 파일 등록 
1) eclipse ==> Team --> Mark for Add > Submit  
2) P4 ==> Workspace --> Mark for Add > Submit =====> P4 ==> Depot에서 Get Latest Revisoin 
==============================================================================================================

- Eclipse 메모리 설정 
C:\OSP2.5\tools\eclipse\eclipse.exe "-Xmx1512m" 
c. f) D:\eclipse\eclipse.exe " -vmargs -Xmx256m" ==> 메모리를 최대 1512M까지 사용하라 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2012.02.29(수) 작업 ■■■■■■■■■■■■■■■
---> 07:20 ~ 22:00 --> OSP2.0 SM 원종선 과장 철수 

- 통합OSP(/oauth2) Prj
2. createAuthorizationCode API 구현 
http://localhost:8080/v2/auth/oauth2/authorize ==> createAuthorizationCode() -> 02_Auth_authorize 
==============================================================================================================

- SoapUI 설치 
1. soapUI-Pro-x32-4_0_1 설치 
2. C:\Program Files\SmartBear\soapUI-Pro-4.0.1\bin/soapui-pro.bat 파일에서 
set JAVA_OPTS=-Xms128m -Xmx1024m -Dsoapui.properties=soapui.properties -Dgroovy.source.encoding=iso-8859-1 "-Dsoapui.home=%SOAPUI_HOME%\" 
==> set JAVA_OPTS=-Xms128m -Xmx256m -Dsoapui.properties=soapui.properties -Dgroovy.source.encoding=iso-8859-1 "-Dsoapui.home=%SOAPUI_HOME%\" 
3. C:\Program Files\SmartBear\soapUI-Pro-4.0.1\bin/soapUI-Pro-4.0.1.vmoptions 파일에서 
-Xms128m 
-Xmx1200m ===> -Xmx256m  
==============================================================================================================

1. 서버 Start 에러 
Port 8009 required by Tomcat v6.0 Server at localhost[1. oauth2] is already in use. The server may already  
be running in another process, or a system process may be using the port. To start this server you will need t 
o stop the other process or change the port number(s). 
2. Port 8009를 찾아서 8019으로 변경 
==============================================================================================================

1. 서버 Start 에러 
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com 
.samsungosp.auth.oauth2.biz.Oauth2VerifyBiz com.samsungosp.auth.oauth2.biz.Oauth2BizImpl.oauth2VerifyBiz;  
nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name  
'oauth2VerifyBiz': Injection of autowired dependencies failed; nested exception is org.springframework.beans. 
factory.BeanCreationException: Could not autowire field: private com.samsungosp.auth.user.biz.UserBiz com. 
samsungosp.auth.oauth2.biz.Oauth2VerifyBizImpl.userBiz; nested exception is org.springframework.beans. 
factory.BeanCreationException: Error creating bean with name 'userBiz': Injection of autowired dependencies failed;  
nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private  
com.samsungosp.auth.user.dao.ServiceDAO com.samsungosp.auth.user.biz.UserBizImpl.serviceDAO; nested  
exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type  
[com.samsungosp.auth.user.dao.ServiceDAO] found for dependency: expected at least 1 bean which qualifies  
as autowire candidate for this dependency. Dependency annotations: { 
@org.springframework.beans.factory.annotation.Autowired(required=true)}  
2. /UserBizImpl.java파일에서 @Autowired 부분 주석 처리할 것 
@Autowired private ServiceDAO serviceDAO; ==> private ServiceDAO serviceDAO; 
3. /Oauth2VerifyBizImpl.java파일에서 @Autowired 부분 주석 처리할 것 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.samsungosp.auth.user.dao.UserDAOImpl; 
nested exception is java.io.FileNotFoundException: class path resource [org/mybatis/spring/support/SqlSessionDaoSupport.class]  
cannot be opened because it does not exist 
2. /UserBizImpl.java파일에서 @Autowired 부분 주석 처리할 것 
@Autowired private ServiceDAO serviceDAO; ==> private ServiceDAO serviceDAO; 
3. C:\OSP2.5\workspace\IOSP\Workspace\Account\Auth\trunk\oauth2-lib/target 폴더 삭제 후 다시 빌드(차선책) 
==============================================================================================================

1. 서버 Start 에러 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceDAO' defined in  
URL [jar:file:/C:/OSP2.5/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/oauth2-svc 
/WEB-INF/lib/oauth2-lib-0.0.1-SNAPSHOT.jar!/com/samsungosp/auth/user/dao/ServiceDAOImpl.class]:  
Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException:  
Could not instantiate bean class [com.samsungosp.auth.user.dao.ServiceDAOImpl]: Constructor threw exception;  
nested exception is java.lang.NoClassDefFoundError: com/ibatis/sqlmap/client/SqlMapExecutor 
2. /ServiceDAOImpl.java파일에서 @Repository("serviceDAO") 부분 주석 처리할 것 
3. /ServiceDAOImpl.java파일 소스가 mybatis 문법에 맞는 지 확인할 것 
==============================================================================================================

- Coherence 2명 이상 사용 방법 
1. C:\coherence-putter-utility/start_local_server에서 
set COH_OPTS=-Dtangosol.coherence.clusteraddress=237.16.152.152 
==> set COH_OPTS=-Dtangosol.coherence.clusteraddress=237.16.152.153 
==============================================================================================================

- Coherence 2명 이상 사용 방법(방화벽 열기 설정)(이전 꺼) 
1. 제어판/시스템 및 보안/Windows 방화벽/설정 사용자 지정에서 
1) 홈 또는 회사(개인) 네트워크 위치 설정: Windows 방화벽 사용 안함(체크) 
2) 공용 네트워크 위치 설정: Windows 방화벽 사용 안함(체크) 
---------------------------------------------------------------------------------------  
D:\coherence-java-3.7.0\coherence\config/osp2-tangosol-coherence-override.xml 파일에서 로컬IP 변경(이전 꺼) 
(address: 127.0.0.1 ==> 70..4.78.153) 
<multicast-listener> 
<address>70..4.78.153</address> 
<port>40002</port> 
<time-to-live>0</time-to-live> 
</multicast-listener> 
==============================================================================================================
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+--------------------------------------------------------// End //--------------------------------------------------------+
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■