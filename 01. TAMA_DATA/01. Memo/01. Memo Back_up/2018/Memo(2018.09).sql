

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+----------------------------------------------// Memo(2018.09) //----------------------------------------------+
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■


■■■■■■■■■■■■■■■■■■ 2018.09.01(토) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==>  

- 주말
09:00 기상
10:20 집출발(수종)
10:30 구로 튼튼병원(남구로시장 입구) 도착
10:40 진료 ==> 손 관절염: 단순한 관절염이라고 함(치료는 계속 받으라고 함: 영양 주사 맞음(3번은 맞아야 한다고 함)
		1. 피검사 후 당뇨병이라고 함(혈당 수치: 435mg/dl): 혈당계 고장나서 손가락 7번 만 찌르고 측정 못함 --> 1주일치 약 조제
		2. 피검사 후 고지혈증 이라고  함(콜레스테롤 수치, 중성지방 수치 관리할 것 ==> 소식, 식이 요법) --> 1주일치 약 조제
		3. 피검사 후  B형 간염 항체가 형성되어 있지 않다고 함: B형 간염 접종(1차, 1달에 한번씩 3번 접종해야 한다고 함)
		==> 속편한 내과로 병원 옮길 것
		==> 부모님은 고혈압은 있어도 당뇨병은 없다고 함(큰누나 정상, 작은 누나 약간 높다고 함) 
11:30 손 관절염 물리치료 ==> 병원비 총: 10만원 나옴
11:40 조제(한마음약국) 
		- 처방전(1주일치)
		다이나브서방정(한국휴텍스제약): 당뇨 치료제, 혈당강하제
		로젯정 10/10ml: 고지혈증 치료제
		크로나제정: 순환개선제 
		치옥탄에이치알정: 호르몬제, 당뇨병성 다발성 신경증 완화제
		가프리드정: 위장운동조절 및 진경제
		앤세이드정: 비스테로이드성 소염진통제
		잘 나겔정: 제산제 & 흡착제
		- 1달치 약
		1. 혈액약[크로나제정(칼리디노게나제, 이연제약],
		2. 고지열증약[로젯 Dual Action 고지혈증 복합제, 명문제약)
12:00 이마트 쇼핑(샌들, 풍선 구입)
12:30 화장실 전구 구입: 크립톤 전구(m50) 220V, 60W[전구 구멍만 맞으면 사용 가능하다고 함)
12:40 귀가
13:30 중식
14:00 낮잠
16:50 기상 
17:30 TV 시청 ==> 아시안 게임 축구 3, 4위 전(베트남 (3)1:1(4) UAE): UAE 동메달 획득
17:50 석식
18:00 TV 시청  ==> 아시안 게임 야구 결승전(한국 3:0 일본): 한국 금메달
20:30 TV 시청  ==> 아시안 게임 축구 결승전(한국 2:1 일본): 한국 금메달
23:10 집출발
23:30 대림운동장(물떠러 감: 자전거)
23:50 귀가 
23:00 취침
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.02(일) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 

▦ 축구
09:00 기상  
09:30 조식(라면)
10:30 낮잠
11:50 기상
12:00 중식 ==> 루옌 친구 만나러감
15:10 루옌 귀가 
15:20 집출발 
15:30 영등포 초교 도착(집 > 도림천로 > 신도림역 전 > 신도림역 교차로 > 도림 고가차도 > 영등포 초교)
15:40 게임(은혜교회팀 + 어울림 : 아쿠아팀 ==> 3쿼터 뜀): 상대팀은 젊은 팀이지만 골 결정력은 없었음, 그래도 졸전 함.
18:40 종료
18:45 집출발 초교 출발(영등포 초교) > 도림 고가차도 > 도림 사거리 > 성락주유소앞 > 대영초교삼거리 > 우성아파트 사거리)
19:00 엘마트(빵, 우유 구입)
19:20 귀가  
19:53 집출발
20:05 대림역 7호선 마을버스 정류장(영등포04 버스 탑승)
20:30 영등포역 도착
20:49 예산행(20:49 ~ 22:36, 영등포역 -> 삽교역) 탑승
22:40 삽교역 도착(5분 연착)
23:10 귀가
23:40 TV 시청(피곤해서 참)
01:00 취침
==============================================================================================================
 
■■■■■■■■■■■■■■■■■■ 2018.09.03(월) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 21:00 ==> 강전관 과장 휴가(어머님 갑상선암 수술, 7군데 추가 수술, 은행 대출 원함), 현대제철 Prj 통합 테스트 1차(9시, 예산)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
 - 프로파일 변경 팝업(/pop_chgPwd.xfdl)
1. Top 프레임(/frmTop.xfdl) 변경
- trackPopupByComponent: 버튼 사용(위치는 잘 맞음: 추천)
this.afn_popup_callback = function(sid, rtn)
{
	trace("[/APQMS.xadl][afn_popup_callback()]==> [로그인 콜백 함수][TEST_01][sid]"+ sid +"[rtn]"+ rtn ); 

	//application.av_topFrame.form.st_userNmDept.set_text(sUserNmDeptNm); 	// 성명[부서] 셋팅 (TOP 프레임) 
	application.av_topFrame.form.btn_userNmDept.set_text(sUserNmDeptNm); 	// 성명[부서] 셋팅 (TOP 프레임)   
	//application.av_topFrame.form.edt_userNmDept.set_value(sUserNmDeptNm); 	// 성명[부서] 셋팅 (TOP 프레임)   
	trace("[/APQMS.xadl][afn_popup_callback(()]==> [TEST_31][sUserNmDeptNm]"+ application.av_topFrame.form.btn_userNmDept.text );  
}

/***********************************************************************
 * 함수명  	: btn_userNmDept_onclick
 * 설명 		: 프로파일 변경_버튼 버튼 클릭 이벤트
***********************************************************************/ 
this.btn_userNmDept_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	//trace("[/frmTop.xfdl][btn_userNmDept_onclick()]==> [TEST_01]");
	
	this.pdv_popupSet.set_visible(true);		// div_popupSet 보이기 
	
	var left_2 = parseInt(obj.left) + 240;		// Left 간격([left_2]309, [top_2]28): 해상도: 1920 기준
	var top_2 = parseInt(obj.height); 			// Top 간격
 	trace("[/frmTop.xfdl][btn_userNmDept_onclick()] ==> [TEST_03][left_2]"+ left_2 +"[top_2]"+ top_2 );  
	
	this.pdv_popupSet.trackPopupByComponent(obj, left_2, top_2);		// 지정된 컴포넌트를 기준점으로 PopupMenu 컴포넌트를 화면에 나타나게 지정하는 메소드
	//trace("[/frmTop.xfdl][btn_userNmㅇDept_onclick()] ==> [TEST_end][pdv_popupSet]"+ this.pdv_popupSet.visible );  
}
==============================================================================================================

- 모니터 해상도와 별도로 브라우저 크기 고정시키는 법
1. 문의하신 내용에 대해서는 모든 컴포넌트들의 position 속성을 px로 하시고, 
left, top, width, height에 값을 넣어주시면 해상도가 변경되어도 고정된 화면으로 나타납니다. 
(단, 해상도가 높은 상황에서 자동적으로 늘어나는 것 또한 방지됩니다.) 
==============================================================================================================

- PR_CM_APPROVE_WORK 저장 에러
1. 현상:  
/* 결재 검토/승인 처리(Procedure) ==> [cm:CM_AppvDlng_I01.xml] [2018.08.13, by 진태만] */  
-- EXECUTE QMSMGR.PR_CM_APPROVE_WORK
(  
    'QI14', 		-- 결재업무구분(QI11: 블랭크 수입검사, QI12: TWB 수입검사, QI13: H/S 수입검사, QI14: 강관 수입검사, QI26: H/F 공정검사(자주), ...)
    '1', 			-- 처리구분(1:최초등록 및 결재요청, 2: 검토자가 확인, 3: 검토자가 반려, 4: 검토자가 확인취소, 5: 승인자가 확인, 6: 승인자가 반려, 7: 승인자가 확인취소)
    '1519927', 				-- 검사자ID(요청자)
    '1519929',						-- 검토자ID
    '1519929', 					-- 승인자ID
        '',        			-- 반려사유 ===> null 이면 에러 @@@@@
    '20180903-14-0005'|| ',', 					-- 검사번호(업무테이블 PK)
      '',             		-- 결재번호===> null 이면 에러 @@@@@
       '' ,    				-- 처리 결과(성공 : S, 에러: E)
       ''                   -- 에러시 에러메시지
)
;  
2. 원인: 황원철 부장이 PR_CM_APPROVE_WORK 수정을 잘못 해서 에러가남
 ELSIF P_IN_WORK_CODE = 'NC41' THEN --양산EO 접수 등록
	  BEGIN
		  SELECT fn_cm_substr_chars(P_IN_TABLE_PK, 1, ',')   INTO   V_PK1 
		  FROM   DUAL;		
		  
		  UPDATE QMSMGR.HSDME250
		  SET    CONF_NO = V_WORK_FLOW_NO
		  WHERE  EO_ACCNO = V_PK1;
	  EXCEPTION 
	   WHEN OTHERS THEN
		 V_RET_CODE := 'E';
		 V_RET_MSG  := '4.NC업무PK GET ERROR:'||SQLERRM;	
		 RAISE ERR1;
	  END;	     
   END IF;
==============================================================================================================

- 건강 검진 예약(08:30, 속편한 내과에 전화)
1. 직장인 건강 검진(신분증, 전 날 밤 10시 이후에 음식 섭취 금지)
2. 당뇨병 검진 요청
3. B형 간염 예방 접종(1차 접종 함): 총 3차
==> 성인 B형간염 예방접종 비용 및 접종간격 ==> http://honeytipmom.tistory.com/54
==> 구로보건소: 김효정 [Tel: 860-2040] ==> http://www.guro.go.kr/health/health_information/infection_prevention/general_prevention/general_hepatitis_b.jsp
==============================================================================================================
 
- 고지혈증, 당뇨병 동영상
- [메디텔] 고지혈증에 모든 것 - 송내과의원 송태호 원장 풀버전 ==>
 https://www.youtube.com/watch?v=GTufqXyWCvI
 
- 조한경 원장 당뇨병, 고혈압이 아닌, 대사증후군 바로알기 ==>
https://www.youtube.com/watch?v=jcdGhHo6-o4&list=PLoQEBvjuDz5BOoREz3edQVqUQnpPmEmga 
1. https://drjoshuacho.com
------------------------------------------------------------------------------------------------------------

- 당뇨병, 고지혈증 예방 수칙
1. 소식
2. 식이요법
 1) 당뇨병에 나쁜 음식: 고기, 생선, 계란, 우유
 2) 당뇨병에 좋은 음식: 현미, 채소, 과일 
3. 커피 줄이기(1일 3티백) ==> 현미 녹차(1일 3티백)
==============================================================================================================

- 강냉이 구입
1. 09_G171_다해 제과 강냉이 4kg,  가격: 17,506원 ==> http://itempage3.auction.co.kr/DetailView.aspx?ItemNo=B405076642&frm3=V2
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.04(화) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 23:20 ==> 월간보고(14:00 ~ 15:00)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 이메일 보내기 처리
1. Mail 관리(/CM_MailMngm.xfdl)  ==> 다중 이메일 보내기
2. 강관 수입검사(/QI_SteelPipeImpInsp.xfdl) 검토자, 승인자 이메일 보내기
3. 메일 보내기
 1) 개발 서버 ==> 내부 메일만 가능
 2) 운영 서버 ==> 내부, 외부 메일 가능
==============================================================================================================

- 다중 이메일 보내기[/CM_MailMngm.xfdl)
var g_sendMailCnt = 0;	// 메일 발송 갯수

/***********************************************************************
 * 함수명  	: form_onload
 * 설명 		: Form 로딩 
***********************************************************************/
this.form_onload = function(obj:Form, e:LoadEventInfo)
{ 
	trace("[/CM_MailMngm.xfdl][form_onload()]==> [폼 로딩][TEST_01_2][T: Mail 관리 화면]" );
	
	this.gfn_onLoad(obj, e);  	// Form Load 공통 함수 호출(필수) 
  
	this.fsp_init();	// [FSP 서버] FSP initialization(Dataset 생성)
 
	var sAprvUsrNm = "검토자";	// 결재 사용자
	var sUserEmail = "tamario@hyundai-steel.com";	// 받는 사람 
	var sSdUsr = "gqms@hyundai-steel.com";		// 보내는 사람(관리자: 이상탁 차장 이메일)
	var sRecvUsr = sUserEmail;		// 받는 사람
 
	this.ds_mail.insertRow(0);
	this.ds_mail.setColumn(0,"FROM", sSdUsr);		// 보내는 사람
	this.ds_mail.setColumn(0,"TO", sRecvUsr);		// 받는 사람 
 
	var nRow = this.ds_mailRecvUsr.addRow();	
	this.ds_mailRecvUsr.setColumn(nRow,"RECV_USR_EMAIL", "tamario@hyundai-steel.com");	// 받는 사람 Email
	nRow = this.ds_mailRecvUsr.addRow();
	this.ds_mailRecvUsr.setColumn(nRow,"RECV_USR_EMAIL", "uit909@hyundai-steel.com");	// 받는 사람 Email 
}
 
/***********************************************************************
 * 함수명  	: btn_sendMail_onclick
 * 설명 		: 발송 버튼 클릭 이벤트 
***********************************************************************/	
this.btn_sendMail_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	trace("[/CM_MailMngm.xfdl][btn_sendMail_onclick()]==> [발송 버튼 클릭 이벤트][TEST_01]" );
 
	var sRecvUsrEmail = "";		// 받는 사람 Email
 
	if(this.ds_mailRecvUsr.getRowCount() > 0)
	{
		for(var i=0; i < this.ds_mailRecvUsr.getRowCount(); i++) 
		{	 
			sRecvUsrEmail = this.ds_mailRecvUsr.getColumn(i,"RECV_USR_EMAIL");		// 받는 사람 Email
	 
			g_sendMailCnt = g_sendMailCnt + 1;			// 메일 발송 갯수
			trace("[/CM_MailMngm.xfdl][btn_sendMail_onclick()]==> [TEST_41][i_번째]"+ i 
				+"[g_sendMailCnt]"+ g_sendMailCnt +"[sRecvUsrEmail]"+ sRecvUsrEmail );
			
			this.fn_sendMail(sRecvUsrEmail, g_sendMailCnt);		// 승인자에 이메일 발송  
		}
	}
}

/***********************************************************************
* 함수명  		: fn_sendMail
* 설명 			 이메일 발송 
***********************************************************************/
this.fn_sendMail = function(sRecvUsrEmail, g_sendMailCnt)
{ 
	trace("[/CM_MailMngm.xfdl][fn_sendMail()]==> [이메일 발송][TEST_01]" );
	
	var sAprvUsrNm = "검토자_02";	// 결재 사용자 
	var sSdUsrEmail = "gqms@hyundai-steel.com";			// 보내는 사람 Email(관리자: 이상탁 차장 이메일) 
	var sTitle = "[공지_Paging]귀하는 AP QMS 시스템에 결재 "+ sAprvUsrNm +"입니다.";	// 제목
	var sUrl = application.services["svcurl"].url +"APQMS";		// svc url 
	
	var sCntn = "<table border='0' cellspacing='0' cellpadding='0' width='100%'>";
	sCntn += "		<tbody>";
	sCntn += "			<tr>";
	sCntn += "				<td>";
	sCntn += "					<span style='font-size: 10pt;'>AP QMS에 사이트(</span><a"; 
	sCntn += "						target='_blank' href="+ sUrl +" class='tx-link'";
	sCntn += "						rel='noopener noreferrer' style='font-size: 10pt;'>"+ sUrl +"</a><span style='font-size: 10pt;'>)
	에 들어가 결재 처리 부탁 드립니다.</span><br>";
	sCntn += "				</td>";
	sCntn += "		</tr>";
	sCntn += "	</tbody>";
	sCntn += "</table>"; 	// 내용
	trace("[/CM_MailMngm.xfdl][fn_sendMail()]==> [TEST_02][받는 사람 Email]"+ sRecvUsrEmail +"[sTitle]"+ sTitle +"[sUrl]"+ sUrl +"[sCntn]"+ sCntn );  
	
	this.ds_mail.setColumn(0,"FROM", sSdUsrEmail);		// 보내는 사람 Email(관리자: 이상탁 차장 이메일)
	this.ds_mail.setColumn(0,"TO", sRecvUsrEmail);		// 받는 사람 Email
	this.ds_mail.setColumn(0,"SUBJECT", sTitle);		// 제목
	this.ds_mail.setColumn(0,"BODY", sCntn);			// 내용
	trace("[/CM_MailMngm.xfdl][fn_sendMail()]==> [TEST_61][ds_cond(입력).CNT]"+ this.ds_mail.getRowCount() 
		+"[ds_mail.saveXML()] \n"+ this.ds_mail.saveXML() );
	
 	this.fsp_callService(
 		"SY_MailAction"		//호출할 서비스(Java)
		,"Send"				//메소드(Java)
 		,"ds_mail=ds_mail"	//Input DataSet
 		,""					//Output DataSet
 		,""					//Aguments
 		,"fn_callback"		// 콜백 함수 명
		, false				// error시 callback 호출 여부 
		, false				// "처리 중입니다."라는 창 표시 여부
		, true				// 서버와 통신 방식(true: 비동기(Default), false: 동기)	
		, "sid_sendMail"		// 서비스 요청 아이디(콜백 함수에서 사용 가능)
	); 
}

/***********************************************************************
 * 함수명  	: fn_callback
 * 설명 		: 콜백 함수 
***********************************************************************/	 
this.fn_callback = function(nErrorCode, sErrorMag, sid)
{ 
	trace("[/CM_MailMngm.xfdl][fn_callback()]==> [콜백][TEST_01][sid]"+ sid +"[nErrorCode]"+ nErrorCode +"[sErrorMag]"+ sErrorMag); 
  
	if(nErrorCode < 0)
	{ 
		gfn_alert(this, "E0006", "메일발송");		// E0006: [M1]에 실패하였습니다.
		return;
	}  
 
	switch(sid)
	{ 
		case "sid_sendMail" :   
			if(this.ds_mailRecvUsr.getRowCount() == g_sendMailCnt)	// 보내는 메일 Ds와 메일 발송 갯수가 같으면(마지막)
			{ 
				trace("[/CM_MailMngm.xfdl][fn_callback()]==> [콜백][TEST_51] [메일발송_완료][sid]"+ sid ); 
				gfn_alert(this, "I0056", "메일발송");		// I0056: [M1] 처리가 완료 되었습니다.
			}
			else
			{
				this.btn_sendMail_onclick();	// 메일 발송
			}
			break; 
	} 
}
============================================================================================================== 		

- split 함수(자르기)
var sColumnList = "test,dd";
var arrColList = String(sColumnList).split(",");
trace("[/commLogin.xfdl][form_onload()]==> [TEST_01][arrColList[0]]"+ arrColList[0] +" [arrColList[1]]"+ arrColList[1] ); 
===> [/commLogin.xfdl][form_onload()]==> [TEST_01][arrColList[0]]test[arrColList[1]]dd
-------------------------------------------------------------------------------------------------------- 

/***********************************************************************
 * 함수명  	: form_onload
 * 설명 		: Form 로딩 
***********************************************************************/
this.form_onload = function(obj:Form, e:LoadEventInfo)
{  
	this.ds_mailRecvUsr.clearData();
	
	var sRecvUsrEmail = "";	// 받는 사람 Email
	var sColumnList = "tamario@hyundai-steel.com;kdh8400@hyundai-steel.com;uit909@hyundai-steel.com";
	var arrColList = String(sColumnList).split(";");		// 받는 사람 Email :로 자르기 
	
	var nRow = 0; 
	
	if(arrColList.length > 0)
	{
		for(var i=0; i < arrColList.length; i++) 		// 받는 사람 Email 총 갯수
		{	  
			nRow = this.ds_mailRecvUsr.addRow();	// ds_mailRecvUsr 행추가
			this.ds_mailRecvUsr.setColumn(i,"RECV_USR_EMAIL", arrColList[i]);		// 받는 사람 Email   
			trace("[/CM_MailMngm.xfdl][form_onload()]==> [TEST_42][i_번째]"+ i +"[nRow]"+ nRow +"[arrColList[i]]"+ arrColList[i] 
				+"[ds_mailRecvUsr.RECV_USR_EMAIL]"+ this.ds_mailRecvUsr.getColumn(i,"RECV_USR_EMAIL") ); 
		}
	}
	trace("[/CM_MailMngm.xfdl][form_onload()]==> [폼 로딩][TEST_51][arrColList.length]"+ arrColList.length 
		+"[ds_mailRecvUsr.CNT]"+ this.ds_mailRecvUsr.getRowCount() +"[ds_mailRecvUsr.saveXML()] \n"+ this.ds_mailRecvUsr.saveXML() ); 
}
============================================================================================================== 		

- bordertype
1. 정의: Tab의 테두리 형태를 설정하는 속성(Tab 테두리 둥글게 하기)
Tab.style.set_bordertype(stxBorderType) // set  
Tab.style.bordertype // get  
Tab.style.set_bordertype("normal");
Tab.style.set_bordertype("round 5px 3px");
Tab.style.set_bordertype("round 5px 3px lefttop righttop");
----------------------------------------------------------------------------------

==> Style > bordertype: round 10 10  lefttop righttop
==> Style > buttonbordertype: round 10 10  lefttop righttop
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.05(수) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 22:00 ==> 주간보고서 작성, 현대제철 Prj 통합 테스트 1차(9시): 테스트하다가 너무 에러가 많이 나서 포기했다고 함

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 이메일 보내기 처리
1. 프로젝트 등록(/NC_ProjectInput.xfdl) 화면 ==> CFT구성원에게 이메일 보내기(다중 이메일 보내기)
var sTitle = "[공지] 귀하는 AP QMS 프로젝트의 CFT 구성원 입니다.";	// 제목 
var sCntn = "AP QMS 프로젝트의 CFT 구성원이 되신 것을 진심으로 축하드립니다.<br> 앞으로 적극적인 참여 부탁 드립니다. 감사합니다.";	// 내용
--------------------------------------------------------------------------------------------------------------------------

- 이메일 발송 에러
1. 현상:
SystemBase_HTML5.js:45 [/sz_fsp_nx.xjs][fsp_callService()] ==> [서버 호출][TEST_91_2][transID]fn_callback&false&sid_sendMail
&1234[serverUrl]svcurl::NMain[inData]ds_mail=ds_mail fsp_ds_cmd=fsp_ds_cmd[outData]fsp_ds_cmd=fsp_ds_cmd[arg]
fsp_action="SY_MailAction" fsp_cmd="Send" undefined fsp_logId=all[서버와 통신 방식(Default(비동기:true)]true[options.nDataType]0[options.bCompress]false
SystemBase_HTML5.js:45 [/pop_sendEmail.xfdl][btn_sendMail_onclick()]==> [TEST_41][i_번째]3[g_sendMailCnt]1[sRecvUsrEmail]tamario@hyundai-steel.com
SystemBase_HTML5.js:45 [/pop_sendEmail.xfdl][fn_callback()]==> [콜백][TEST_01][sid]sid_sendMail[nErrorCode]-999999999[sErrorMag]NullPointerException

2. 원인: ds_mail에서 SUBJECT, BODY 칼럼에 데이타가 없어서 나는 에러(FROM, TO, SUBJECT, BODY: 4개 칼럼은 필수)
<Dataset id="ds_mail">
	<ColumnInfo>
		<Column id="FROM" type="STRING" size="256"  />
		<Column id="TO" type="STRING" size="256"  />
		<Column id="SUBJECT" type="STRING" size="256"  />
		<Column id="BODY" type="STRING" size="256"  />
		<Column id="CC" type="STRING" size="256"  />
		<Column id="BCC" type="STRING" size="256"  />
		<Column id="FILES" type="STRING" size="256"  />
		<Column id="NOTIFYTO" type="STRING" size="256"  />
		<Column id="SERVICE_GB" type="STRING" size="256"  />
	</ColumnInfo>
	<Rows>
		<Row>
			<Col id="FROM">gqms@hyundai-steel.com</Col>
			<Col id="TO">tamario@hyundai-steel.com</Col>
		</Row>
	</Rows>
</Dataset>

/***********************************************************************
* 함수명  		: fn_sendMail
* 설명 			 이메일 발송 
* return Type 	: None 
***********************************************************************/
this.fn_sendMail = function(sRecvUsrEmail, g_sendMailCnt)  
{
	trace("[/pop_sendEmail.xfdl][btn_sendMail_onclick()]==> [이메일 발송][TEST_01]" );
	
	var sSdUsrEmail = "gqms@hyundai-steel.com";			// 보내는 사람 Email(관리자: 이상탁 차장 이메일)  
	var sTitle = this.div_detail.edt_subject.value;		// 제목
	var sCntn = this.div_detail.txta_body.value;		// 내용
	
	this.ds_mail.clearData();

	this.ds_mail.insertRow(0);
	this.ds_mail.setColumn(0,"FROM", sSdUsrEmail);		// 보내는 사람 Email
	this.ds_mail.setColumn(0,"TO", sRecvUsrEmail);		// 받는 사람 Email
 	this.ds_mail.setColumn(0,"SUBJECT", sTitle);		// 제목  ==> 추가 처리 @@@
 	this.ds_mail.setColumn(0,"BODY", sCntn);	 		// 내용   ==> 추가 처리 @@@
	
	var sTitle = "[공지]귀하는 AP QMS 프로젝트의 CFT 구성원 입니다.";	// 제목
	var sUrl = application.services["svcurl"].url +"APQMS";		// svc url 
	var sCntn = "AP QMS 프로젝트의 CFT 구성원이 되신 것을 진심으로 축하드립니다.<br> 앞으로 적극적인 참여 부탁 드립니다. 감사합니다.";	// 내용
	trace("[/CM_MailMngm.xfdl][btn_sendMail_onclick()]==> [TEST_02][받는 사람 Email]"+ sRecvUsrEmail +"[sTitle]"+ sTitle +"[sUrl]"+ sUrl +"[sCntn]"+ sCntn );   
	trace("[/pop_sendEmail.xfdl][btn_sendMail_onclick()]==> [TEST_61][ds_mail(입력).CNT]"+ this.ds_mail.getRowCount() +"[ds_mail.saveXML()] \n"+ this.ds_mail.saveXML() );
	
 	this.fsp_callService(
 		"SY_MailAction"		//호출할 서비스(Java)
		,"Send"				//메소드(Java)
 		,"ds_mail=ds_mail"	//Input DataSet
 		,""					//Output DataSet
 		,""					//Aguments
 		,"fn_callback"		// 콜백 함수 명
		, false				// error시 callback 호출 여부 
		, false				// "처리 중입니다."라는 창 표시 여부
		, true				// 서버와 통신 방식(true: 비동기(Default), false: 동기)	
		, "sid_sendMail"		// 서비스 요청 아이디(콜백 함수에서 사용 가능)
	); 
}
==============================================================================================================

- SMS 전송
1. SMS송신 프로시져(PR_CM_SMS_SEND)
2. 이메일 수신여부, SMS 수신여부
==============================================================================================================
 
- 외장하드 정리, USB 정리[2018.05.09]
A. 외장하드 정리
1. 씨게이트 Backup Plus S Portable Drive/USB 3.0(4TB)[2018.05.07 구입] ==> Main
2. 버팔로 외장 HD_2011_10A(1TB)
3. 레토 외장 HD 2.5(640G)
4. 엠지텍 외장 HD 2.5(80G) ==> 사용 안함
-----------------------------------------------------------------------------------------

- USB 정리
1. USB_T1(16G) ==> 부팅 디스킹
1) 00. WIN7 설치 파일(USB 2.0 16GB) [★★★]
2. USB_T2(16G) ==> 부팅 디스킹2
1) 00. WIN7 설치 파일(USB 2.0 16GB) [★★★]
3. USB_T3(32G) ==> 부팅 디스킹(USB 3.0), (주)지아이데이타에서 선물 받음)
1) 00. WIN7 설치 파일(USB 3.0 32G) [★★★]
4. USB_T4(16G) ==> 
1) 00. 기타 DATA(USB 2.0 16GB) [★★★]
5. USB_T5(64G) ==> 00. 샌디크스 Ultra Z48 USB 3.0 64G (제일 작은 USB) [★★★]
1) 00. 기타 DATA(USB 3.0 64GB) [★★★]
6. USB_T6(128G) ==> 00. 샌디크스 Ultra Z48 USB 3.0 128G (제일 크고 긴 USB) [★★★]
1) 00. 기타 DATA(USB 3.0 128G) [★★★]
7. USB_T6(128G) ==> 00. 샌디크스 Ultra Dual OTG 3.0 USB 128G [★★★]
1) 00. 기타 DATA(USB 3.0 128G) [★★★]
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.06(목) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 20:20 ==> 이승훈 과장 염홍구 상무가 오전에 개발 못한다고 잔소리해서 열받아서 중식 안먹고 철수 함(18시)
								--> 이승훈 과장에게 8월 급여 지급	 안 해서 (주)지아이데이타 소송 당해서 패소함
								
- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- SMS 전송
1. SMS송신 프로시져(PR_CM_SMS_SEND)
2. 이메일 수신여부, SMS 수신여부
-------------------------------------------------------------------------------------------------

- SMS 전송 LOG 조회 @@@
SELECT A.RCV_TEL_NO AS "프로그램명", A.RCV_TEL_NAME AS "수신자명", A.RCV_TEL_NO AS "수신자 전화번호"
        , A.SND_MSG AS "전송 메시지" , A.CREATE_TIME AS "생성시간"
		, A.*
FROM  QMSMGR.HSSCZSMS A
WHERE 1 =1 
ORDER BY A.CREATE_TIME DESC
;
==============================================================================================================

- 배열 파라메터 사용 SQL구문(FSP 서버에서) 
var v_mustSendMailCnt = 0;	// 보내야 할 메일 갯수
var v_sendMailCnt = 0;		// 보낸 메일 갯수

/***********************************************************************
* 함수명  		: fn_setSendMailChos
* 설명 			: 이메일 발송 대상 선택 처리 
***********************************************************************/
this.fn_setSendMailChos = function()  
{
	//trace("[/NC_ProjectInput.xfdl][fn_setSendMailChos()]==> [이메일 발송 대상 선택 처리][01. 단계][TEST_01]" );
	//trace("[/NC_ProjectInput.xfdl][fn_setSendMailChos()]==> [TEST_02][02.ds_sendInfo.CNT]"+ 
		this.ds_sendInfo.getRowCount() +"[ds_sendInfo.saveXML()] \n"+ this.ds_sendInfo.saveXML() );  	 
 
	var sRecvUsrEmail = "";
	
	if(this.ds_sendInfo.getRowCount() > 0)
	{
		for(var i=0; i < this.ds_sendInfo.getRowCount(); i++) 
		{	 
			v_mustSendMailCnt = v_mustSendMailCnt + 1;		// 보내야 할 메일 갯수
			
			sRecvUsrEmail = this.ds_sendInfo.getColumn(i,"RECV_USR_EMAIL");		// 받는 사람 Email
			
			if(!gfn_isNull(sRecvUsrEmail))	// 받는 사람 Email이 존재하면
			{
				v_sendMailCnt = v_sendMailCnt + 1;		// 보낸 메일 갯수
				this.fn_sendMail(sRecvUsrEmail, this.ds_sendInfo.getColumn(i,"TEM_NM"), v_sendMailCnt);		// 이메일 발송 처리 함수 호출 
				//trace("[/NC_ProjectInput.xfdl][fn_setSendMailChos()]==> [TEST_41][i_번째]"+ i +"[보내야 할 SMS 갯수]"+ 
					v_mustSendMailCnt +"[보낸 메일 갯수]"+ v_sendMailCnt +"[sRecvUsrEmail]"+ sRecvUsrEmail );		
			}
		}
	}
}

/***********************************************************************
* 함수명  		: fn_sendMail
* 설명 			: 이메일 발송 
***********************************************************************/
this.fn_sendMail = function(sRecvUsrEmail, sRecvUsrNm, v_sendMailCnt)
{
	//trace("[/NC_ProjectInput.xfdl][fn_sendMail()]==> [이메일 발송][TEST_01]" );
	
	var sSdUsrEmail = "gqms@hyundai-steel.com";			// 보내는 사람 Email(관리자: 이상탁 차장 이메일)  
	var sTitle = "[공지]귀하는 AP QMS 프로젝트의 CFT 구성원 입니다.";	// 제목
	//var sUrl = application.services["svcurl"].url +"APQMS";		// svc url 
	var sCntn = "AP QMS 프로젝트의 CFT 구성원이 되신 것을 진심으로 축하드립니다.<br> 앞으로 적극적인 참여 부탁 드립니다. 감사합니다.";	// 내용
 	
 	this.ds_mail.clearData();
 	
	this.ds_mail.insertRow(0);
	this.ds_mail.setColumn(0,"SD_USR_EMAIL", sSdUsrEmail);		// 보내는 사람 Email(관리자)
	this.ds_mail.setColumn(0,"RECV_USR_EMAIL", sRecvUsrEmail);	// 받는 사람 Email
	this.ds_mail.setColumn(0,"EMAIL_TTL", sTitle);		// 제목
 	this.ds_mail.setColumn(0,"EMAIL_CNTN", sCntn);	 	// 내용 
	trace("[/NC_ProjectInput.xfdl][fn_sendMail()]==> [TEST_61][실재 받는 사람 Email]"+ sRecvUsrEmail +"[실재 받는 사람]"+ 
		sRecvUsrNm +"[ds_mail(입력).CNT]"+ this.ds_mail.getRowCount() +"[ds_mail.saveXML()] \n"+ this.ds_mail.saveXML() );
	
 	this.fsp_callService(
 		"SY_MailAction"		// 호출할 서비스(Java)
		,"Send"				// 메소드(Java)
 		,"ds_mail=ds_mail"	// inDs
 		,""					// outDs
 		,""					// Aguments
 		,"fn_callback"		// 콜백 함수 명
		, false				// error시 callback 호출 여부 
		, false				// "처리 중입니다."라는 창 표시 여부
		, true				// 서버와 통신 방식(true: 비동기(Default), false: 동기)	
		, "sid_sendMail"		// 서비스 요청 아이디(콜백 함수에서 사용 가능)
	); 
}

/***********************************************************************
 * 함수명  	: fn_callback
 * 설명 		: 콜백 함수 
***********************************************************************/	 
this.fn_callback = function(nErrorCode, sErrorMag, sid)
{ 
	trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_01][sid]"+ sid +"[nErrorCode]"+ nErrorCode 
		+"[sErrorMag]"+ sErrorMag); 
   
	switch(sid)
	{ 
		case "sid_find" :   	// 조회 이면   
			//trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_11][ds_sendInfo.CNT]"+ 
				this.ds_sendInfo.getRowCount() +"[ds_sendInfo.saveXML()] \n"+ this.ds_sendInfo.saveXML() );
		  	this.fn_setSendMailChos();		// 메일 발송 대상 선택 처리   // TEST @@@ ===========>
			break;
  	 
		case "sid_sendMail" :   
			trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_31][SMS 발송][ds_sendInfo.CNT]"+ 
				this.ds_sendInfo.getRowCount() +"[v_mustSendSmsCnt]"+ v_mustSendSmsCnt ); 
			
			if(this.ds_sendInfo.getRowCount() == v_mustSendMailCnt)		// 전송 정보 Ds와 보내야 할 메일 갯수가 같으면(마지막)
			{
				//trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_31] [EMAIL발송_완료][sid]"+ sid ); 
				gfn_alert(this, "I0056", "SMS, EMAIL발송");		// I0056: [M1] 처리가 완료 되었습니다. 
			}
			else
			{
				this.fn_setSendMailChos();		// 메일 발송 대상 선택 처리
				return;
			}
			break;  
		 
	} 
}
--------------------------------------------------------------------------------------------------------------------------------

- /CM_UsrtMngm_S01.xadl 파일에서 
	<statement>
	/* 사용자 정보 조회 ==> [/cm/CM_UsrtMngm_S01.xml] */ 
	SELECT A.USER_ID 
		     , A.NM
		     , A.NM AS TEM_NM 		-- 구성원명
		     , A.EMAIL
		     , A.EMAIL_RCV_YN 		-- E-mail 수신 여부
		     , A.PHONE 
		     , A.PHONE_RCV_YN 		-- 핸드폰 수신 여부 
		     , (CASE
	            WHEN (A.EMAIL_RCV_YN IS NULL OR A.EMAIL_RCV_YN ='0') THEN ''
	            ELSE A.EMAIL   
	        	END) AS RECV_USR_EMAIL  	-- 받는 사람 EMAIL(E-mail 수신한 사람만 조회)
	    	, (CASE
	            WHEN (A.PHONE_RCV_YN IS NULL OR A.EMAIL_RCV_YN ='0') THEN ''
	            ELSE A.PHONE
	        	END) AS RECV_USR_PHONE  	-- 받는 사람핸드폰핸드폰 수신한 사람만 조회)  
	  FROM HSSCU100 A LEFT JOIN HSBCV100 B ON A.CUST_CD = B.CUST_CD
	                  LEFT JOIN HSHRA200 C ON A.DEPT_CD = C.DEPT_CD
	                  LEFT JOIN HSCMF100 D ON A.SIGN_SEQ = D.FILE_ID
	                  LEFT JOIN HSBCA200 F	ON A.JOB_POS = F.BASE_CD
	 	WHERE 1 = 1
		<isNotNull col="TEAM_RID">
			AND A.USER_ID IN (#TEAM_RID$#)		-- 구성원ID --> ds_cond_02 Ds에서 받은 배열(TEAM_RID)을 조회 처리
			// AND A.USER_ID IN ('1515533','1515940','1516175','1519927','1519976','1520131')				-- 구성원ID
		</isNotNull>	 
 ORDER BY USER_ID	
 </statement>
 	
	<input default-name="ds_cond">
		<col name="USER_ID" size="20" type="VARCHAR" description="사용자ID" options="" />  
		<col name="TEAM_RID" size="256" type="VARCHAR" description="구성원ID" options="" /> 
	</input>
	
	<output default-name="ds_list">
		<col name="USER_ID" size="20" type="VARCHAR" description="사용자ID" options="" />  
		<col name="PHONE" size="50" type="VARCHAR" description="핸드폰" options="" />  
		<col name="RECV_USR_EMAIL" size="50" type="VARCHAR" description="받는 사람 EMAIL" options="" />  
	</output>
</query> 
==============================================================================================================

-- 칼럼 추가 @@@ ==> 취소 함
ALTER TABLE HSPMA110    -- 프로젝트구성원 TB
ADD
( 
	RECV_USR_EMAIL  		VARCHAR(50),			-- 받는 사람 EMAIL
	RECV_USR_PHONE		VARCHAR(50),			-- 받는 사람  핸드폰
	-- EMAIL_RCV_YN          VARCHAR(1),		 		-- E-mail 수신여부
	-- PHONE_RCV_YN          VARCHAR(1)				--  핸드폰 수신여부
);

COMMENT ON COLUMN QMSMGR.HSPMA110.RECV_USR_EMAIL IS '받는 사람 EMAIL';
COMMENT ON COLUMN QMSMGR.HSPMA110.RECV_USR_PHONE IS '받는 사람 핸드폰';
COMMENT ON COLUMN QMSMGR.HSPMA110.EMAIL_RCV_YN IS 'E-mail 수신여부';
COMMENT ON COLUMN QMSMGR.HSPMA110.PHONE_RCV_YN IS '핸드폰 수신여부';
; 
--------------------------------------------------------------------------------------------------------------------------------

 -- 칼럼 추가 @@@
ALTER TABLE HSSCU100    -- 사용자등록 정보 TB
ADD
( 
    EMAIL_RCV_YN CHAR(1)      			-- E-mail 수신여부
    , PHONE_RCV_YN CHAR(1) 				--  핸드폰 수신여부
);
 
COMMENT ON COLUMN QMSMGR.HSSCU100.EMAIL_RCV_YN IS 'E-mail 수신여부';
COMMENT ON COLUMN QMSMGR.HSSCU100.PHONE_RCV_YN IS '핸드폰 수신여부';
==============================================================================================================

<!--// 01. 이메일 수신 정보 Ds(ds_mailRecvUsr Ds) //-->
<Dataset id="ds_mailRecvUsr" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" 
enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
<ColumnInfo>
  <Column id="RECV_USR_EMAIL" type="STRING" size="256" description="받는 사람 EMAIL"/>
  <Column id="EMAIL_RCV_YN" type="STRING" size="256" description="EMAIL 수신여부"/>
</ColumnInfo>
</Dataset>
 
<!--// 02. SMS 수신 정보 Ds(ds_mailRecvUsr Ds) //-->
<Dataset id="ds_mailRecvUsr" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" 
enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
<ColumnInfo>
  <Column id="RECV_USR_PHONE" type="STRING" size="256" description="받는 사람 핸드폰"/>
  <Column id="PHONE_RCV_YN" type="STRING" size="256" description="핸드폰 수신여부"/>
</ColumnInfo>
</Dataset>
==============================================================================================================
 
■■■■■■■■■■■■■■■■■■ 2018.09.07(금) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==> 강전관 과장 은행 대출 후 12시에 출근, 여상무님 19시 퇴근, 서울행(20:12 ~ 22:07, 삽교역 -> 영등포역)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- SMS 전송
1. SMS송신 프로시져(PR_CM_SMS_SEND)
2. 이메일 수신여부, SMS 수신여부 
=============================================================================================================

- 2018.04.16_현대제철 apqms_OffLine_09.10 정리(OffLine)
1. 이메일로 보냄(18시) ==> 2018.04.16_현대제철 apqms_OffLine_09.10.7z
2. apqms_OffLine_09.10 정리 방법
 1) D:\QMS\APQMS\workspace\APQMS\apqms폴더 복사하여  2018.04.16_현대제철 apqms_OffLine_09.10폴더에 붙여넣기
 2) 로그인(/commLogin.xfdl) 화면 수정
 <CheckBox id="chkSaveId" taborder="9" text="아이디 저장(OffLine_09.10)" left="720" top="307" height="20" width="280" 
 onchanged="chkSaveId_onchanged" style="color:darkviolet;"/>
 /***********************************************************************
 * 함수명  	: form_onload
 * 설명 		: 폼 로딩 
***********************************************************************/
this.form_onload = function (obj:Form, e:LoadEventInfo)
{ 
	// this.fsp_init();	// [FSP 서버] FSP initialization 	==> 77. OffLine 처리(주석 처리) @@@ ===>  
 
	// this.fn_onloadFirst();	// 로그인(최초) 	==> 77. OffLine 처리(주석 처리) @@@ ===>  
}

3. 화면 refresh
/***********************************************************************
 * 함수명  	: application_onload
 * 설명 		: application 로딩  
***********************************************************************/
this.application_onload = function(obj:Application, e:nexacro.LoadEventInfo)
{
	trace("[/APQMS.xadl][application_onload()] ==> [최초 로딩] [TEST_01_8][T: 현대제철 AP QMS Prj]" );   	
	// TEST_01_8, TEST_01_9로 변경하 것 @@@@
}

/***********************************************************************
 * 함수명  	: btn_login_onclick
 * 설명 		: 로그인 버튼 클릭 이벤트 
***********************************************************************/
this.btn_login_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{ 
	this.fn_loginTr_TEST();	// 로그인 조회	 ==> 77. OffLine 처리  @@@ ===> 
	//this.fn_loginTr();	// 로그인 조회 ==> 77. OffLine 처리(주석 처리) @@@ ===> 
}
 3) gds 정보 수정(필요시) ===> globalvars.xml 파일
<!--// 메뉴 정보 Ds(gds_menu Ds) //--> 
<!--// 마이 메뉴 정보 Ds(gds_myMenu Ds) //--> 
 ==> <!--// 추가 ==> 마이 메뉴 정보 Ds(gds_myMenu Ds) 추가: ds_bookmark 제거]: 2018.05.01, by 진태만 //-->
<!--// 메세지 정보 Ds(gds_message Ds) //-->  
 4) gds가 반영이 안되면:  GloblaVariables > gds_menu Ds: useclientlayout="true" --> ="false"로 변경 후 다시 ="true"로 변경할 것 
=============================================================================================================

- ds_server Ds를 이용한 OffLine 처리
1. 스크롤 페이지 처리 샘플(/paging_samplr_sc.xfdl): 06. Scroll Paging 조회[OffLine] 샘플
 1) this.ds_list.copyData(this.ds_server, true);		// ds_server Ds에서 복사(ds_server Ds가 DB 서버 역할 수행)
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.08(토) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==>  

- 주말
08:00 기상
08:20 집출발(수종): 자전거 
08:35 속편한 내과 도착
08:00 진료(정문기 원장) ==> 타 병원 식후혈당 수치를 믿을 수 없고 현재 먹고 있는 약 끊고 다음주에 다시 피 검사하자고 함.
09:00 직장인 건강 검진(전 날 밤 10시 이후에 음식 섭취 금지)
		==> 피 뽑기, 소변, 가슴둘레 측정, 시력 측정, 청각 측정, X-ray, 위 수면 내시경(30분 정도 소요됨)
09:50 진료(정문기 원장) ==> 위 내시경 결과 위에 작은 염증이 있지만 크게 염려할 필요는 없다고 함
10:30 종료
10:40 귀가
11:00 집출발(수종)
12:20 무지개놀이터 키즈 카페(대림2동 주민센터 근처) ==> 아이입장(1시간): 4천원(3시간 만 원), 어른 입장료(2천원)
		==> 총 만 2천원(영업 시간: 10 ~20시 종일권(주말): 만 7천원)
14:30 종료
14:50 귀가
15:00 중식(강냉이, 복숭아)
15:40 인터넷 서핑(당뇨병 조사)
19:00 석식(김밥)
19:30 이마트 구로점(수종)
20:30 귀가
23:50 취침
==============================================================================================================

- [당뇨병] 당뇨의 진단과 혈당체크법 - [조동혁 내과/신장내과] 100세 건강시대
==> https://www.youtube.com/watch?v=G6Edp6ATypY&t=4s
1. 혈당값(mg/dl)
 1) 공복: 99mg/dl 이하 ==> 정상, 126mg/dl 이상 ==> 당뇨 진단
 2) 식후 1시간: 180mg/dl 이하 ==> 정상, 200mg/dl 이상 ==> 당뇨 진단
 2) 식후 2시간: 140mg/dl 이하 ==> 정상, 200mg/dl 이상 ==> 당뇨 진단
2. 당화혈색소(A1C) [3개월 평균 수치]: 6.5mg/dl 이상 ==> 당뇨 진단
==============================================================================================================

[3분건강] 당화혈색소와 식후혈당-1편
==> https://www.youtube.com/watch?v=CzM0FQn9beU
1. 당화혈색소: 우리 몸에 당이 높아지게 되면 적혈구에 '당화'라는
화학작용이 일어남. 100개의 적혈구에 몇 개가 당화됐는지를 %로
나타낸 것. 적혈구 수명이 90 ~ 120일의 혈당 변화 측정이 가능. 5.7% 미만 정상, 6.5% 이상
내 평균 혈당 = 당화혈색소 수치 * 30 - 40
예) 내 평균 혈당 = 7(7%) * 30 - 40 = 170mg/dl
----------------------------------------------------------------------------------------------------------------
 
[3분건강] 당화혈색소와 식후혈당-2편
==> https://www.youtube.com/watch?v=B9go9XIAGvw
1. 식후혈당:160mg/dl 미만 정상
==============================================================================================================
 
- 당뇨병의 다섯가지 색깔(5 colors of diabetes mellitus)(FDESS) [닥터 조홍근의 3분건강]
==> https://www.youtube.com/watch?v=gzEXtgAYgow&feature=youtu.be
==> 0BNNN(B: Bad, D:Good, N: Neutral) 
==> 1. F(Family): 유전, 2. D(Diet): 식사, E(Exercise): 운동, 4. S(Sleep): 잠, 6. S(Stress): 스트레스
--------------------------------------------------------------------------------------------------

1. 식사(Diet)
1) 나쁜 식사
 가. 아침을 거름
 나. 저녁에 많이 먹음
 다. 빨리 먹음
 마. 가공 식품을 많이 먹음
 바. 단순 탄순화물을 많이 먹음(백미, 간 식빵, 면, 떡)
 사. 기름진 식사를 함.
 아. 편식
 자. 과일 많이 먹음
2) 좋은 식사
 가. 하루 3끼를 먹음
 나. 아침을 제대로 먹음
 다. 천천히 먹음
 라. 가급적 가공하지 않은 음식을 먹음
 마. 복합 탄수화물을 먹음
 다. 단촐한 식사를 함
 바. 골고루 먹음
------------------------------------------------------------------

2. 운동(Exercise) 습관
1) 나쁜 습관
 가. 거의 운동 안함
 나. 의자에 붙어 삶
 다. 컴퓨터 게임
 라. 1주일에 한번 등산하고 뒷풀이로 술과 고기
 마. 골프를 운동으로 잘못 생각
 바. 노동은 운동이 아님
 사. 단순한 걷기는 운동이 아님
 2) 좋은 습관
 가. 1주일에 4번 이상 운동
 나. 한 번에 30분 이상
 다. 유산소 외에 근육운동 함께 함
 라. 체형 교정 
 마. 빨리 걷기는 뱃살 빼는데 도움이 됨
------------------------------------------------------------------

3. 잠(Sleep)
1) 나쁜 잠
 가. 교대 근무라 잠이 자꾸 바뀜
 나. 11시 이후에 잔다.
 다. 스마프폰이나 컴이나 TV를 보다 잔다.
 라. 술 마시고 잔다.
 마. 걱정을 껴안고 잔다.
 바. 자주 깬다.
 사. 아침에 너무 늦게 일어난다.
 아. 코를 곤다.
2) 좋은 잠
 가. 11 ~ 3시 사이에 꼭 잠들어 있다.
 나. 11시 전에 잔다.
 다. 침실에서는 스마트폰 안봄
 라. 자기 2시간 전에는 음식을 먹지 않는다.
 마. 푹 잔다.
 바. 자주 깬다.
 사. 너무 늦게 깨지 않는다.
==============================================================================================================
 
- 검진표 보면서 당신의 당뇨병 위험을 평가하는 법[닥터 조홍근의 3분건강]
==> https://www.youtube.com/watch?v=WMQ5QIYDw6k&feature=youtu.be
1. 뱃살
 1) 90cm(35 인치) 이상 위험
2. 피검사에서 지방간을 보는 수치
 1) AST: 40 넘었을 때
 2) ALT: 45 넘었을 때
3. 중성 지방
  가. 정상: 150mg/dl 미만
  나. 고중성지방혈증: 150mg/dl 이상
4. DL 콜레스테롤(몸에 좋다고 하는 콜레스테롤)
  가. 정상: 45 이상
  나. 이상: 45 또는 40 미만
5. 공복혈당
  가. 학문적: 90mg/dl 이하 정상
  나. 임상적: 100mg/dl 미만 정상(100 이상 부터 공복형당장애) 
==============================================================================================================

- 같은 음식을 먹어도 식후 혈당을 더 낮추는 방법[닥터 조흥근의 3분 건강] ==>
https://www.youtube.com/watch?v=fec_z6eNYwg
1. 탄수화물 나중 식사[단백질, 지방질, 섬유질 먼저 먹기]
==============================================================================================================

- 당뇨의 골든타임, 채널TV, 김성원탈렌트 외 
==> https://www.youtube.com/watch?v=t5rS9HvBNyc
1. 메일(단백질 풍부): 단백질 주먹밥, 단백질 전
==============================================================================================================

- ezPDF Editor 버전 3.0.2.7(pdf 변환 가능)
1. pdf -> ppt, word, text 변경 가능 ==> 버전 업데이트하지 말 것
==============================================================================================================

- 2018.02_bizinfo_branch(2018.02(은행연합회 전환 Prj))
1. D:\01. TAMA_DATA\02. TAMA Project\2018\2018.02(은행연합회 전환 Prj)\eGovFrameDev-3.6.0-64bit\eclipse\workspace\bizinfo_branch\nxui\biz
2. 01. 은행연 Prj biz_eclipse.exe
 1) 대상(T): C:\eGovFrameDev-3.6.0-64bit\eclipse\eclipse.exe -vm C:\eGovFrameDev-3.6.0-64bit\jdk1.7.0_80\bin\javaw.exe 
 -data C:\eGovFrameDev-3.6.0-64bit\eclipse\workspace
 2) 시작 위치(S): C:\eGovFrameDev-3.6.0-64bit\eclipse
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.09(일) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 소식 시작(음식량 조절, 적게 골고루 먹기)

▦ 축구
08:00 기상
08:30 조식(강냉이)
09:00 인터넷 서핑(당뇨병 조사, 은행연합회 전환 Prj 분석)
12:00 중식
13:00 인터넷 서핑(당뇨병 조사) ==> 루옌, 수종 이마트 쇼핑 감(장난감 사옴)
15:30 집출발 
15:50 대림운동장
16:20 게임(은혜교회팀: 어울림 ==> 3쿼터 뜀(15명 나옴), 날씨 선선해서 좋은, 컨디션 좋음(식사 조절, 소식)
18:00 종료
18:05  맛닭꼬(남구로점)에 전화해서 치킨 포장 예약 
18:10 엘마트(우유, 현미 녹차 구입)
18:30 치킨(갈릭 베이크[양념] ==> 맛닭꼬(남구로점), 10,900원
18:45 귀가
19:00 석식(치킨)
19:35 샤워
19:50 집출발
20:00 대림역 7호선 마을버스 정류장(탑승)
20:20 영등포역 도착
20:49 예산행(20:49 ~ 22:36, 영등포역 -> 삽교역) 탑승
22:40 삽교역 도착
23:00 귀가
23:40 TV 시청
01:00 취침 
==============================================================================================================
 
■■■■■■■■■■■■■■■■■■ 2018.09.10(월) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 20:20 ==> 이상탁 차장 13시 출근, [11번가] 커피믹스 170T 화이트골드 170T 도착, 루옌 선물 베트남 나이키 신발 첫 개시

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 보안 점검 리스트 처리
1. 보안 점검 리스트 처리 리스트 분석
============================================================================================================== 

- 현대제철, 1차 밴드 프로그램
1. AP 시스템(ERP) ==> 현대제철, 1차 밴드(소유): 공유 안함
2. MES (Manufacturing Execution System) 시스템 ==> 생산, 자재 관리(소유): 공유 함
3. AP 품질관리 시스템(AP QMS) ==> 현대제철, 1차 밴드: 공유 함
============================================================================================================== 

- 2018.04.16_현대제철 apqms_OffLine_09.10 정리(OffLine)
A. 상단 > Options: 클릭 > Options(새창)
  가. Environment
   ==> General: 클릭
0. Working Folder ==> D:\01. TAMA_DATA\03. TAMA Project Source\2018.04.16_현대제철 apqms_OffLine_09.10
   ==> Build: 클릭 		
1. Generate path ==> D:\01. TAMA_DATA\03. TAMA Project Source\2018.04.16_현대제철 apqms_OffLine_09.10\WebContent
2. Base Lib Path ==> D:\01. TAMA_DATA\03. TAMA Project Source\2018.04.16_현대제철 apqms_OffLine_09.10\nexacro14lib
-------------------------------------------------------------------------------------------------------------------------------

1. 이메일로 보냄(18시) ==> 2018.04.16_현대제철 apqms_OffLine_09.10.7z
2. apqms_OffLine_09.10 정리 방법
 1) D:\QMS\APQMS\workspace\APQMS\apqms폴더 복사하여  2018.04.16_현대제철 apqms_OffLine_09.10폴더에 붙여넣기
 2) 로그인(/commLogin.xfdl) 화면 수정
 <CheckBox id="chkSaveId" taborder="9" text="아이디 저장(OffLine_09.10)" left="720" top="307" height="20" width="280" 
 onchanged="chkSaveId_onchanged" style="color:darkviolet;"/>
 /********************************************************************** 
 * 함수명  	: form_onload
 * 설명 		: Form 로딩
 * params  		: None
 * return Type 	: None 
***********************************************************************/
this.form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	trace("[/SY_MessageInputMtGual.xfdl][form_onload()] ==> [폼 로딩][TEST_01][T: Message 등록(다국어) 화면]" );
  
	this.fsp_init();	// [FSP 서버] FSP initialization(Dataset 생성)
	
	this.gfn_onLoad(obj, e);  	// Form Load 공통 함수 호출(필수)
	
	//this.gfn_getCommCodes();	// 공통코드 조회    ==> 77. OffLine 처리(주석 처리) @@@ ===>  
  // TEST @@@ ==> 77. OffLine 처리 @@@ ===>  
	//trace("[/SY_MessageInputMtGual.xfdl][form_onload()] ==> [폼 로딩][TEST_02]" );
	
	this.grd_list.setFormatColProperty(3, "band", "left");	 // 틀고정(3번째 칼럼)
	trace("[/SY_MessageInputMtGual.xfdl][form_onload()] ==> [폼 로딩][TEST_end]" );
}

3. 화면 refresh
/***********************************************************************
 * 함수명  	: application_onload
 * 설명 		: application 로딩  
***********************************************************************/
this.application_onload = function(obj:Application, e:nexacro.LoadEventInfo)
{
	trace("[/APQMS.xadl][application_onload()] ==> [최초 로딩] [TEST_01_8][T: 현대제철 AP QMS Prj]" );   	// TEST_01_8, TEST_01_9로 변경하 것 @@@@
}
------------------------------------------------------------------------------------------

- ds_server Ds를 이용한 OffLine 처리
1. 강관수입검사 화면[OffLine](/QI_SteelPipeImpInsp.xfdl)
 1) this.ds_list.copyData(this.ds_list_server, true);		// ds_list_server Ds에서 복사(ds_list_server Ds가 DB 서버 역할 수행)
 2) 
 this.ds_detail.clearData();
 if(this.ds_detail_server.getRowCount() > 0)
	{     
		for (var i=0; i < this.ds_detail_server.getRowCount(); i++) 
		{	  
			trace("[/QI_SteelPipeImpInsp.xfdl][fn_callback_OffLine()]==> [TEST_40][i_번째]"+ i +"[ds_list.IQC_NO]"+ 
			this.ds_list.getColumn(this.ds_list.rowposition, "IQC_NO") +"[ds_detail_server.IQC_NO]"+ this.ds_detail_server.getColumn(i, "IQC_NO") );
			
			if(this.ds_list.getColumn(this.ds_list.rowposition, "IQC_NO") == this.ds_detail_server.getColumn(i, "IQC_NO"))		// 검사번호가 같으면
			{ 
				this.ds_detail.addRow();
				this.ds_detail.copyRow(this.ds_detail.getRowCount()-1, this.ds_detail_server, i);	// ds_detail_server Ds에서 복사(ds_detail_server Ds가 DB 서버 역할 수행)
				trace("[/QI_SteelPipeImpInsp.xfdl][fn_callback_OffLine()]==> [TEST_41][i_번째]"+ i +"[02. ds_detail.CNT]"+ this.ds_detail.getRowCount() );		
			}
		}
	} 
==============================================================================================================
 
- 운영 서버 C 드라이브 용량
1. 53.1GB(사용 중), 24.5GB(가능 가능), 총 60GB ==> 2018.09.10(월)
============================================================================================================== 

- 메뉴 구조도 수정 @@@
-- 기초코드-소분류 TB  ==> 협력사표준류관리(VD) 추가
SELECT *
FROM	HSBCA200   		-- 기초코드-소분류 TB   
WHERE MAIN_CD = 'SC100'
ORDER BY SUB_CD,MAIN_CD, ORD_SQ
;
============================================================================================================== 
 
- 2018.02_bizinfo_branch(2018.02(은행연합회 전환 Prj)) 설치
1. D:\01. TAMA_DATA\02. TAMA Project\2018\2018.02(은행연합회 전환 Prj)\eGovFrameDev-3.6.0-64bit\eclipse\workspace\bizinfo_branch\nxui\biz
2. 01. 은행연 Prj biz_eclipse.exe
 1) 대상(T): C:\eGovFrameDev-3.6.0-64bit\eclipse\eclipse.exe -vm C:\eGovFrameDev-3.6.0-64bit\jdk1.7.0_80\bin\javaw.exe -data C
 :\eGovFrameDev-3.6.0-64bit\eclipse\workspace
 2) 시작 위치(S): C:\eGovFrameDev-3.6.0-64bit\eclipse
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.11(화) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 20:00 ==> 도보 출근(06:40 ~ 07:00, 3단보행법[바른 걷기]), 강전관 은행 방문(대출 상담2, 07:00 ~ 15:40)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 보안 점검 리스트 처리[보안성 점검 체크 사항]
1. 보안 점검 리스트 처리 리스트 분석
============================================================================================================== 

- SSO연동 처리 [NTES: http://www.nets.co.kr]
1. NETS SSO Agent 적용[개발 서버에서]
 1) nsso-agent-15.jar 설치됨(/APQMS/WebContent/WEB-INF/lib)
 2) D:\QMS\APQMS\workspace\APQMS\WebContent\APQMS\ssoagent 폴더에 reloadpolicy.jsp, viewssoconfig.jsp 파일 복사
 3) D:\QMS\APQMS\workspace\APQMS\WebContent\WEB-INF\classes 폴더에 agentconfig.xml 파일 복사

2. sso_steel.jsp(샘플 파일) 적용[개발 서버에서]
 1) D:\QMS\APQMS\workspace\APQMS\WebContent\APQMS 폴더 밑에 적용

3. 외부 사이트 호출 화면(index_sso.jsp) 생성[운영 서버에서] 
 1) D:\QMS\APQMS\workspace\APQMS\WebContent\APQMS 폴더 밑에 적용
 2)  https://apqms.hyundai-steel.com/APQMS/index_sso.jsp[/sample.jsp]
	<li><a href='javascript:go("https://apqmsdev.hyundai-steel.com/APQMS/sso_steel.jsp?gv_token=1515533", "AP QMS");'>71. 
	AP QMS[개발 서버] SSO 호출</a></li> 

4. 운영 서버에서 외부 사이트(개발 서버)의 sso_steel.jsp 파일 호출
 1) <a href='javascript:go("https://apqmsdev.hyundai-steel.com/APQMS/sso_steel.jsp?gv_token=1515533", "AP QMS");'>71. 
 AP QMS[개발 서버] SSO 호출</a>	 ==> 클릭 @@@ 

5. 개발 서버 sso_steel.jsp 파일에서 에러 발생
1) https://apqmsdev.hyundai-steel.com/APQMS/sso_steel.jsp?gv_token=1515533
 가. sso_steel.jsp 파일에서
try
{  
	out.print("[/sso_steel.jsp] [70. 로컬 서버] ==> [TEST_02][인증객체생성 및 인증확인_전]<br>" ); 
	
	//인증객체생성 및 인증확인
	AuthCheck auth = new AuthCheck(request, response);	    	// 에러 발생 지점 @@@@
	// 에러 내용: com.nets.sso.common.AgentException: 등록되지 않은 SSO 사이트 웹 서버로 부터 요청되었습니다., Exception Code = 13000003 
	// 13000003: AgentExceptionCode.FailedToCallSSOService	SSO서비스 연결에 실패하였습니다.
	out.print("[/sso_steel.jsp] [70. 로컬 서버] ==> [TEST_02][인증객체생성 및 인증확인_후]<br>" ); 
	
	//인증확인
	AuthStatus status = auth.checkLogon();
	out.print("[/sso_steel.jsp] [70. 로컬 서버] ==> [TEST_04]<br>" );  
 }  
 ------------------------------------------------------------------------------------------
 
6. agentconfig.xml 파일에서  ==> D:\QMS\APQMS\workspace\APQMS\WebContent\WEB-INF\classes 폴더에 agentconfig.xml 
<ssoProvider value="ssodev.hyundai-steel.com">     	<!-- SSOProvider: Class는 NSSO 인증서버의 정보를 가지고 있는 클래스  -->
	<ssoServiceUrl value="http://ssodev.hyundai-steel.com/sso/authweb/webservices/ssoservice.asmx" timeOut="5000" />
	<crypto type="TDES" key="50950402f5f9a22c79494fba040f17533785a41d7fabe474f8d835be25cdfed1" />
	<ssoSiteList>
		<ssoSite siteDNS="jsp.hyundai-steel.com" serverIP="192.168.0.44">
			<authCheckLevel level="MEDIUM" />
			<defaultReturnURL value="http://sso.jazanu.edu.sa:7070/nsso-agent-15/sample.jsp" />
		</ssoSite>
	</ssoSiteList>
</ssoProvider>

7. SSO 라이센스를 구입 안 함(서버당 600만원) ==> 개발 중지
==============================================================================================================

- 넥사크로플랫폼 14 Runtime 배포 샘플
1. http://support.tobesoft.co.kr 에서 -> Community -> 팁게시판 에서 배포라고 검색 ==> exacro14Runtime.zip 파일 다운로드
2. 넥사크로플랫폼 14 > 배포 ==> http://docs.tobesoft.com/nexacro_technical_note_ko#7a9dd7542083434c
==============================================================================================================

- esrv.exe - 응용프로그램 오류
1. 현상: 드라이버 업데이트다 하고 나서 보니 esrc.exe 에러, 오류가 뜸. esrv.exe  프로세스는 인텔 소프트웨어 제품군에 포함이 되어 있음
2. 조치: 인텔 드라이버 업데이트 유틸리티를 제거해 주면 해결됨
 1) 제어판 > 프로그램 제거 > Intel(R) Driver @ Support Assistant: 제거
============================================================================================================== 
 
- 핸드폰(갤럭시 S) 액정 필름 구입
1. 강화유리필름 갤럭시 S8, 07_풀커버 필름 2매, 가격: 8,250원 ==> http://item.gmarket.co.kr/detailview/item.asp?goodscode=523017351
------------------------------------------------------------------------------------------------------------------------------

- 케이안 갤럭시 S8/S8+ 3D 풀커버 강화유리, 가격: 12,400원
1. http://www.ssg.com/item/itemView.ssg?itemId=1000021738101&siteNo=6004&salestrNo=6004&ckwhere=ssg_enuri&appPopYn=n
============================================================================================================== 

■■■■■■■■■■■■■■■■■■ 2018.09.12(수) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:10 ~ 21:50 ==> 강전관 과장 황원철 부장한테 스트레스 받음(달력 날짜 계산, 조회 문제), 오이사 방문(13:30: 개발 품질 불량
								, 허민준 대리 연장, 더케이 손보 Prj, 저축은행 연합회 Prj 예정 ==> 11월말 철수 예정, 저번 달 식대 100만원 나옴)
								, 여상무님 서울행(지인 상, 내일 아침에 출근 한다고 함: 팀원들 도보로 출근해야 함)
								, 8월분 상하수도세 영수증 수령(주인이 303호 대문에 간이 영수증 붙여 놓음: 청구할 것)
								, 통합 테스트 준비(수.목.금: 원격 화상 통화, 김동학 차장, 이상탁 차장, 여상무님)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 5번. 주기적으로 패스워드를 변경[보안성 점검 체크 사항]
1. 개인정보 취급시스템: 3개월(90일) 이내 필수
2. 고객용 시스템/앱: 180일 단위로 고객 패스워드 변경 권장을 안내("다음에 변경" 시, 30일 단위 재안내)
 --------------------------------------------------------------------------------------------------------------------------------

-- 칼럼 추가 @@@
ALTER TABLE HSSCU100 		-- 사용자등록 정보 TB
ADD
( 
    PWD_NEXT_CHG_YN   	VARCHAR(1),			--  비밀번호 다음 변경 여부
	PWD_CHG_DT  				VARCHAR(14)			-- 비밀번호 변경일 
);

COMMENT ON COLUMN QMSMGR.HSSCU100.PWD_NEXT_CHG_YN IS '비밀번호 다음 변경 여부';
COMMENT ON COLUMN QMSMGR.HSSCU100.PWD_CHG_DT IS '비밀번호 변경일'; 
==============================================================================================================

/* 사용자 정보 가져오기 ==> [sy:SY_UserInfoInq_S01.xml] [2018.06.18 by 진태만] */  
 SELECT M.USER_ID    	-- 사용자ID   				 
			, M.PWD_NEXT_CHG_YN AS "비밀번호 다음 변경 여부"
			, TO_CHAR(TO_DATE(M.PWD_CHG_DT), 'YYYYMMDD') AS "비밀번호 변경일"
			, TO_CHAR(SYSDATE - 30, 'YYYYMMDD') AS "오늘 날짜 - 30"
			, TO_CHAR(SYSDATE - 90, 'YYYYMMDD') AS "오늘 날짜 - 90" 

			, (CASE WHEN (M.PWD_NEXT_CHG_YN IS NULL AND M.PWD_CHG_DT IS NOT NULL AND TO_CHAR(TO_DATE(M.PWD_CHG_DT), 'YYYYMMDD') 
							< TO_CHAR(SYSDATE - 90, 'YYYYMMDD')) THEN 'Y'   
							-- 비밀번호 다음 변경 NULL, 비밀번호 변경일이 오늘 날짜 - 90일 보다 적으면 ==> 비밀번호 변경일 경과
					 WHEN (M.PWD_NEXT_CHG_YN IS NOT NULL AND M.PWD_CHG_DT IS NOT NULL AND TO_CHAR(TO_DATE(M.PWD_CHG_DT), 'YYYYMMDD') 
							< TO_CHAR(SYSDATE - 30, 'YYYYMMDD')) THEN 'Y' 
							-- 비밀번호 다음 변경 NOT NULL, 비밀번호 변경일이 오늘 날짜 - 30일 보다 적으면("다음에 변경") ==> 비밀번호 변경일 경과
					ELSE 'N' END) AS "01. 비밀번호 변경일 경과 여부"		-- 비밀번호 변경일 경과 여부(PWD_CHG_DT_ELAP_YN)

			, M.LOGIN_DT AS "최근 로그인 시도일"    		 -- 최근 로그인 시도일
			, (CASE WHEN (M.LOGIN_DT IS NOT NULL AND TO_CHAR(TO_DATE(M.LOGIN_DT), 'YYYYMMDD') 
								< TO_CHAR(SYSDATE - 90, 'YYYYMMDD')) THEN 'Y' 
						ELSE 'N' END) AS "02. 로그인 시도일 경과 여부"    			
							-- 로그인 시도일 경과 여부(LOGIN_DT_ELAP_YN): (미접속 3개월 이상 사용자 계정은 접속권한 회수)    
			   ,  '' AS NEW_PWD			-- 새로운 암호(암호화)
			, M.PWD_NEXT_CHG_YN           -- 비밀번호 다음 변경 여부
			, M.DEPT_NAME			-- 부서명  
			, M.TEL_NO AS TEL_NO					-- 전화번호
			, M.MAIL_ADDR AS MAIL_ADDR 		-- 메일주소  
			, M.ACL_GRP_CD   		-- 권한그룹코드 
		, TO_CHAR(TO_DATE(A.PWD_CHG_DT), 'YYYYMMDD') AS "비밀번호 변경일_01" 
		, TO_CHAR(TO_DATE(A.PWD_CHG_DT), 'YYYYMMDDHH24MISS') AS "비밀번호 변경일_02" 
		, TO_CHAR(TO_DATE(A.PWD_CHG_DT), 'YYYY-MM-DD HH24:MI:SS') AS "비밀번호 변경일_03"    -- > 날짜 시간(년월일 시분초 설정)
FROM
( 
	SELECT A.USER_ID							-- 사용자ID
			   , A.PWD	
			   , A.PWD_CHG_DT           		-- 비밀번호 변경일 
			   , A.PWD_NEXT_CHG_YN   		-- 비밀번호 다음 변경 여부
			   , (SELECT MAX(TO_CHAR(TO_DATE(LOGIN_DT), 'YYYYMMDD')) AS LOGIN_DT FROM HSSCU210
					WHERE LOGIN_ID = A.USER_ID) AS LOGIN_DT			-- 최근 로그인 시도일　 
				, A.NM AS KO_NM				-- 한글이름 
				, A.DEPT_CD						-- 부서코드
				, (SELECT MAX(DEPT_NM) AS DEPT_NM FROM HSHRA200
					WHERE DEPT_CD = A.DEPT_CD) AS DEPT_NAME			-- 부서명
				, A.PHONE AS TEL_NO				-- 전화번호
				, A.EMAIL AS MAIL_ADDR 		-- 메일주소  
				, (SELECT MAX(ACL_GRP_CD) AS ACL_GRP_CD FROM HSSCR110 
					WHERE USER_ID = A.USER_ID AND MNG_YN = 'Y') AS ACL_GRP_CD   		-- 권한그룹코드
	FROM HSSCU100 A 	 -- 사용자등록 정보 TB 
	WHERE A.USER_ID = '1519927'  -- 사용자ID 
) M 
; 
==============================================================================================================

- 개발 서버 eclipse 에러 발생
1. 현상:
An internal error has occurred.
java.lang.OutOfMemoryError: Java heap space
	at org.eclipse.jface.text.GapTextStore.allocate(GapTextStore.java:339)
	at org.eclipse.jface.text.GapTextStore.reallocate(GapTextStore.java:290)
	at org.eclipse.jface.text.GapTextStore.adjustGap(GapTextStore.java:223)
2. 원인: 이클립스에서 프로그램 실행시 힙 메모리 부족 오류가 발생하면 아래와 같은 메시지가 출력됨.
 1) 통합 테스트시 용량이큰 이미지를 업로드 해서 에러가 발생한 것으로 추정됨 --> http://kogun82.tistory.com/82
3. 조치: 이클립스(Eclipse) 허용 메모리(Heap size) 최대값(Max)을 높이는 방법 --> http://mainia.tistory.com/4276
 1) eclipse.ini 파일에서
-vmargs
-Xms1024M
-Xmx1024M  		---> 개발 서버는 메모리가 8G인데로 -Xmx2048M로 설정하면 eclipse가 안뜸 @@@@
 2) 프로젝트 실행 시 자바 Heap, Permanent 메모리를 설정하기 위해 eclipse의 Window -> preferences -> Java -> Installed JRES
 -> 체크된 jdk / jre 를 선택하고 아래의 그림과 같이 설정
-XX:PermSize=2048M -Xms=1024M -Xmx2048M  ==> 에러가 발생
==============================================================================================================
 
- 톰캣 메모리 설정
1. catalina.bat 파일에서  ==> http://joont.tistory.com/42
rem SET JAVA_OPTS=%JAVA_OPTS% -Xms2018m -Xmx2048m -XX:PermSize=512m    ===> 운영 서버 설정값(안정적)

- Xms<size>: Java Heap의 최소 크기값을 지정하는 부분입니다.
- Xmx<size>: Java Heap의 최대 크기값을 지정하는 부분입니다.
- XX:PermSize=<size>: Permanent Generation의 최초 크기를 지정하는 값입니다. 
- XX:MaxPermSize=<size>: Permanent Generation의 최대 크기를 지정하는 값입니다.
==============================================================================================================

- [OS 백업 툴] Ghost 설정(5시, 숙소)
- 노턴 고스트 백업(에러)
==> http://the3.tistory.com/13  
1. SGR3x64(win7_x64용).exe 파일 더불 클릭 ==> 시스템 재시작
2. 부팅해서 조금 기다리면 아래 화면이 나오는데 전 1번을 적고 앤터키를 누름
3. 노턴 고스트 프로그램  화면(새창: 파란색)
4. C 드라이브를 백업하기 위해서 Local -> partition -> To image로 들어갑니다.
5. 여기서는 하드디스크가 1개이므로 첫번째를 선택
6. 선택한 하드디스크의 파티션정보가 나옵니다. C 선택
7. 저장할 경로를 지정. 여기서는 D 드라이브에 파일이름을 만들어주고 저장(save)합니다. 
==> 여기서 멈춤: D 드라이브 인식 못함(숙소 GIGABYTE 노트북) @@@@@@
==> 예: Win7_GIGABYTE_Nt_20180912.GHO
8. 압축옵션을 물어보는데 보통 Fast 를 선택하는데 저는 더 압축시키기위해 high를 했습니다.
9. 진행하겠냐고 물어보는데 진행합니다.
10. 백업이 완료되었습니다. continue 들어가서 quit 들어가서 빠져나가면 됩니다. 
==============================================================================================================

- 3단보행법(바른 걷기) ==> https://blog.naver.com/tamario/221357950482
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.13(목) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 22:00 ==>  

- 현대제철 AP 품질관리 시스템 구축 Prj [★] 
- 5번. 주기적으로 패스워드를 변경[보안성 점검 체크 사항] ==> 완료 @@@
1. 개인정보 취급시스템: 3개월(90일) 이내 필수
2. 고객용 시스템/앱: 180일 단위로 고객 패스워드 변경 권장을 안내("다음에 변경" 시, 30일 단위 재안내)
==> 비밀번호 변경 팝업 화면(/pop_chgPwd.xfdl)
==============================================================================================================

- 3번. 미접속 3개월 이상 사용자 계정은 접속권한 회수(잠금)[보안성 점검 체크 사항] ==> 완료 @@@
==> 비밀번호 변경 팝업 화면(/pop_chgPwd.xfdl)
==============================================================================================================

- 2번. 일정 횟수를 초과하는 로그인 실패 시 계정을 잠금 처리[보안성 점검 체크 사항]
1. 계정 잠금 입계 값: 연속 5회 이상
2. 계정 잠금 기간: 60분
3. 계정 수 초기화: 60분 후
--------------------------------------------------------------------------------------------------------------------------------

- (Web Security)로그인 시도 횟수 제한 예제 및 쿼리
1. https://m.blog.naver.com/PostView.nhn?blogId=p952973&logNo=220991799675&proxyReferer=https://www.google.co.kr/

- Secure Coding - 로그인 시도 횟수 제한, 중복 로그인 방지
1. http://cocomo.tistory.com/295
==============================================================================================================

- UbiService 에러[유비 리포트]
1. https://apqmsdev.hyundai-steel.com/APQMS/QuickView.html?formname=sample::UbiReport_smp.xfdl
2. 현상: 미리보기 버튼 클릭 ===> ERO099: UbiService connect error.
3. 조치: UbiService 서비스 재 설치
C:\Windows\system32> cd D:\QMS\APQMS\UbiService\bin
D:\QMS\APQMS\UbiService\bin> svcregist.bat uninstail 
D:\QMS\APQMS\UbiService\bin> echo off
----------------------------------------
 ex : svcregist.bat [install] [uninstall]
----------------------------------------
D:\QMS\APQMS\UbiService\bin> svcregist.bat uninstall
D:\QMS\APQMS\UbiService\bin> echo off
----------------------------------------
     UbiService UnRegistration Job
----------------------------------------
[UbiService Stop]
UbiService: STOP: 서비스가 시작되지 않았습니다
[UbiService Unregist]
Service "UbiService" removed successfully!
----------------------------------------
              Uninstall Completed
----------------------------------------
D:\QMS\APQMS\UbiService\bin> svcregist.bat install
D:\QMS\APQMS\UbiService\bin> echo off
----------------------------------------
      UbiService Registration Job
----------------------------------------
[UbiService Regist]
Service "UbiService" installed successfully!
[UbiService Set Description]
Set parameter "Description" for service "UbiService".
[UbiService Start]
UbiService: START: 작업을 완료했습니다. 
==============================================================================================================

- UbiService 서비스 실행 여부 확인[유비 리포트]
1. 실행 파일 경로: D:\QMS\APQMS\UbiService\bin\nssm64.exe
==> UbiService for UbiReport4.0 
1. 작업관리자 > 서비스(Tab) > 서비스 열기[맨 밑의 화면] > 서비스 > 서비스(로컬) ==> UbiService: 클릭(상태 확인)
==============================================================================================================

- 72. 유비리포트 테스트(개발 서버)
https://apqms.hyundai-steel.com/ubi4/ubihtml.jsp

- 82. 유비리포트 테스트(운영 서버)
https://apqmsdev.hyundai-steel.com/ubi4/ubihtml.jsp
==============================================================================================================

- 메뉴 구조도 수정 @@@
-- 기초코드-소분류 TB  ==> 협력사품질검사(VQ) 추가
SELECT *
FROM	HSBCA200   		-- 기초코드-소분류 TB   
WHERE MAIN_CD = 'SC100'
ORDER BY SUB_CD,MAIN_CD, ORD_SQ
;
============================================================================================================== 

■■■■■■■■■■■■■■■■■■ 2018.09.14(금) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 19:40 ==> 비(07:30 ~ 10:30), 서울행(20:12 ~ 22:07, 삽교역 -> 영등포역), 황부장, 염차장 통테 준비 화상통화하는데 17시에
								  퇴근(염상무님 열받음)

- 현대제철 AP 품질관리 시스템 구축 Prj [★] 
- 2번. 일정 횟수를 초과하는 로그인 실패 시 계정을 잠금 처리[보안성 점검 체크 사항]
1. 계정 잠금 입계 값: 연속 5회 이상
2. 계정 잠금 기간: 60분
3. 계정 수 초기화: 60분 후
4. 참조: Secure Coding - 로그인 시도 횟수 제한 ==> http://cocomo.tistory.com/295
==============================================================================================================

-- 칼럼 추가 @@@
ALTER TABLE HSSCU100 			-- 사용자등록 정보 TB
ADD
( 
    LOGIN_FAIL_CNT     	    NUMBER,				--- 로그인 실패 횟수	 
    LOGIN_TRY_LMT_YN      	VARCHAR(1),		    --- 로그인 시도 제한 여부(Y, N)
    LATEST_LOGIN_DT 	VARCHAR(14)		--- 최근 로그인 일시  
);
 
COMMENT ON COLUMN QMSMGR.HSSCU100.LOGIN_FAIL_CNT IS '로그인 실패 횟수'; 
COMMENT ON COLUMN QMSMGR.HSSCU100.LOGIN_TRY_LMT_YN IS '로그인 시도 제한 여부';
COMMENT ON COLUMN QMSMGR.HSSCU100.LATEST_LOGIN_DT IS '최근 로그인 일시 ';  
==============================================================================================================
 
/* LOGIN 시도 제한 여부 정보 조회 ==> [cm:CM_LoginTryCnt_S01.xml] [2018.09.14, by 진태만] */ 
SELECT (CASE WHEN ((LOGIN_TRY_LMT_YN IS NOT NULL AND LOGIN_TRY_LMT_YN = 'Y') AND TO_CHAR(TO_DATE(LATEST_LOGIN_DT),
							'YYYYMMDDHH24MI') 
						  <![CDATA[<]]> TO_CHAR(TO_DATE(SYSDATE - (1 / 24 / 60 * 60)), 'YYYYMMDDHH24MI') ) THEN 'N' 		
							-- (N: 로그인 시도 제한 여부 Y이고, 60분 경과 여부)
					  WHEN LOGIN_TRY_LMT_YN IS NULL OR LOGIN_TRY_LMT_YN = 'N' THEN 'N' 		-- (N: 로그인 시도 제한 여부 N)
					  ELSE 'Y' END) AS LOGIN_TRY_LMT_YN		  -- 41. 로그인 시도 제한 여부
FROM HSSCU100		-- 사용자등록 정보 TB
WHERE 1 = 1  
	AND USER_ID = #USER_ID_02#			-- 사용자ID
;
--------------------------------------------------------------------------------------------------------------------------------

<statement>
  <![CDATA[  
   /* LOGIN 시도 횟수 정보 저장 ==> [cm:CM_LoginTryCnt_U01.xml] [2018.09.14, by 진태만] */  
	DECLARE 
		count   NUMBER := 0; 
		
	BEGIN  
		SELECT COUNT(*) INTO count
		FROM HSSCU100		-- 사용자등록 정보 TB
		WHERE 1=1
			AND USER_ID = #USER_ID_02#			-- 사용자ID
			AND LOGIN_FAIL_CNT >= 5			/* 로그인 실패 횟수 */ 
		;
	
		IF count  = 0 THEN
			 /* LOGIN 시도 횟수 정보 저장 ==>  */  
			UPDATE HSSCU100		-- 사용자등록 정보 TB
			SET LATEST_LOGIN_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MMSS')	/* 최근 로그인 일시 */
				<isNull col="LOGIN_FAIL_YN"> 
					, LOGIN_FAIL_CNT = 0				/* 로그인 실패 횟수(로그인 성공 이면) */ 
					, LOGIN_TRY_LMT_YN = 'N'		/* 로그인 시도 제한 여부 */   
				</isNull>    
				<isNotNull col="LOGIN_FAIL_YN"> 
					, LOGIN_FAIL_CNT = NVL(LOGIN_FAIL_CNT, 0) + 1			/* 로그인 실패 횟수(로그인 실패 이면) */ 
					, LOGIN_TRY_LMT_YN = 'N'		/* 로그인 시도 제한 여부 */   
				</isNotNull>    
				, MID  = #USER_ID_02#
				, MDT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MMSS')
			WHERE 1=1
				 AND USER_ID = #USER_ID_02#		-- 사용자ID 
					;
		END IF;	  
	  
		IF count = 1 THEN
				/* LOGIN 시도 제한 여부 저장 ==> */  
				UPDATE HSSCU100		-- 사용자등록 정보 TB
				SET LOGIN_TRY_LMT_YN = 'Y'			/* 로그인 시도 제한 여부 */   
					,  LOGIN_FAIL_CNT = 0				/* 로그인 실패 횟수 */ 
				WHERE 1=1
					 AND USER_ID = #USER_ID_02#		-- 사용자ID
					 AND LOGIN_FAIL_CNT >= 5			/* 로그인 실패 횟수 */ 
					;
		  END IF;	               
	END;
	]]> 
</statement> 
--------------------------------------------------------------------------------------------------------------------------------

-- 01. LOGIN 시도 횟수 정보 조회  @@@ 
SELECT  A.USER_ID AS "로그인ID"
        , A.LOGIN_FAIL_CNT AS "로그인 실패 횟수"
        , A.LOGIN_TRY_LMT_YN  AS "로그인 시도 제한 여부" 
        , TO_CHAR(TO_DATE(A.LATEST_LOGIN_DT), 'YYYY-MM-DD HH24:MI:SS') AS "최근 로그인 일시_00시 00분 00초"
        , TO_CHAR(TO_DATE(A.LATEST_LOGIN_DT), 'YYYY-MM-DD HH24:MI') AS "01. 최근 로그인 일시[비교_1]"     -- 최근 로그인 일시 @@@
        -- , TO_CHAR(TO_DATE(SYSDATE), 'YYYYMMDD') AS "오늘" 
        , TO_CHAR(TO_DATE(SYSDATE), 'YYYY-MM-DD HH24:MI') AS "50. 오늘[DDD]_00시 00분" 
        , TO_CHAR(TO_DATE(SYSDATE - (1 / 24 / 60 * 2)), 'YYYY-MM-DD HH24:MI') AS "51. 오늘(60분 경과 후 일시)[비교_2]"    
		-- 1분 지났을 때[제한 60분] @@@
        , (CASE WHEN (A.LOGIN_FAIL_CNT < 5 AND (LOGIN_TRY_LMT_YN IS NOT NULL OR LOGIN_TRY_LMT_YN = 'Y') 
							AND TO_CHAR(TO_DATE(A.LATEST_LOGIN_DT), 'YYYYMMDDHH24MI')  
                    < TO_CHAR(TO_DATE(SYSDATE - (1 / 24 / 60 * 2)), 'YYYYMMDDHH24MI') ) THEN 'N'    
					-- (N: 로그인 시도 제한 여부 Y이고, 1분 경과 여부) ==> 01. 최근 로그인 일시(LOGIN_TRY_LMT_YN) < 51. 오늘(60분 경과 후 일시)
                WHEN LOGIN_TRY_LMT_YN IS NULL OR LOGIN_TRY_LMT_YN = 'N' THEN 'N'     -- (N: 로그인 시도 제한 여부 N)
                ELSE 'Y' END) AS "41. 로그인 시도 통합 제한 여부"     -- 41. 로그인 시도 통합 제한 여부(Y: 제한, N: 제한 없음) @@@
        , A.*                                             
FROM HSSCU100 A     -- 사용자등록 정보 TB                                  
WHERE 1=1
  AND A.USER_ID = '1519927'     --- 로그인ID
;
--=======================================================================================================================
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.15(토) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==>  

- 주말
08:00 기상
08:20 집출발(수종): 자전거 
08:35 속편한 내과 도착
08:40 진료(정문기 원장) ==> 저번주 건강 결과 혈당이 238mg/dl이 나왔다고 함. 종합 검진(30만원 상당): 의료실비 보험 요청할 것(한화손해보험)
		 ==> 심혈관질환 검사(26만원) --> 신체측정, 혈액검사, 대소변검사, 초음파검사(상복부 초음파, 감상선 초음파) ==> http://www.sok88.com/subpage3_1_3.html
10:30 진료(정문기 원장) ==> 심혈관  검진 결과 경동맥 벽이 1/3이 좁아졌다고 함(동맥경화: 당뇨 합병증) 
		심장이 약간 비대, 신장에 작은 돌 발견(심각하지 않음) --> 당뇨가 심각하다고 함(당뇨병약 먹고 14일 후 재방문)
		==> 동맥경화: 동맥의 탄력성이 감소하고, 동맥벽 내면에 기름기가 끼고 이상조직이 증식하여 동맥벽의 폭이 좁아지는 현상
10:50 종료
11:00 귀가
12:00 중식
12:30 집출발(수종)
12:50 대동초교 정류장(507번 버스 탑승: 수종)
13:50 동대문역사공원역 도착(광희동 정류장) 도착
14:10 (주)다이소아 성산점 쇼핑(약통 2개 구입)
14:50 승진 완구 도착(헬로 카봇 - 싼타페 에이스(손오공), 뽀로로 씽씽 포터 트럭(바니) 구입) ==> 수종 생일 선물
15:00 완료
15:30 광희동 정류장(507번 버스 탑승: 수종)
17:10 대동초교 정류장 도착  ==> 버스가 태극기 시위 때문에 남대문에서 남산으로 돌아서 운행
17:30 귀가
19:00 석식
19:30 이마트 구로점(수종)
20:30 귀가
21:00 TV 시청 ==> EPL(토트넘 1:2 리버풀)
22:00 취침
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.16(일) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 

▦ 축구
08:00 기상
08:30 조식(강냉이): 당뇨약 먹음
09:00 인터넷 서핑(축구, 야구 시청)
10:00 루옌 놀러감
12:00 중식
13:00 인터넷 서핑(삼성 S8폰 액정 필름 교체)  
14:00 루옌 귀가
14:30 삼성 갤럭시 S8에 액정 보호 필름 교체
15:30 집출발 
15:50 대림운동장
16:20 게임(은혜교회팀: 어울림 ==> 3쿼터 뜀(15명 나옴), 날씨 선선해서 좋은, 컨디션 좋음(식사 조절, 소식)
18:00 종료 
18:10 엘마트(우유 구입) 
18:45 귀가
19:00 석식
19:35 샤워
19:50 집출발
20:00 대림역 7호선 마을버스 정류장(탑승)
20:20 영등포역 도착
20:49 예산행(20:49 ~ 22:36, 영등포역 -> 삽교역) 탑승
22:40 삽교역 도착
23:00 귀가
23:10 TV 시청
24:00 취침
==============================================================================================================

- [액정 보호 필름] 삼성 갤럭시 S8에 액정 보호 필름 붙이는 방법[갤럭시 S8]
- 스마트폰 액정 보호 필름 쉽고 완벽하게 붙이는 법 ==> https://www.youtube.com/watch?v=4K5ixHZzpnY
- 핸드폰 액정보호필름 기포 없이 붙이는법 ==> https://www.youtube.com/watch?v=X9DVlxfTdxU
- [유니크TV] 집에서 쉽게 곡면 액정필름 붙이기 - 1분안에 가능 ==> https://www.youtube.com/watch?v=9ctaFD7nNDk
==============================================================================================================

- 고스트 백업 파일 보유 현황
1. 개인 노트북(MSI GE60_2OE, 집, 2018.04.20) 백업 파일
 1) 경로 ==> D:\01. TAMA_DATA\51. TAMA SW\03. 추가 프로그램\91. 노튼 고스트(OS 최적화 툴)
 2) 파일명: Win7x64_MSI_180219.GHO, Win7x64_MSI_180221.GHO 2개 파일이 존재
============================================================================================================== 

■■■■■■■■■■■■■■■■■■ 2018.09.17(월) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 21:30 ==> 현대제철 Prj 통합 테스트 2차(10:00 ~ 17:50): 2공장 회의실에서 테스트(강전관 과장, 황부장, 이상탁 차장, 김동학 차장)
								   , 새사람 Prj(소식, 고난의 행군)
							 
- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 2번. 일정 횟수를 초과하는 로그인 실패 시 계정을 잠금 처리[보안성 점검 체크 사항]  ==> 완료 @@@
1. 계정 잠금 입계 값: 연속 5회 이상
2. 계정 잠금 기간: 60분
3. 계정 수 초기화: 60분 후
4. 참조: Secure Coding - 로그인 시도 횟수 제한 ==> http://cocomo.tistory.com/295
==============================================================================================================

- 오이사한테 전화 옴
1. 강전관 과장이 맡고 있는 파일 업로드 부분 확인 하라고 함 ==> 요건 정의
2. 김동학 차장이 파일 업로드 후 미리보기 안된다고 클레임 걸었다고 함. ==> 김차장이 오픈 연기 요청(이상탁 차장 절대 불가: 심각)
 1) 황부장 소스는 미리 DB에 데이타 저장해서 미리보기 가능하다고 함.
 2) 미리보기 때 로컬 경로로 파일 보이게 처리할 예정
==============================================================================================================

- 검사 실적 화면(운영 서버)에서 무한 루프 돔(JDBC 에러가 남)
1. 김도현 대리에게 운영 서버 로그 뽑아서 보냄(tomcat8_fsp-stdout.2018-09-12.log, tomcat8_fsp-stderr.2018-09-12.log)
---------------------------------------------------------------------------------------------------------------------------

- 운영 서버 로그 확인 
1. tomcat8_fsp-stdout.2018-08-13.log ==> DB, JAVA System.out.println 로그 확인
 1) 찾기: 2018/09/17 08:21:51
2. tomcat8_fsp-stderr.2018-08-13.log ==> 에러 로그(System.err.println) 확인  
 1) 찾기: 17-Sep-2018 08:21:51
---------------------------------------------------------------------------------------------------------------------------

- 운영 서버 로그 설정 방법
1. 윈도우에서 설치한 톰켓 실행
 1) D:\QMS\Tomcat\bin\Tomcat8_FSPw.exe 더블 클릭 ==> 실행
2. Apach Tomcat 8.5 Tomcat8_FSP Properties(새창)
 1) 설정: Logging(탭) > Redirect Stdout: auto, Redirect Stderror: auto  
 2) 실행: General(탭) > Start: 클릭 ==> 톰켓의 log폴더쪽에  strerr-날짜.log , std-날짜.log 2종류의 파일이 생성됨
---------------------------------------------------------------------------------------------------------------------------

- 톰캣에서 Log4j를 설정하고도 stdout 로그가 남아요(재시작을 해줘야지만 재시작하는 날짜로 변경됨) ==> https://okky.kr/article/162959
==> catalina.2018-09-17.log 파일 만 매일 자동 생성됨
---------------------------------------------------------------------------------------------------------------------------

- Tomcat Logging
1. 기본 설정은 $CATALINA_BASE/conf/logging.properties 파일을 로딩하여 적용한다.

- Logging 종류
1. JAVA Logging API: Application당 로깅 설정을 제어하기 위해 java.util.logging 기반의 구현체 JULI 사용 - localhost.yyyy-MM-dd.log 
형식의 파일명을 가짐
2. Servlets logging API: javax.servlet.ServletContext.log(…)를 통해 메시지를 때 사용 - manager.yyyy-MM.dd.log 형식의 파일명을 가짐
3. Console: tomcat 운영시 출력되는 STDERR/STDOUT - catalina.out 형식의 파일명을 가짐
4. Access Logging: AccessLogValve 또는 ExtendedAccessLogValve에서 생성되는 로그 - access_log.yyyy-MM-dd.txt 형식의 파일명을 가짐 
---------------------------------------------------------------------------------------------------------------------------

- Tomcat: logging.properties
catalina.yyyy-MM-dd 형태로 아래 세가지 파일이 로깅된다. 
log rotate하지 않으면 금방 하드용량이 꽉 찬다.  
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].handlers = 2localhost.org.apache.juli.FileHandler

org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager].handlers = 3manager.org.apache.juli.FileHandler

org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager].handlers = 4host-manager.org.apache.juli.FileHandler
==> 특별히, 로그가 필요하지 않으면 위 6줄을 모두 주석 처리하거나 log level을 낮추면 된다.  
---------------------------------------------------------------------------------------------------------------------------

- Tomcat 표준출력을 파일로 남기기 ==> http://pantarei.tistory.com/1241 
- cronolog 사용법(apache Log 매일 남기기) ==> http://skibis.tistory.com/35
1. 날짜별 로그 남기기 안됨
 1) 소프트잼 정재훈 대리(운영 서버 아파치 톰캣 직접 설치한 사람)에서 문의 ==> 아파치 톰캣은 자기들 업무가 아니라고 기술 지원 거부
  ==> 소프트잼 대표의 기술 지원이 필요하다고 판단됨
=============================================================================================================

- [도서] 하루 한 끼 당뇨 밥상 구입, 안철우, 세브란스병원 영양팀 공저, 중앙북스, 2016.11.10, 실제 가격: 14,700원(정가: 18,000원)
==> http://www.yes24.com/24/Goods/33265536
- [도서] 그러나, 당뇨는 축복이다. 김수경 저, 은행나무, 2007.07.30
==> http://www.yes24.com/24/goods/59220678
==============================================================================================================

- 한화손해보험 보험금청구 및 서류접수 방법
https://goo.gl/n8BnG7   해당주소 클릭 -> 
상해/질병보험금청구 -> 보험금청구신청-> 간편본인인증 -> 상해/질병보험금청구 -> 보험금청구신청 -> 피보험자선택 -> 
조회 -> 신규접수 -> 개인정보동의 -> 인적사항+ 청구유형 + 사고일시 입력후 청구가능계약 조회
-> 청구내용입력+ 계좌번호 입력후  다음 클릭 -> 파일추가 클릭 후  갤러리에 저장된 서류를 첨부하시거나 카메라로 촬영하신 후  
등록버튼을 클릭
----------------------------------------------------------------------------------------------------------
 
ㅁ 10만원초과(통원)
1. 외래 일자별 진료비 영수증(카드전표 처리불가)
2. 진단명, 진단코드, 통원날짜 기재서류(통원확인서, 소견서, 진료챠트, 처방전 중 택 1)
3. 진료비 세부내역서 또는 상세내역서 중 택 1
4. 보험금청구서(앱또는 URL 접수시는 청구서  생략가능) 
----------------------------------------------------------------------------------------------------------

ㅁ 3만원 초과 ~ 10만원 이하(통원)
1. 외래 일자별 진료비 영수증(카드전표 처리불가)
2. 처방전(한국질병분류코드 필수 기재)
3. 진료비 세부내역서 또는 상세내역서 중 택 1 
----------------------------------------------------------------------------------------------------------

- 개인 팩스(FAX: 0504-177-0898)
==============================================================================================================
 
■■■■■■■■■■■■■■■■■■ 2018.09.18(화) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 22:00 ==> 2공장 회의실에서 통합 테스트(김도현 과장, 이상탁 차장, 김동학 차장), 강전관 과장 어머님 2차 수술(출근 안함)
								, 제3차 남북정상회담(10시, 평양: 문재인, 김정은)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 결재 수정
1. 결재 검토자, 승인자 에디트 박스 입력 ==> 1개 이면 자동 입력, 2개 이상이면 팝업  ==> 완료 @@@
2. 협력사 데이터는 작성자 없이 고객사가 검토자 사용자 입력 가능하게 수정  ==> 완료 @@@
3. 최초 등록시(상단 저장 버튼 클릭) ==> 검토자와 승인자가 같을 때
 1) 검토대기 --> 승인대기로 수정 요청
 2) 최초 Data를 등록, 결재(검토대기 상태)를 하고 this.parent.fn_MainSearch(); 조회 함수에서 fn_setSameRevAprvConf() 함수 호출하여
검토자와 승인자가 같을 때 승인대기로 결재 저장
this.fn_setSameRevAprvConf = function(objDs:Dataset)
{ 
	var sActionNo = "2";		// 검토 action 번호 변경(2: 확인(검토내용))
	
	this.ds_infoMaster.setColumn(0, "P_IN_ACTION_NO", sActionNo);	// 처리구분
	this.ds_infoMaster.setColumn(0, "CONF_NO", objDs.getColumn(objDs.rowposition, "CONF_NO"));	// 결재번호

	this.fn_saveAprvDlng(v_actionNo);	// 결재 저장(결재 상태 변경: 검토대기 --> 승인대기로 수정)
}
==============================================================================================================

- 검사 실적 화면(운영 서버)에서 무한 루프 돔(JDBC 에러 로그가 없음) 
1. 김도현 대리에게 운영 서버 로그 뽑아서 보냄(tomcat8_fsp-stdout.2018-09-17.log)
==============================================================================================================

- 오이사한테 전화 옴(17:00)
1. 통합 테스트하는 데 강전관 과장 업무에서 에러가 많이 발생.
 1) 김동학 차장이 오이사한테 직접 전화해서 내일 오전까지 특급 개발자 1명 데리고 오라고 했다고 함.
 2) 나보고 소스 수정 지원 해달라고 해서 나도 보안 점검 때문에 정신이 없어서 못 한다고 함.
--------------------------------------------------------------------------------------------------------------------------------

- 회의실(22:30)
1. 이상탁 차장, 김동학 차장이 WEB 등록(템플릿) 화면 파일 업로드 부분 에러가 많아서 테스트가 진행 안되고 있다고 함.
 1) 김동학 차장이 자기 회사 상무님에게 보고 한다고 함.
2. 오이사에게 전화해서 보고 함,
 1) 숙소에 와 있는 강전관 과장에게 전화해서 밤새서라도 내일 오전까지 에러 수정하라고 지시함.
 2) 강과장에게 지시 전달
==============================================================================================================

- Orange 사이트(http://www.warevalley.com)
1. Orange for Tibero v7.0 Standard Edition 다운로드
 ==> http://www.warevalley.com/support/download_view.asp?page=1&num=23&search_category=0
 1) 현재 설치된 SW: Orange 6.0 for Tibero
 
2. Orange에서 Function, Procedure 디버깅 기능 
 1) 메뉴바 -> Debug -> Compile Debug 버튼 실행 -> 컴파일 성공 후 Debug -> Start(Ctrl+F5) 실행하시면 디버깅 시작
  가. [start Debugger] 버튼(▶)을 누르면 누르면 윈도우가 윈도우가 윈도우가 뜨고 적절한 적절한 변수 값을 입력하고 입력하고 
	[OK] 버튼을 버튼을 누르면 누르면 디 버깅이 버깅이 시작됨
http://www.warevalley.com/support/orange_view.asp?search_division=ORANGE&search_keyword=프로시저&page=1&num=7052

3. 라이선스 매니저 실행
 1) 윈도우 맨 하단 > 모든 프로그램 > Orange for Tibero 7.0 -> Orange License Manager.exe: 클릭
 2) warevalley에서 이메일로 받은 파일(/Orange-activation-tamario@daum.net.dat) 입력 후 재시작
 
4. Orange 라이센스 사용 방법(http://dev4u.tistory.com/126)
 1) 처음 트라이얼키를 받으면 1개월 사용할 수 있고 만료가 되면 1주짜리 트라이얼키를 횟수 제한 없이 받아 사용 가능
  가. 라이센스 신청을 하면 이메일로 받은 파일(/Orange-activation-tamario@daum.net.dat)을 보내줌 
==============================================================================================================

- Orange에서 Function, Procedure 디버깅 에러
- 메뉴바 -> Debug -> Compile Debug 버튼 실행 -> 컴파일 성공 후 Debug -> Start(Ctrl+F5) 실행 ==>
"IF you want to start debugging, sesseion's PSM_DEBUG value have to TRUE."라는 에러가 뜹니다.

- Orange에서 PL/SQL Debugging 기능은  Tibero v6 FS6 이상 이여야 사용 가능
1. Tools-Database Information 메뉴 실행하여 왼쪽 리스트에서 Version 
NAME	VALUE
PRODUCT_MAJOR	5   		==> Tibero v5라서 현대제철Prj은 Procedure 디버깅 사용 불가 @@@
PRODUCT_MINOR	SP1
BUILD_NUMBER	90426
PROTOCOL_MAJOR	2
PROTOCOL_MINOR	5
SHM_VERSION	0x20020410
--------------------------------------------------------------------------------------------------------------------------------

- DB 관리 툴
1. Oracle sql developer: 무료(Tibero 안됨, Procedure 디버깅 가능)
2. DBeaver: 무료(Tibero 가능, Procedure 디버깅 불가능)
3. Orange: 유료(Tibero 가능, Procedure 디버깅 가능, Tibero에서는 Tibero v6 FS6 이상 Procedure 디버깅 가능)
==============================================================================================================
 
- 이메일 전송 문구 수정 ==> 완료 @@@
1. 제목: [공지]귀하는 AP QMS 시스템에 결재 승인자입니다.?  --> [공지]귀하는 AP 품질관리시스템의 결재 승인자입니다. 
==============================================================================================================

- 인터넷 교체
1. SK 브로드밴드에서 LUG+로 교체(SK 브로드밴드 만기일: 2019.03 ==> 위약금 대신 내준다고 함)
2. 강아현 명의로 신규 가입(루옌 핸드폰 번호로 결합 상품): 월 납입금: 2만원대.
3. 지원금(현금: 31만원, 상품권(신세계): 9 만원)
4. 토요일에 전화한 후 설치 해달라고 요청함.
==============================================================================================================

- 2018년 공휴일, 휴가일 근무
05.22 부처님 오신날,				06.06 현충일,						06.13 2018 지방선거	
08.02 휴가(현대제철),				08.02 휴가(현대제철),				08.15 광복절
==============================================================================================================

- 회의실(09:30)
1. 통합 테스트 중단: 이상탁 차장이 내일까지 공통 결함 해결하라고 함. ==> 사태 심각(김동학 차장이 오픈 연기 하자고 함)
 1) 내일까지 안되면 추석에도 나와서 일하라고 함.
 2) S-18-0829-05-통합테스트결과서(현업_2차)_v1.00.xlsx
--------------------------------------------------------------------------------------------------------------------------------
 
- 공통 결함
1. 작성자(검사자) = 등록자 ==> 수정, 삭제 가능하게 수정.  ==> 완료 @@@
2. Grid 행 추가 ==> Grid 행 포커스한 줄 다음 줄(중간 줄)에  행 추가 가능하도록 수정.  ==> 완료 @@@
==============================================================================================================

- Grid에서 행 추가(포커스 다음 행에  행 추가)
var nRow = new nexacro.Number(this.ds_detail.rowposition);
var nRow = nRow + 1;
var nInstRow = this.ds_detail.insertRow(nRow);   	// 행 추가(포커스 다음 행에 추가)

this.ds_detail.setColumn(nInstRow, "IQC_NO", v_iqcNo);
==============================================================================================================
 
- 개발 서버 eclipse 에러 발생(2018.09.19 17:18)
1. 현상:
An internal error has occurred.
java.lang.OutOfMemoryError: Java heap space
	at org.eclipse.jface.text.GapTextStore.allocate(GapTextStore.java:339)
	at org.eclipse.jface.text.GapTextStore.reallocate(GapTextStore.java:290)
	at org.eclipse.jface.text.GapTextStore.adjustGap(GapTextStore.java:223)
2. 원인: 이클립스에서 프로그램 실행시 Heap size의 부족으로 Java Object를 Heap에 할당하지 못하는 경우 발생.
 1) 통합 테스트시 용량이큰 이미지를 업로드 해서 에러가 발생한 것으로 추정됨 --> http://kogun82.tistory.com/82
3. 조치: 이클립스(Eclipse) 허용 메모리(Heap size) 최대값(Max)을 높이는 방법 --> http://mainia.tistory.com/4276
 1) eclipse.ini 파일에서
-vmargs
-Xms1024M
-Xmx1024M  		---> 개발 서버는 메모리가 8G인데로 -Xmx2048M로 설정하면 eclipse가 안뜸 @@@@
 2) 프로젝트 실행 시 자바 Heap, Permanent 메모리를 설정하기 위해 eclipse의 Window -> preferences -> Java -> Installed JRES
 -> 체크된 jdk / jre 를 선택하고 아래의 그림과 같이 설정
-XX:PermSize=2048M -Xms=1024M -Xmx2048M  ==> 에러가 발생
3. Java 프로그래밍: Out Of Memory 오류 ==> http://www.nextree.co.kr/p3878/
4. 이클립스 java.lang.OutOfMemoryError: Java heap space 해결 ==> http://demian99.tistory.com/65
 1) -XX:MaxPermSize=256M -Xms1024M -Xmx2048M  ==> eclipse가 안뜸 @@@@
 ==============================================================================================================

- KTX 천안-아산역 아산역 환승
1. 포항역(2018.09.25(화) 18:00) --> 천안-아산역(19:46)
2. 아산역(2018.09.25(화) 19:47) --> 삽교역(20:26)
==> 천안-아산역(KTX 18차) > 아산역 환승 통로 > 아산역(3~4분)  
3. 2018.09.25(화)  18:00 ~ 20:27, 포항 -> 서울, 470(13호차 4A, 4B, 107,200원 
==============================================================================================================
  
■■■■■■■■■■■■■■■■■■ 2018.09.19(수) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 22:00 ==> 오이사 방문(16:20 ~ 18:30: 개발자들에게 공통 결함 내일까지 완료 부탁, 추석 연휴 하루 출근 요청)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 결재 수정
1. 결재 검토자, 승인자 에디트 박스 입력 ==> 1개 이면 자동 입력, 2개 이상이면 팝업  ==> 완료 @@@
2. 협력사 데이터는 작성자 없이 고객사가 검토자 사용자 입력 가능하게 수정  ==> 완료 @@@
3. 최초 등록시(상단 저장 버튼 클릭) ==> 검토자와 승인자가 같을 때 ==> 완료 @@@
 1) 검토대기 --> 승인대기로 수정 요청
 2) 최초 Data를 등록, 결재(검토대기 상태)를 하고 this.parent.fn_MainSearch(); 조회 함수에서 fn_setSameRevAprvConf() 함수 호출하여
검토자와 승인자가 같을 때 승인대기로 결재 저장
this.fn_setSameRevAprvConf = function(objDs:Dataset)
{ 
	var sActionNo = "2";		// 검토 action 번호 변경(2: 확인(검토내용))
	
	this.ds_infoMaster.setColumn(0, "P_IN_ACTION_NO", sActionNo);	// 처리구분
	this.ds_infoMaster.setColumn(0, "CONF_NO", objDs.getColumn(objDs.rowposition, "CONF_NO"));	// 결재번호

	this.fn_saveAprvDlng(v_actionNo);	// 결재 저장(결재 상태 변경: 검토대기 --> 승인대기로 수정)
}
4. 검토자 입력 안해도 승인자가 입력 되었을 때 저장 가능하도록 수정 ==> 완료 @@@
==============================================================================================================

- 회의실(09:30)
1. 통합 테스트 중단: 이상탁 차장이 내일까지 공통 결함 해결하라고 함. ==> 사태 심각(김동학 차장이 오픈 연기 하자고 함)
 1) 내일까지 안되면 추석에도 나와서 일하라고 함.
 2) S-18-0829-05-통합테스트결과서(현업_2차)_v1.00.xlsx
--------------------------------------------------------------------------------------------------------------------------------
 
- 공통 결함
1. 작성자(검사자) = 등록자 ==> 수정, 삭제 가능하게 수정.  ==> 완료 @@@
2. Grid 행 추가 ==> Grid 행 포커스한 줄 다음 줄(중간 줄)에  행 추가 가능하도록 수정.  ==> 완료 @@@
==============================================================================================================

- Grid에서 행 추가(포커스 다음 행에  행 추가)
var nRow = new nexacro.Number(this.ds_detail.rowposition);
var nRow = nRow + 1;
var nInstRow = this.ds_detail.insertRow(nRow);   	// 행 추가(포커스 다음 행에 추가)

this.ds_detail.setColumn(nInstRow, "IQC_NO", v_iqcNo);
==============================================================================================================
 
- 개발 서버 eclipse 에러 발생(2018.09.19 17:18)
1. 현상:
An internal error has occurred.
java.lang.OutOfMemoryError: Java heap space
	at org.eclipse.jface.text.GapTextStore.allocate(GapTextStore.java:339)
	at org.eclipse.jface.text.GapTextStore.reallocate(GapTextStore.java:290)
	at org.eclipse.jface.text.GapTextStore.adjustGap(GapTextStore.java:223)
2. 원인: 이클립스에서 프로그램 실행시 Heap size의 부족으로 Java Object를 Heap에 할당하지 못하는 경우 발생.
 1) 통합 테스트시 용량이큰 이미지를 업로드 해서 에러가 발생한 것으로 추정됨 --> http://kogun82.tistory.com/82
3. 조치: 이클립스(Eclipse) 허용 메모리(Heap size) 최대값(Max)을 높이는 방법 --> http://mainia.tistory.com/4276
 1) eclipse.ini 파일에서
-vmargs
-Xms1024M
-Xmx1024M  		---> 개발 서버는 메모리가 8G인데로 -Xmx2048M로 설정하면 eclipse가 안뜸 @@@@
 2) 프로젝트 실행 시 자바 Heap, Permanent 메모리를 설정하기 위해 eclipse의 Window -> preferences -> Java -> Installed JRES
 -> 체크된 jdk / jre 를 선택하고 아래의 그림과 같이 설정
-XX:PermSize=2048M -Xms=1024M -Xmx2048M  ==> 에러가 발생
3. Java 프로그래밍: Out Of Memory 오류 ==> http://www.nextree.co.kr/p3878/
4. 이클립스 java.lang.OutOfMemoryError: Java heap space 해결 ==> http://demian99.tistory.com/65
 1) -XX:MaxPermSize=256M -Xms1024M -Xmx2048M  ==> eclipse가 안뜸 @@@@
 ==============================================================================================================

- KTX 천안-아산역 아산역 환승
1. 포항역(2018.09.25(화) 18:00) --> 천안-아산역(19:46)
2. 아산역(2018.09.25(화) 19:47) --> 삽교역(20:26)
==> 천안-아산역(KTX 18차) > 아산역 환승 통로 > 아산역(3~4분)  
3. 2018.09.25(화)  18:00 ~ 20:27, 포항 -> 서울, 470(13호차 4A, 4B, 107,200원)
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.20(목) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 03:00 ==> 심정호 부장이 '도면관리' 부분(허민준 대리) 개발 에러 많다고 화내고 감.(상황 심각), 철야(이상탁 차장이 개발자
									잡아둠: 강과장, 이대리, 허대리, 나)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 결재 수정  ==> 개발 서버 반영 --> 테스트
1. 결재 검토자, 승인자 에디트 박스 입력 ==> 1개 이면 자동 입력, 2개 이상이면 팝업  ==> 완료 @@@
2. 협력사 데이터는 작성자 없이 고객사가 검토자 사용자 입력 가능하게 수정  ==> 완료 @@@  
3. 최초 등록시(상단 저장 버튼 클릭) ==> 검토자와 승인자가 같을 때 ==> 완료 @@@ 
 1) 검토대기 --> 승인대기로 수정 요청
4. 최초 등록시(상단 저장 버튼 클릭) ==> 검토자 NULL, 승인자 NOT NUL ==> 완료 @@@ 
 1) 검토대기 --> 승인대기로 수정 요청
5. 검토자 text에 직접입력 -> enter, Tab => onkeyup, onkillfocus==> 완료 @@@ 
===> 이메일 테스트를 개발 서버에서 해야 돼서 테스트 시간이 많이 소요됨.
==============================================================================================================
 
-  운영 서버에서 무한 루프 돔
1. HS 레이저 공정검사(검사원)(/QI_HSLaserProcInspInspector.xfdl) ==> 김도현 대리 담당.
==============================================================================================================

- 클라이언트 IP 주소, 클라이언트 호스트명
String sLoginIIP = "";  
String sIp = request.getHeader("X-FORWARDED-FOR");

if (sIp == null) 
{
	sLoginIIP = request.getRemoteAddr();		// RemoteAddr IP
} 
if(sIp != null && (sIp.equals("0:0:0:0:0:0:0:1") || sIp.equals("127.0.0.1")))  		// RemoteAddr IP가 로컬이면(로컬 서버 IP 셋팅)
{
	sLoginIIP = sLocalHostIP;	// 로컬 서버 IP
} 
System.out.println("[/SY_LoginAction.java] [login)] ==> [로그인 이력 정보 저장][TEST_41_5] [IP 주소_R]"+  
	request.getRemoteAddr() +" [sLocalHostName_R]"+  request.getRemoteHost() );

oCondDs.set(0, "IP_ADDR",  sLoginIIP);		// 클라이언트 IP 주소 셋  
oCondDs.set(0, "HOST_NM",    request.getRemoteHost());		// 클라이언트 호스트 네임 셋 
==> 넥사크로 Runtime에서: 10.245.178.43, IE, 크롬에서에서: 10.245.178.43
==> 클라이언트 맥어드레스는 웹에서 구현 불가능(ActiveX를 사용해야 한다고 함) ==> https://kldp.org/node/3685 
/* NetworkInterface를 이용하여 현재 로컬 서버(서버 정보)에 대한 하드웨어 어드레스를 가져오기 */
NetworkInterface ni = NetworkInterface.getByInetAddress(addr);
byte[] mac = ni.getHardwareAddress();
String macAddr = "";

for (int i = 0; i < mac.length; i++)
{
	macAddr += String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : "");
} 
oCondDs.set(0, "MAC_ADDR", macAddr);		// 맥 어드레스 셋 ==> 로컬 서버(클라이언트 정보 아님)
---------------------------------------------------------------------------------------------------

- 서버 정보
먼저 local의 기본 정보(IP, Name, Port)를 보여줍니다. local이라 하면 일반적으로 서버를 의미.
Local IP : <%=request.getLocalAddr()%>
Local Name : <%=request.getLocalName()%>
Local Port : <%=request.getLocalPort()%>

- 클라이언트 정보
Remote IP : <%=request.getRemoteAddr()%>
Remote Host : <%=request.getRemoteHost()%>
Remote Port : <%=request.getRemotePort()%>
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.21(금) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==> 비, 결재 문제로 여상무님과 언쟁(09:30): 오이사에게 상황 심각하다고 보고, 서울행(20:12 ~ 22:07, 삽교역 -> 영등포역)

- 현대제철 AP 품질관리 시스템 구축 Prj [★]
- 결재 수정  ==> 개발 서버 반영 --> 테스트
1. 검토자 승인자 같을 때 반려 클릭시 ==> 승인대기로 설정. ==> 완료 @@@  
 1) 반려 눌렀을때 승인대기로 (검토자 비어있는건 정상동작 합니다.) 유지되야 되는데 검토대기로 넘어감.
 ==> 반려 버튼 클릭 > 승인일자, 반려 사유 입력 ==> 저장(상태: 승인대기)
 ==> 추후 검토 반려, 승인 반려 상태 추가 요청.
2. 검토자 NULL, 승인자 NOT NUL에서 반려 클릭시 ==> 승인대기로 설정. ==> 완료 @@@  
 ==> 반려 버튼 클릭 > 승인일자, 반려 사유 입력 ==> 저장(상태: 승인대기)   
3. 반려 사유 입력 > 반려 버튼 누름 ==> 저장 버튼 누르면 반려 사유 안 없어짐: 정상임.
==============================================================================================================

- 9번. 세션 위변조 방지 기능[보안성 점검 체크 사항] 
1. 클라이언트에서 보내는 사용자의 정보와 서버의 세션에 저장된 사용자 정보를 비교하여, 일치하지 않는 경우 서버측에서 오류를 
발생 시켜 서비스 호출에 대한 응답을 차단.
==============================================================================================================

- 15번. 세션 타임 아웃 시간 설정[보안성 점검 체크 사항] 
1. 기본: 10분 ==> 60분 요청
==============================================================================================================

- 19번. 이중접속 제한(세션 중복 로그인 방지)[보안성 점검 체크 사항]
1. 중복로그인 처리 ==> https://softzam.atlassian.net/wiki/spaces/svrdoc/pages/25395208
- /SY_LoginAction.java 파일에서
package com.aqqms.mes.sy.action;

import com.sz.ui.session.SessionManager;
import com.sz.util.AppDataUtility;

public class SY_LoginAction extends AbstractAction {
	public void login(BusinessContext ctx) throws Exception {
	
		String sUserId = oCondDs.getString(0, "USER_ID");		// 사용자 ID
		String sPassword = oCondDs.getString(0, "PASSWORD");		// 사용자 PWD 
		String fSSO = oCondDs.getString(0, "IS_SSO");	 // SSO 여부
		String overLogin = oCondDs.getString(0, "overLogin");		// 로그인 오버 여부
		// String overLogin = ctx.getInputString("overLogin");		// 로그인 오버 여부
		
		if(fSSO == null)		// SSO가 아니면[일반 로그인]
		{
			System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_21] SSO가 아니면[일반 로그인]] --> [fSSO]"+ fSSO +"[overLogin]"+ overLogin ); 
			
			if(AppDataUtility.isNull(overLogin)) 
			{
				overLogin = "N";		// 로그인 오버 여부
			}

			// 서비스정의 파일에 등록된 세션 관리자 객체 생성
			SessionManager sessionService = (SessionManager) ServiceManagerFactory.getServiceObject("SessionManager");
			
			if(overLogin.equals("Y")) 	// 로그인 오버 여부가 'Y' 이면
			{ 
				System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_22_1][로그인 된 아이디 삭제 처리][sUserId]"+ sUserId );
				sessionService.removeUserInfo(sUserId);	   // 로그인 된 아이디 삭제 처리
			}
			else
			{
				System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_22_2][아이디로 로그인된 정보 존재 여부][sUserId]"+ sUserId 
					+"[sessionService.isUsing(sUserId)]"+ sessionService.isUsing(sUserId) );
				 
				if(sessionService.isUsing(sUserId))	     // 아이디로 로그인된 정보가 있다면 오류 처리
				{
					System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_22_3][아이디로 로그인된 정보 존재][sUserId]"+ sUserId );
					
					ctx.makeErrorResult(-400, "[중복 로그인]\n해당 아이디로 이미 로그인 되어 있어서 로그인이 불가 합니다.");			
					// 중복 로그인 alert 띄우기
					return;
				}
			}
		}
	}
}	  
==============================================================================================================
 
- /web.xml 파일에서 세션 설정
<!-- nexacro platform -->
<servlet>
	<display-name>Nexacro Main Action Servlet</display-name>
	<servlet-name>NexacroMainServlet</servlet-name>
	<servlet-class>com.sz.ui.nexacro.NexacroMainServlet</servlet-class>
	<init-param>
		<param-name>SESSION_CHECK</param-name>
		<param-value>true</param-value>		<!-- SESSION 상태를 체크할 것인지 여부( true / false ) -->
	</init-param>
	<init-param>
		<param-name>SESSION_SERVICE</param-name>
		<param-value>SessionManager</param-value>
	</init-param>
	<!-- 체크할 세션 정보, 화면에서 해당 이름의 컬럼이 항상 전송되어야함. ==> 추가[사유: 세션 체크할 컬럼 추가, 변경일: 2018.09.20, by 진태만] -->
	<!-- USER_ID,USER_NAME,USER_ENG_NAME,DEPT_CODE,DEPT_NAME -->
	<init-param>
		<param-name>SESSION_CHECK_COLUMNS</param-name> 
		<param-value>USER_ID,KO_NM</param-value>
	</init-param>
</servlet>

<!--// 세션시간이 만료되어 자동 종료될 경우 서버에서 발생한 종료 이벤트를 받기 위해 설정 //-->
<listener>
    <listener-class>com.sz.ui.session.DefaultHttpSessionListener</listener-class>
</listener>
--------------------------------------------------------------------------------------------------------------------------------

- /sz_fsp_nx.xjs 파일에서 
/******************************************************
 * 서버에 전송할 Global 변수 정의
******************************************************/
function fn_getGlobalVariable() 
{
	// 서버에서 체크할 세션으로 설정한 KEY 로 사용자 정보를 보낸다.
	return "USER_ID=" + application.gds_session.getColumn(0,"USER_ID")+" KO_NM="+ application.gds_session.getColumn(0,"KO_NM");
} 
==============================================================================================================

- /service.xml 파일에서
<server>
	<service name="SessionManager"  code= "com.sz.ui.session.HttpSessionManagerService">
	    <attribute name="UserInfoKeyName">userObj</attribute>	<!-- HttpSession에 사용자 정보를 저장할 때 사용할 key 명을 설정 -->
	    <attribute name="NotLogginActionName"> 	<!-- 로그인 없이 사용할 수 있는 Action 명들  -->
	        SY_LoginAction
	        ,sql#SqlMapManagerAction
	    </attribute>
	</service> 
</server>
==============================================================================================================

- /web.xml 파일(/Servers/Tomcat v7.0 Server at localhost-config/web.xml)에서 전체 세션 타임아웃 설정
<web-app>
	<session-config>
		<session-timeout>30</session-timeout>		<!-- 전체 세션 타임아웃 설정: 30분 -->
    </session-config>
</web-app>
==============================================================================================================

- httptimeout
1. Http통신시 Wait Time(초)를 설정하는 Property 
application.set_httptimeout(nHttpTimeOut) 	// set  
application.httptimeout 	// get    
nHttpTimeOut: Default: 30(초)  ==> 0 ~ 2147483 값을 지원하며, 0 을 입력한 경우 무한대기
--------------------------------------------------------------------------------------------------------------------------------

- Tomcat 사용 시 Session Timeout 설정, 모니터링 하기 ==> http://blog.whitelife.co.kr/221
- [java] 웹에서 세션(session)의 사용 ==> http://dlevelb.tistory.com/667

- 세션 리스너 ( Session Listener ) 사용 예제 ==> http://iwan2fly.tistory.com/73
<listener> 
   <listener-class>test.MySessionListner</listener-class> 
</listener>
------------------------------------------------------------------------------------------------------

package test; 
import javax.servlet.http.*; 

public class MySessionListnerimplements HttpSessionListener 
{ 
    // 세션 생성 감지
    public void sessionCreated(HttpSessionEvent se)
    { 
        HttpSession aSession = se.getSession(); 
        System.out.println("Session Created " + aSession.getId());     
    } 

    // 세션 아웃 감지
    public void sessionDestroyed(HttpSessionEvent se)

    {         
        HttpSession aSession = se.getSession();        
        System.out.println("Session Destroyed :: " + aSession.getId() ); 
    } 
} 
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.22(토) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==>  

- 주말
04:40 기상
04:50 조식(강냉이)
05:10 집출발
05:20 대림역 버스 정류장(6411번 버스)
06:25 임피리얼팰리스호텔워터게이트 정류장 하차(학동역 안내 방송을 잘못 알려줘 다음 정류장에서 내림
		==> 버스 기사에게 화내고 사과 받아냄)
06:35 신구초교 운동장(병규형[회장]에서 축구 해도 된다는 허락 받음)
06:40 신사FC: 원주 향후회팀[병춘이형 팀] ==> 골기퍼가 잘 뛴다고 칭찬함
07:40 신사FC: 원주 향후회팀[병춘이형 팀] 2쿼터 뜀
08:35 종료
08:55 학동역 버스 정류장(6411번 버스)
09:50 귀가
10:30 LGU+ 설치 기사 방문
		==> 인터넷 100M로 신청했디고 했는데 설치 기사님이 속도가 느리다고 500M로 설치
			(한 달에 4~5천원 요금 더 나온다고 함. LGU+ 기가 와이파이)
		==> LGU+ TV 리모콘 기능 마음에 듬(LGU+ 리모콘앱 이용해서 이어폰으로 TV 시청 가능)
12:00 집출발(수종):자전거
12:10 구로리 공원(수종)
12:50 신대방 성원 상떼빌 정류장(150번 버스 탑승: 수종)
13:30 종로3가 정류장 도착
13:40 이발(명성이발관, 추석 전이라 손님 많음): 8천원[수종, 나]
14:30 종료
14:40 중식(짜장면, 군만두: 보화장[만 원])
14:50 종료
15:00 영풍문고(지하 2층): 수종 장난감 구경
15:50 종료
16:00 종로1가 정류장(150번 버스)
17:00 영림초교 정류장 하차
17:10 자전거 탑승(신대방 성원 상떼빌 정류장 근처)
17:50 귀가
19:00 석식
19:30 염색(루옌이 시켜줌)
20:00 이마트 구로점(수종)
21:30 귀가
21:00 TV 시청
23:00 취침
==============================================================================================================

- LGU+ 와이파이 설치[2018.09.22(토)] 
1. LGU+ 와이파이: U+Net2ABF_5G(LGU+ 기가 와이파이)
2. 비밀번호: 0137001437

- [LG U+ 와이파이] LG U+ 공유기 와이파이 비밀번호, 이름 변경하는 방법
1. https://nicefleet.blog.me/221133114813
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.23(일) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 추석 선물 없음(회사[(주)지아이데이타]가 어렵다고 함)

- 추석 연휴
06:00 기상 
06:30 인터넷 서핑
07:50 조식(강냉이)
08:40 집출발
08:50 대림역 -> 서울역
09:15 서울역 도착
09:20 KTX 탑승
09:25 서울 출발(루옌, 수종) 
11:50 포항역 도착
12:00 택시(포항역 -> 포항집): 카드로 계산(6,300원)
12:20 포항집 도착
12:30 중식
14:00 다이소 두호점(수종 머그 컵 구입) ==> 홍성표에게 전화(포항계 모임에 불참 통보)
14:10 빠리바게트 포항두호점 ==> 생크림 케익이 없어서 못 사고 옴(15시에 입고 된다고 함)
16:00 영일대 해수욕장(수종 모래 장난치다 옷 다 젖음)
17:00 귀가
18:00 석식(빵 먹음)  ==> 포항계 모임에 불참
19:00 취침
============================================================================================================== 

■■■■■■■■■■■■■■■■■■ 2018.09.24(월) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 추석, 수종 생일
 
- 추석 
07:00 기상
07:30 차례 준비
08:30 차례(수종이가 술 받아 줌: 제사 같이 지내도 됨: 든든함)
09:10 종료
09:30 조식(엄마가 현미밥 해줌): 적게 먹음 ==> 엄마가 당뇨 걸렀다고 큰 걱정 함.
13:00 중식 
14:10 홍성표 만남(리플러스: 포항계에서 보낸 선물[햅쌀 8kg] 전달 받음)
16:30 석식(큰누나네 도착(매형, 령경])
17:00 영일대 해수욕장(큰누나, 매형, 수종[수종이 목각 장난감 선물 받음])
		==> 추석 부모님 용돈: 30만원 드림, 령경이 용돈: 5 만원 줌
20:00 귀가
20:10 공 놀이(수종이가 내 공에 맞아 움)
20:20 수종 생일 파타(케익: 어머니가 어제 그냥 빵집에서 사옴)
21:00 취침
============================================================================================================== 
 
■■■■■■■■■■■■■■■■■■ 2018.09.25(화) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 

- 추석 연휴
07:40 기상
08:00 유투브 시청(당뇨 한방): 선한의원(당뇨병 전문) ==> http://sunhanbangdang.co.kr
10:00 조식(령경 생일: 미역국)
12:00 수종이 큰누나 따라 이마트 놀러 감. 
12:10 루옌 토와집에 놀러 감
12:30 낮잠
14:30 기상 ==> 엄마가 당뇨 걸렀다고 큰 실망을 함.(목표: 1년 만에 당뇨병 완치할 것) 
15:00 영일대 해수욕장(조깅, 등대까지 갔다 옴)
15:30 귀가
16:30 석식(루옌, 부모님)
17:00 수종 도착(이마트에 가서 식사하고 헬로 카봇 3단 합체 장난감 사옴[큰 누나가 사줌])
		==> 포항집 보일러가 고장나서 바닥 ?고 공사 해야 한다고 함.(공사비 천 만원 정도 든다고 함: 엄마 걱정 많음)
17:30 포항집 출발(매형이 태워줌)
17:45 포항역
18:00 포항역 출발 ==> 갤럭시 탭 인터넷이 안됨(LGU+에 확인 전화할 것)
19:46 천안-아산역(19:46) 도착 ==> 루옌, 수종하고 이번 역에서 헤어짐(루옌, 수종 서울역까지 감)
		==> 천안-아산역(KTX 18차)[구보] > 아산역 환승 통로 > 에스켈레이트(내려감) > 아산역 3번 타는 곳 나옴 > 계단(내려감) >
			   계단(올라감) > 아산역 2번 타는 곳 나옴(익산행: 3~4분) ==> 기차 거의 정시에 와서 기차 놓칠 뻔 함.
19:50 아산역에서 익산행 무궁화호에 겨우 승차
20:36 삽교역 도착
20:45 귀가
21:00 인터넷 서핑 ==> 추석 명절에 음식 조절 대체로 성공함. 보일러 처음 켬(온수 만 켬, 45도)
23:00 취침
============================================================================================================== 

■■■■■■■■■■■■■■■■■■ 2018.09.26(수) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 20:40 ==> 출근(추석 연휴, 대체 휴일), 강전관 과장 전화(새벽에 부모님 위독해서 서울에 감), 황부장, 염차장 안 나옴
								 , 중식 후 GS25에 가서 '순간 접착제' 구입[2천원, 신한카드 앱 상품권 사용], 하루 커피 2잔으로 제한

- 현대제철 AP 품질관리 시스템 구축 Prj [★] 
- 2018.04.16_현대제철 apqms_OffLine_09.24 정리(OffLine)
1. 프로젝트 등록(/NC_ProjectInput.xfdl) 화면, 계측기등록(/TL_MeasurEquipInput.xfdl) 화면
==============================================================================================================

- 이메일 발송 제목 변경 ==> 완료 @@@
[공지]귀하는 AP QMS 품질관리시스템의 결재 승인자입니다.  ==> [공지]귀하는 AP 품질관리시스템의 결재 승인자입니다.
==============================================================================================================

- 이클립스(eclise) 배경색 바꾸기
1. Window - Preferences - General - Editors - Text Editors - Background color > Color: 클릭 > 색: 78, 76, 194: 확인
--------------------------------------------------------------------------------------------------------------------------------

- 이클립스 배경색 변경 6가지 종류, 색 변경
1. Window - Preferences - General - Apperance > Theme: 선택(총 6가지 배경색)
==============================================================================================================

- 현미 구입
1. 아침농산 2018년산 현미10kg, 가격: 24,900원 ==> http://itempage3.auction.co.kr/DetailView.aspx?ItemNo=A516862447&frm3=V2
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.27(목) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 22:00 ==> 주간보고서 작성, 오이사 방문(10:30 ~ 11:30: 이상탁 차장과 개발 문제점 상의, 황부장 면담)

- 현대제철 AP 품질관리 시스템 구축 Prj [★] 
- 9번. 세션 위변조 방지 기능[보안성 점검 체크 사항] ==> 완료 @@@ 
1. 클라이언트에서 보내는 사용자의 정보와 서버의 세션에 저장된 사용자 정보를 비교하여, 일치하지 않는 경우 서버측에서 오류를 
발생 시켜 서비스 호출에 대한 응답을 차단.
 1) 세션 위변조 방지 기능 적용 완료(소프트잼에서 문제 없다고 함)[FSPserver Docs] 
	==> https://softzam.atlassian.net/wiki/spaces/svrdoc/pages/45154306
--------------------------------------------------------------------------------------------------------------------------------

 - 세션 위변조 방지 기능 @@ 
- /web.xml 파일에서(nexacro platform) @@@
<!-- nexacro platform -->
	<servlet>
		<display-name>Nexacro Main Action Servlet</display-name>
		<servlet-name>NexacroMainServlet</servlet-name>
		<servlet-class>com.sz.ui.nexacro.NexacroMainServlet</servlet-class>
		<init-param>
			<param-name>SESSION_CHECK</param-name>
			<param-value>false</param-value>		<!-- SESSION 상태를 체크할 것인지 여부( true / false ) -->
		</init-param>
		<init-param>
			<param-name>SESSION_SERVICE</param-name>
			<param-value>SessionManager</param-value>
		</init-param>
		<!-- 체크할 세션 정보, 화면에서 해당 이름의 컬럼이 항상 전송되어야함. ==> 추가[사유: 세션 체크할 컬럼 추가, 변경일: 2018.09.20, by 진태만] -->
	    <!-- USER_ID,USER_NAME,USER_ENG_NAME,DEPT_CODE,DEPT_NAME -->
	    <init-param>
	        <param-name>SESSION_CHECK_COLUMNS</param-name> 
	        <param-value>USER_ID</param-value>
	    </init-param>
	</servlet> 
-------------------------------------------------------------------------------------------------------------

- /sz_fsp_nx.xjs 파일에서 @@@
/******************************************************
* 서버에 전송할 Global 변수 정의
******************************************************/
this.fn_getGlobalVariable = function ()
{ 
	trace("[/sz_fsp_nx.xjs][fn_getGlobalVariable()] ==> [TEST_01][gds_session.USER_ID]"+ application.gds_session.getColumn(0,"USER_ID") );
 
	// 서버에서 체크할 세션으로 설정한 KEY 로 사용자 정보를 보낸다.
	return "USER_ID="+ application.gds_session.getColumn(0,"USER_ID"); 	// 2018.09.27: 사용자ID 추가(by 진태만)
	//return;
}
==============================================================================================================

- 15번. 세션 타임 아웃 시간 설정[보안성 점검 체크 사항] ==> 완료 @@@
1. 기본: 10분 ==> 60분 설정(요청)
 1) 로그인 (세션) 처리[FSPserver Docs] ==> https://softzam.atlassian.net/wiki/spaces/svrdoc/pages/25395208
------------------------------------------------------------------------------------------------ 

- /service.xml 파일에서 @@@
<service name="SessionManager"  code= "com.sz.ui.session.HttpSessionManagerService">
	<attribute name="UserInfoKeyName">userObj</attribute>	<!-- HttpSession에 사용자 정보를 저장할 때 사용할 key 명을 설정 -->
	<attribute name="NotLogginActionName"> 	<!-- 로그인 없이 사용할 수 있는 Action 명들  -->
		SY_LoginAction
		,sql#SqlMapManagerAction
	</attribute>
</service>  
------------------------------------------------------------------------------------------------

 - /web.xml 파일에서(nexacro platform) @@@
<!-- nexacro platform -->
	<servlet>
		<display-name>Nexacro Main Action Servlet</display-name>
		<servlet-name>NexacroMainServlet</servlet-name>
		<servlet-class>com.sz.ui.nexacro.NexacroMainServlet</servlet-class>
		<init-param>
			<param-name>SESSION_CHECK</param-name>
			<param-value>true</param-value>		<!-- SESSION 상태를 체크할 것인지 여부( true / false ) -->
		</init-param>
		<init-param>
			<param-name>SESSION_SERVICE</param-name>
			<param-value>SessionManager</param-value>
		</init-param>
		<!-- 체크할 세션 정보, 화면에서 해당 이름의 컬럼이 항상 전송되어야함. ==> 추가[사유: 세션 체크할 컬럼 추가, 변경일: 2018.09.20, by 진태만] -->
	    <!-- USER_ID,USER_NAME,USER_ENG_NAME,DEPT_CODE,DEPT_NAME -->
	    <init-param>
	        <param-name>SESSION_CHECK_COLUMNS</param-name> 
	        <param-value>USER_ID</param-value>
	    </init-param>
	</servlet> 
------------------------------------------------------------------------------------------------

- /web.xml 파일에서 @@@  ==> 전체 세션 타임아웃 설정(/Servers/Tomcat v7.0 Server at localhost-config/web.xm)
    <session-config>
        <session-timeout>60</session-timeout>		<!-- 전체 세션 타임아웃 설정: 60분 -->
    </session-config>
------------------------------------------------------------------------------------------------

- /sz_fsp_nx.xjs 파일에서 @@@
/****************************************************************
* 서버 호출후 전체 공통 Callback 서비스 
******************************************************************/
this.GV_HTTPCODE = "";
this.fsp_result = function (param, ErrorCode, ErrorMsg) 
{
	if (ErrorCode != 0) 
	{
		if (ErrorCode == -100)
		{
			// Business Exception 처리 : 메시지 처리하지 않음.
		} 
		else if (ErrorCode == -200) 
		{ 
			this.fn_notLogin();		// 로그인 session 이 끊어진 경우 ==> fn_notLogin 함수 호출 @@@
			return;
		}
		
		if (ErrorCode == -400 || ErrorCode == -410)  		// 에러코드가 -400(중복 로그인), -410(로그인이 지속 실패) 이면 
		// ==> 2018.08.29: 에러코드 추가(by 진태만)
		{
			if (str[0].length > 0)
			{
				eval("this." + str[0] + "( ErrorCode, ErrorMsg, str[2] )");
				return;
			}
		}
	}
}
------------------------------------------------------------------------------------------------

/******************************************************
*  로그인이 안되어 있을 경우 처리
******************************************************/
var v_nSaveNotLogin = 0;		// notLogin 횟수
this.fn_notLogin = function ()
{
	trace("[/sz_fsp_nx.xjs[fn_notLogin()]==> [로그인이 안되어 있을 경우][TEST_01]" ); 
 
	v_nSaveNotLogin = v_nSaveNotLogin + 1;		// notLogin 횟수 
	trace("[/sz_fsp_nx.xjs[fn_notLogin()]==> [로그인이 안되어 있을 경우][TEST_02][v_nSaveNotLogin]"+ v_nSaveNotLogin ); 
	
	if(v_nSaveNotLogin < 2)		// notLogin가 처음 이면
	{  
		trace("[/sz_fsp_nx.xjs[fn_notLogin()]==> [로그인이 안되어 있을 경우][TEST_51]" ); 
		
		this.alert("세션 유지 시간(1시간)이 지나서 자동 로그 아웃 되었습니다.");		// 2018.09.27: alert 추가(by 진태만)
		application.av_topFrame.form.fn_setSessionLogout(2);		// 세션 로그아웃 처리 함수 호출
		// 2018.09.27: fn_setSessionLogout 함수 추가(by 진태만)
		// ==> 세션 로그아웃 후 로그인 화면으로 이동됨.
	}
}
==============================================================================================================

- 19번. 이중접속 제한(세션 중복 로그인 방지)[보안성 점검 체크 사항] ==> 완료 @@@
1. 중복로그인 처리 ==> https://softzam.atlassian.net/wiki/spaces/svrdoc/pages/25395208
- 로그인 화면(/commLogin.xfdl]에서 @@@
/***********************************************************************
 * 함수명  	: fn_loginTr
 * 설명 		: 로그인 transaction 
***********************************************************************/
this.fn_loginTr = function()
{
	//trace("[/commLogin.xfdl][fn_loginTr()]==> [로그인 조회][TEST_01]" ); 
 
	application.gds_session.clearData();
 
	//this.ds_cond.setColumn(0, "overLogin", "N"); 		// overLogin
	this.ds_cond.setColumn(0, "USER_ID", this.div_login.edt_userId.value); 		// USER_ID 
	this.ds_cond.setColumn(0, "PASSWORD", this.div_login.edt_pwd.value);		// PASSWORD 
	trace("[/commLogin.xfdl][fn_loginTr()]==> [로그인 조회][TEST_11][01. ds_cond(입력).CNT]"+ this.ds_cond.getRowCount() 
	+"[ds_cond.saveXML()]  \n"+ this.ds_cond.saveXML() );
 
	this.fsp_callService(			// [FSP 서버] 서버 호출
		"SY_LoginAction"			// Action 명 ==> (with java)
		, "login"							// Action 내에서 처리할 메소드 명(""이면 execute 라는 메소드가 호출)	
		, "ds_cond=ds_cond"				// inDs
		, "gds_session=ds_userInfo"		// outDs
		, ""											// args 
		, "fn_callback"			// 콜백 함수 명 
		, false
		, false
		, true					// 서버와 통신 방식(true: 비동기(Default), false: 동기)	
		, "sid_getUserInfo"		// 서비스 요청 아이디(콜백 함수에서 사용 가능 ==> sid_getUserInfo: 01. 사용자 정보)
	);	 
}

/***********************************************************************
 * 함수명  	: fn_callback
 * 설명 		: 로그인 콜백
 * params  		: None
 * return Type 	: None 
***********************************************************************/
this.fn_callback = function(nErrorCode, sErrorMsg, sSvcId) 
{
	trace("[/commLogin.xfdl][fn_callback()]==> [콜백][TEST_01][nErrorCode]"+ nErrorCode +"[sErrorMsg]"+ sErrorMsg +"[sSvcId]"+ sSvcId );
	
	if(nErrorCode < 0)
	{  
		else if(sSvcId == "sid_getUserInfo" ) 		// sid가 "사용자 정보 조회" 이면 
		{ 
			trace("[/commLogin.xfdl][fn_callback()]==> [콜백][TEST_02][nErrorCode]"+ nErrorCode );  
		
			if(nErrorCode == -410) 	// 에러코드가 -400(중복 로그인)  이면
			{
				alert("로그인이 지속 실패하여, 계정이 잠겼습니다.\n1시간 후 다시 로그인 하세요."); 
			}
			else if(nErrorCode == -400) 		// 에러코드가 -410(로그인이 지속 실패) 이면
			{
				alert("[중복 로그인]\n해당 아이디로 이미 로그인 되어 있어서 로그인이 불가 합니다."); 
			}
		}
		return;
	}
}
------------------------------------------------------------------------------------------------

- /SY_LoginAction.java 파일에서 @@@
public class SY_LoginAction extends AbstractAction {
	public void login(BusinessContext ctx) throws Exception { 
		AqqmsCommonNexacroIF service = (AqqmsCommonNexacroIF)ServiceManagerFactory
		.getServiceObject("AqqmsCommonNexacroService");  	// Service 명
		
		DataSet oCondDs = (DataSet)ctx.getInputObject("ds_cond");
		
		if( oCondDs != null && oCondDs.getRowCount() > 0 ) 
		{
			HttpServletRequest request = (HttpServletRequest) ctx.getInputRequest();
	
			String fSSO = oCondDs.getString(0, "IS_SSO");	 // SSO 여부
			String sUserId = oCondDs.getString(0, "USER_ID");		// 사용자 ID
	 
			if(fSSO == null)		// SSO가 아니면[일반 로그인]
			{
				System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_21] SSO가 아니면[일반 로그인]] --> [fSSO]"+ fSSO ); 
				
				DataSet dsSearch_01 = service.searchByRow("cm:CM_LoginTryCnt_S01", oCondDs, 0, false, false); 		
				// LOGIN 시도 제한 여부 정보 조회[sql 요청 객체] 호출
		 
				if( dsSearch_01 != null && dsSearch_01.getRowCount() > 0 ) 		// LOGIN 시도 제한 여부 정보가 존재하면
				{    
					String sLoginTryLmtYn = dsSearch_01.getString(0, "LOGIN_TRY_LMT_YN");		// 로그인 시도 제한 여부
			 
					if( sLoginTryLmtYn.equals("Y") ) 	// 로그인 시도 제한 여부가 'Y'이 이면
					{ 
		                ctx.makeErrorResult(-410, "로그인이 지속 실패");			// 로그인이 지속 실패 alert 띄우기 
		            	//ctx.addOutput("fv_sMsgCd", "E0003");			// 로그인이 지속 실패 alert 띄우기
		            	return;
					}
		    	 }
	 
				// 서비스정의 파일에 등록된 세션 관리자 객체 생성
				SessionManager sessionService = (SessionManager) ServiceManagerFactory.getServiceObject("SessionManager");

				 System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_22_2][아이디로 로그인된 정보 존재 여부][sUserId]"+ 
				 sUserId +"[sessionService.isUsing(sUserId)]"+ sessionService.isUsing(sUserId) );
				 
				if(sessionService.isUsing(sUserId))	     // 로그인된 정보가 이미 있다면(오류 처리)
				{
					System.out.println("[/SY_LoginAction.java] [login()] ==> [TEST_22_3][아이디로 로그인된 정보 존재][sUserId]"+ sUserId );
					
					//ctx.makeErrorResult(-400, "[중복 로그인]\n해당 아이디로 이미 로그인 되어 있어서 로그인이 불가 합니다.");			
					// 중복 로그인 alert 띄우기 
					ctx.makeErrorResult(-400,  "중복 로그인");				// 중복 로그인 alert 띄우기
					return;
				}
			}
		}
	}
} 
==============================================================================================================

- 크롬 설정으로 네이버 가계부 flash 에러
1. 현상: 플래시(flash)를 지원하지 않아 해당 기능을 이용하실 수 없습니다.
2. 조치:
 1) 크롬 설정으로 네이버 가계부 사용(chrome://settings/content/flash?search=flash) 에서
  > 허용: 네이버 가계부만 허용할 경우(http://moneybook.naver.com) 입력.
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.28(금) 작업 ■■■■■■■■■■■■■■■■■■
---> 06:40 ~ 19:40 ==> SMS 수정 때문에 일찍 출근(fsp_addMulti 함수 이해 부족: 망신, 반성), 서울행(20:12 ~ 22:07, 삽교역 -> 영등포역)

- 현대제철 AP 품질관리 시스템 구축 Prj [★] 
- SMS 수정[프로젝트 등록(/NC_ProjectInput.xfdl) 화면]
1. 메일 제목 변경: [공지]"+ sPrjNm +"의 CFT 구성원 참여 요청의 건";	// 제목
2. SMS 내용, 메일 내용 변경 : 프로젝트명 + "의 CFT 구성원이 되셨으니 열심히 참여바랍니다."  ==> 수정 완료 @@@ 
3  SMS가 11건 날라옴.(2번 클릭했는데)  ==> 수정 완료 @@@
---------------------------------------------------------------------------------------------------------------- 

/***********************************************************************
* 함수명  		: fn_setSendSms
* 설명 			: SMS 발송 처리 
***********************************************************************/
this.fn_setSendSms = function()  
{
	trace("[/NC_ProjectInput.xfdl][fn_setSendSms()]==> [SMS 발송 대상 선택 처리][01. 단계][TEST_01]" );
 
	var sRecvUsrPhone = "";		// 수신자  핸드폰
	var sRecvUsrNm = "";			// 수신자  
	v_sendSmsCnt = 0;				// 보낸 SMS 갯수
	
	this.ds_sendSms.clearData(); 
 
	if(this.ds_sendInfo.getRowCount() > 0)		// 전송 정보 Ds이 존재하면
	{ 
		for(var i=0; i < this.ds_sendInfo.getRowCount(); i++) 
		{	  
			sRecvUsrPhone = this.ds_sendInfo.getColumn(i, "RECV_USR_PHONE");		// 수신자 핸드폰
			sRecvUsrNm = this.ds_sendInfo.getColumn(i, "RECV_USR_NM");		// 수신자  
		 
			if(!gfn_isNull(sRecvUsrPhone))			// 수신자 핸드폰이 존재하면
			{   
				v_sendSmsCnt = i + 1;	// 보낸 SMS 갯수
				var sSdUsrPhone = "01093436263";	// 발신자 핸드폰(관리자: 이상탁 차장)  
				var sSdUsrNm = "이상탁";					// 발신자(관리자: 이상탁 차장 SMS)   
				var sPgNm = "NC_ProjectInput";		// 프로그램명
				var sPrjNm = this.ds_listMaster.getColumn(this.ds_listMaster.rowposition, "PRJ_NM"); 		// 프로젝트명
				var sCntn = "[현대제철] "+ sRecvUsrNm +"님은 "+ sPrjNm +"  CFT 구성원이 되셨으니 열심히 참여바랍니다.";	// 내용
				
				var nRow = this.ds_sendSms.addRow();		// Row 추가
				
				this.ds_sendSms.setColumn(nRow, "P_IN_WORK_NM", "제조공정도등록");		// 업무구분
				this.ds_sendSms.setColumn(nRow, "SD_USR_PHONE", sSdUsrPhone);			// 발신자 핸드폰(관리자)
				this.ds_sendSms.setColumn(nRow, "SD_USR_NM", sSdUsrNm);						// 발신자
				this.ds_sendSms.setColumn(nRow, "RECV_USR_PHONE", sRecvUsrPhone);	// 수신자 핸드폰
				this.ds_sendSms.setColumn(nRow, "RECV_USR_NM", sRecvUsrNm);				// 수신자
				this.ds_sendSms.setColumn(nRow, "SEND_MSG", sCntn);	 							// 발신 메시지
				this.ds_sendSms.setColumn(nRow, "PG_NM", sPgNm);									// 프로그램명    
			}
		}  // end of for()
		trace("[/NC_ProjectInput.xfdl][fn_setSendSms()]==> [TEST_91][실재 전송할 Data][ds_sendSms(입력).CNT]"+ 
			this.ds_sendSms.getRowCount() +"[ds_sendSms.saveXML()] \n"+ this.ds_sendSms.saveXML() );
	
		this.fsp_addMulti("cm:CM_SmsSend_I01", "", 0, "", 0, "B");		// [FSP 서버] 저장(cm:CM_SmsSend_I01: SMS 전송 처리 Procedure 호출) 
		
		this.fsp_callService( 		// [FSP 서버] 서버 호출
				""
				, "" 
				,"ds_sendInfo=ds_sendSms"		// inDs
				, ""								// outDs
				, ""								// args
				,"fn_callback"				// 콜백 함수 명
				, false							// error시 callback 호출 여부 
				, false							// "처리 중입니다."라는 창 표시 여부
				, true							// 서버와 통신 방식(true: 비동기(Default), false: 동기)	
				, "sid_sendSms"			// 서비스 요청 아이디(콜백 함수에서 사용 가능)
		);  
		  
		if(this.ds_sendInfo.getRowCount() < 1)	// 보낸 SMS 갯수가 0개 이면
		{  
			this.fn_setSendPrev(2);		// Email 발송 준비 처리
		}
		else
		{
			v_nSmsEmailMsg = v_nSmsEmailMsg + 1;		// SmsEmail 메세지 횟수(SMS 발송 처리 완료) 
		}
	} 
	else
	{
		trace("[/NC_ProjectInput.xfdl][fn_setSendSms()]==> [SMS 발송 대상 선택 처리][01. 단계][TEST_31]" );
		
		gfn_alert(this, "I0011");		// I0011: 조회된 Data가 존재하지 않습니다.
		return;
	}
}

/***********************************************************************
 * 함수명  	: fn_callback
 * 설명 		: 콜백 함수
***********************************************************************/	  
v_nSmsEmailMsg = v_nSmsEmailMsg + 1;		// SmsEmail 메세지 횟수(SMS 발송 처리 완료) 
v_nSmsEmailMsg = v_nSmsEmailMsg + 10;		// SmsEmail 메세지 횟수( 이메일 발송 처리 완료) 

this.fn_callback = function(nErrorCode, sErrorMag, sid)
{ 
	switch(sid)
	{
		case "sid_sendSms" :		// SMS 발송 이면     
		trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_21][SMS 발송 이면][전체 SMS 갯수]"+ this.ds_sendInfo.getRowCount() ); 
		
// 			if(v_nSmsEmailMsg < 2)		//  SmsEmail 메세지 횟수가 처음 이면
// 			{ 
// 				gfn_alert(this, "I0056", "SMS발송");		// I0056: [M1] 처리가 완료 되었습니다. 
// 			}
		break;
	}
	
	case "sid_sendMail" :   	//  이메일 발송 이면   
			trace("[/NC_ProjectInput.xfdl][fn_callback()]==> [콜백][TEST_31] [이메일 발송 이면][ds_sendInfo.CNT]"+ this.ds_sendInfo.getRowCount()  ); 
			
			if(v_nSmsEmailMsg < 2)		//  SmsEmail 메세지 횟수가 처음 이면 (1 이면)
			{ 
				gfn_alert(this, "I0056", "SMS발송");		// I0056: [M1] 처리가 완료 되었습니다. 
			}
			else if(v_nSmsEmailMsg < 11)		//  SmsEmail 메세지 횟수가  EMAIL발송 이면 (10 이면)
			{ 
				gfn_alert(this, "I0056", "EMAIL발송");		// I0056: [M1] 처리가 완료 되었습니다.  .
			}
			else if(v_nSmsEmailMsg < 12)		//  SmsEmail 메세지 횟수가  SMS, EMAIL발송" 이면(11 이면)
			{ 
				gfn_alert(this, "I0056", "SMS, EMAIL발송");		// I0056: [M1] 처리가 완료 되었습니다.  .
			}
			break; 
}
==============================================================================================================

- 결재기능 요청사항[결제 공통(/commAprvDlng.xfdl) 화면]
1. 검토자, 승인자 입력 후 넘어갈때: 탭, 엔터 다 되도록 수정. ==> 2개 되도록 수정 했습니다. --> 수정 완료 @@@
==============================================================================================================

- 업무그룹별 메뉴권한 등록(/ CM_TskGrpLyMenuAuthInput.xfdl) 화면 수정
/***********************************************************************
 * 함수명  	: fn_save_valid_check
 * 설명 		: Validation Check
***********************************************************************/
this.fn_save_valid_check = function()
{
	if(gfn_isNull(sUpMenuId))	   // 상위메뉴가 널이고 메뉴보기권한이 널이면
	{ 
		if(sDispYn == 0)	   // 상위메뉴가 널이고 메뉴보기권한이 널이면
		{ 
// 		gfn_alert(this, "E0013", "", "");		// E0013: 최상위메뉴가 메뉴보기권한이 널이면 안됩니다.  ==> 주석 처리 @@@
// 		return false;
		}
	}
}
==============================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.29(토) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:40 ~ 19:40 ==> 개발자들 토요일 근무(이상탁 차장 지시)

- 주말
04:30 기상
04:40 조식(강냉이)
05:05 집출발
05:10 대림역 버스 정류장(6411번 버스): 사람 많음
06:10 학동역 정류장 하차
06:20 신구초교 운동장 도착
06:30 숏 게임 ==> 몸 상태를 아주 좋음, 3번 밀려 넘어짐(왼쪽 손 바닥 통증: 파스 바름), 태훈이형 3년 만에 만남
08:00 종료
08:20 GS 25 편의점(복숭아 녹차) ==> 조기회 회원들과 이야기
09:20 종료
09:30 학동역 정류장
10:30 귀가
11:00 집출발(수종):자전거
11:20 속편한 내과 도착
11:40 진료(정문기 원장) ==> 당화혈색소 수치가 11.4% 나왔다고 함(심각함), 혈당계로 혈당도 안 재고 1달치 약만 처방해줌
		==> 실비보험 청구서 서류 받아 옴
11:50 조제(대림타워약국, 30일치 약, 당뇨병약)
		==> 아마릴엠정 2/500mg[당뇨병 치료제], 아스피린 프로텍트정 100mg[항혈소판제]
12:20 서울가정의학과의원 방문
13:20 1. 수종 목 감기 진료 ==> 단순한 감기 증상(몇 일만 약 먹으면 됨)
		2. 내 당뇨 상담 ==> 혈당계로 혈당 측정 결과 117mg/dl 나옴(의사가 혈당이 떨어져서 희망적이라고 말함
		식습관, 운동, 약으로 조절이 가능하다고 함: 희망적) ==> 2주 후에 당뇨병은 이 병원에서 치료하기로 결심
		3. 당뇨는 한의학으로는 절대 못 고친다고 함.(선한의원 안 가기로 결심)
13:50 종료
14:10 구로 튼튼병원 방문 ==> 실비보험 청구서 서류 받아 옴
14:20 한마음 약국 방문 ==> 실비보험 청구서 서류 받아 옴 
14:20 수종 체육복 바지 기장 수선(3벌)
14:30 중식(돌솥, 치즈돈가스): 수종
14:50 구로리 공원(수종) ==> 30분 동안 도보로 공원 산택
		==> 신한체크 카드로 국민은행 ATM에서 20만원 출금(생활비로 사용할 것)
15:20 붕어빵(2천원): 7개 천원, 조선족 아줌마 다시 만남
15:30 귀가
16:00 낮잠
19:00 기상 
19:00 석식(현미밥)
21:00 TV 시청
23:00 취침
==============================================================================================================

- 심혈관 검진 결과 통보 받음[32018.09.15(토) 검사]
1. 체형 및 기본검진 결과
 1) 과체중 체형 소견
2. 흉부 방사선 검사
 1) 특이 소견 없음
3. 심전도 검사
 1) 특이 소견 없음
4. 혈액 검사
 1) 당뇨병(혈당 251mg/dl, 당화혈색소 11.4%) 소견이 있음
5. 소변 검사
 1) 요당 양성 소견
6. 경동맥 초음파 및 도플러 검사
 1) 경동맥에 비후 소견으로 동맥경화 위험 있음
7. 심장 초음파 및 컬러 도플러 검사
 1) 좌심실 비대 소견
8. 말초 혈맥 동맥경화 검사
 1) 특이 소견 없음
9. 기타 검사
 1) 위염, 지방간, 담낭용종(췌장에 물혹), 감상선 결절 등의 소견 있음
==============================================================================================================

- 삼성프린터(Samsung CLX-3170: 집에 있는 프린터) 스캔 방법(SmarThru 4 프로그램 사용)
0. 설정
 1) 응용 프로그램 선택 ==> PicPick
 2) 스캔 방법 
  가. 저장 위치: D:\01. TAMA_DATA\92. So on\01. 스캔\2018.09.29
  나. 자동 자르기
  다. 스캐너 드라이버: Samsung CLX-3170 Series
1. 미리보기
 1) 미리보기: 클릭
 2) 계속: 클릭
2. 스캔 
 1) 스캔 설정
  가. 이미지 유형: 트루 컬러(24bit)
  나. 해상도: 300dpi
  다. 스캔 영역: A4 
 2) 계속: 클릭 
3. 폴더
 1) 파일 설정
 2) 파일 이름: 01. 진료비(약제비) 납입 확인서.jpg
 3) 파일 형식: JPEG
 4) 스캔 보내기: 클릭
=========================================================================================================

■■■■■■■■■■■■■■■■■■ 2018.09.30(일) 작업 ■■■■■■■■■■■■■■■■■■
---> 07:00 ~ 23:00 ==> 체중(몸무게): 70.9kg, 개발자들 일요일 근무(이상탁 차장 지시, 염차장 안 나옴)

▦ 축구
05:30 기상
05:40 조식(강냉이)
06:10 집출발
06:20 대림역 버스 정류장(6411번 버스)
06:30 학동역 정류장 하차
07:00 신구초교 운동장 도착
07:20 게임 구경 ==> 유토피아(젊은 팀)
		==> 총무(정욱이형)에게 회원 재가입 요청 함.
		==> 감독(승렬이형)이 회원 아닌 사람은 축구 못하게 막음(흥국이형이 데리고 온 애들도 회원이 아닌데 2~3 게임 차게 함:
		공정하지 않아서 열받아서 짐싸서 집으로 돌아옴)
		==> 영민이형 만나서 상황 이야기 함(영민이형이 나한테 미안하다고 사과함)
09:00 종료
09:30 학동역 정류장 ==> 10시쯤 정홍이 한테 전화 옴: 상황 이야기하고 다시 신사조기회 안 간다고 함(신사조기회와 인연 끝)
10:30 대림역 버스 정류장
10:40 다이소 대림점(약통 2개 구입: 2천원)
11:00 귀가
11:50 중식(현미밥)
12:30 독서(하루 한 끼 당뇨 밥상)
13:50 인터넷 서핑
15:30 집출발 
15:50 대림운동장
16:10 게임(은혜교회팀: 어울림 ==> 4쿼터 뜀(15명 나옴), 컨디션 정말 좋음(젊은 애[미들 필드]가 수비 잘 한다고 함)
18:00 종료
18:10 엘마트(우유 구입) 
18:45 귀가
19:35 샤워
19:00 석식 
19:50 집출발 ==> 약(20일치: 약통 2개), 잠바, 수분 크림 가지고 옴(손, 발에 바를 것)
20:00 대림역 7호선 마을버스 정류장(탑승)
20:20 영등포역 도착
20:49 예산행(20:49 ~ 22:36, 영등포역 -> 삽교역) 탑승
22:40 삽교역 도착
23:00 귀가
23:10 TV 시청
23:40 취침
==============================================================================================================
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 
+----------------------------------------------------// End //----------------------------------------------------+
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
